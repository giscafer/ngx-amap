var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AMapClass.html",[0,0.247,1,1.54]],["body/interfaces/AMapClass.html",[0,0.106,1,1.108,2,0.158,3,0.02,4,0.019,5,0.019,6,0.024,7,2.122,8,0.092,9,0.353,10,4.571,11,3.866,12,4.143,13,2.756,14,2.99,15,4.143,16,4.494,17,4.77,18,4.331,19,3.638,20,4.143,21,1.667,22,4.77,23,3.747,24,3.274,25,4.494,26,1.53,27,1.318,28,2.983,29,4.713,30,4.494,31,2.868,32,4.571,33,3.997,34,2.99,35,3.356,36,3.356,37,4.143,38,4.77,39,2.811,40,3.866,41,4.494,42,4.571,43,4.494,44,4.77,45,0.619,46,1.341,47,3.175,48,0.345,49,0.005,50,2.001,51,0.004,52,1.363,53,0.365,54,2.122,55,0.386,56,0.546,57,0.408,58,0.251,59,1.139,60,0.37,61,4.138,62,4.138,63,3.582,64,4.138,65,4.138,66,3.582,67,4.138,68,4.138,69,4.138,70,4.138,71,3.582,72,4.412,73,4.138,74,3.582,75,4.138,76,4.138,77,4.138,78,4.412,79,4.412,80,4.138,81,4.138,82,4.138,83,3.92,84,3.582,85,4.138,86,4.138,87,4.138,88,3.582,89,4.138,90,4.138,91,4.138,92,4.138,93,4.138,94,4.138,95,4.138,96,0.257,97,0.751,98,0.653,99,0.527,100,1.279,101,1.322,102,1.486,103,2.122,104,2.122,105,1.322,106,1.9,107,2.484,108,1.486,109,1.486,110,2.122,111,2.122,112,5.011,113,1.646,114,1.758,115,2.389,116,1.755,117,2.122,118,1.37,119,1.011,120,1.755,121,1.486,122,1.322,123,2.484,124,2.122,125,1.9,126,1.755,127,1.486,128,1.17,129,1.486,130,1.486,131,5.934,132,3.545,133,3.545,134,3.545,135,3.545,136,3.545,137,3.545,138,0.077,139,2.122,140,1.424,141,2.122,142,1.9,143,2.122,144,3.545,145,2.122,146,4.566,147,2.752,148,1.17,149,2.122,150,2.122,151,2.122,152,2.122,153,1.9,154,2.122,155,2.122,156,2.122,157,2.122,158,2.122,159,2.484,160,1.9,161,2.122,162,1.9,163,2.38,164,1.755,165,3.545,166,3.542,167,3.542,168,2.122,169,3.545,170,1.9,171,2.122,172,3.545,173,2.122,174,3.545,175,2.122,176,0.002,177,0.001]],["title/interfaces/AMapEvent.html",[0,0.247,72,4.075]],["body/interfaces/AMapEvent.html",[0,0.255,2,0.38,3,0.029,4,0.045,5,0.045,6,0.061,8,0.221,21,2.839,45,1.207,48,0.53,49,0.005,51,0.003,52,2.477,53,1.517,55,1.602,56,1.358,57,0.371,58,1.044,59,4.217,60,1.538,72,5.721,138,0.04,176,0.004,177,0.003,178,5.094,179,6.918,180,6.918,181,6.918,182,6.918,183,6.918,184,6.918,185,8.153,186,6.717,187,6.717,188,5.094,189,8.426,190,2.874,191,9.587,192,6.918,193,5.094,194,6.918,195,5.094,196,6.918,197,5.094,198,4.563,199,6.918,200,7.855,201,5.094]],["title/interfaces/AddressComponent.html",[0,0.247,202,3.822]],["body/interfaces/AddressComponent.html",[0,0.275,2,0.409,3,0.031,4,0.048,5,0.048,6,0.037,8,0.238,9,0.723,48,0.564,49,0.005,51,0.003,57,0.423,96,0.146,115,4.542,138,0.043,142,4.914,176,0.004,177,0.003,202,5.64,203,5.486,204,5.486,205,5.41,206,8.682,207,8.682,208,8.682,209,4.047,210,5.829,211,8.682,212,8.682,213,5.829,214,8.682,215,8.682,216,8.682,217,6.735,218,5.486]],["title/directives/AmapAutocompleteDirective.html",[219,2.97,220,3.452]],["body/directives/AmapAutocompleteDirective.html",[3,0.016,4,0.025,5,0.025,6,0.064,8,0.123,9,0.447,10,3.02,45,0.785,48,0.477,49,0.005,51,0.001,52,1.622,53,1.628,55,1.337,56,1.133,57,0.405,58,0.871,60,1.344,96,0.195,138,0.022,148,2.48,176,0.002,177,0.001,209,3.223,219,2.711,220,3.151,221,1.991,222,6.988,223,7.025,224,2.545,225,3.304,226,4.101,227,4.329,228,4.101,229,2.088,230,3.304,231,4.497,232,2.607,233,2.398,234,4.616,235,1.597,236,3.304,237,3.304,238,4.663,239,4.923,240,2.802,241,3.304,242,3.304,243,3.304,244,4.923,245,5.248,246,3.304,247,5.581,248,3.91,249,4.616,250,4.329,251,5.581,252,1.305,253,2.842,254,4.446,255,4.616,256,5.684,257,4.497,258,4.497,259,2.842,260,1.52,261,2.842,262,2.842,263,2.842,264,6.314,265,2.842,266,4.497,267,2.842,268,4.497,269,2.842,270,4.497,271,2.842,272,2.842,273,4.497,274,4.497,275,4.663,276,2.842,277,2.35,278,3.304,279,4.446,280,2.842,281,1.908,282,2.842,283,2.842,284,2.142,285,2.842,286,2.711,287,2.842,288,2.088,289,2.711,290,2.842,291,1.405,292,3.747,293,2.842,294,0.959,295,0.915,296,1.268,297,2.842,298,4.844,299,5.403,300,0.768,301,1.094,302,1.908,303,0.888,304,2.545,305,2.545,306,1.908,307,2.088,308,1.908,309,2.088,310,3.304,311,1.552,312,3.151,313,0.56,314,0.87,315,1.933,316,2.088,317,2.842,318,2.842,319,2.842,320,2.842,321,2.842,322,2.842,323,1.154,324,2.088,325,2.842,326,2.842,327,2.842,328,6.346,329,2.842,330,2.842,331,3.719,332,2.35,333,2.842,334,2.842,335,2.842,336,2.842,337,2.842,338,2.842,339,2.842,340,2.842,341,2.088,342,1.487,343,2.842,344,2.842,345,2.842]],["title/injectables/AmapAutocompleteService.html",[254,3.452,346,0.933]],["body/injectables/AmapAutocompleteService.html",[1,1.995,3,0.026,4,0.04,5,0.04,6,0.057,8,0.197,9,0.635,10,5.673,21,1.995,45,1.114,46,1.716,48,0.454,49,0.005,51,0.004,53,1.38,55,1.16,56,0.983,57,0.338,58,0.756,60,1.114,96,0.233,138,0.05,148,3.519,176,0.003,177,0.002,190,1.659,223,6.208,232,2.432,233,3.174,235,2.113,252,1.316,254,4.472,260,0.997,275,3.331,284,2.16,286,2.733,289,2.733,291,2.64,294,1.53,295,1.46,296,2.083,300,1.225,301,1.746,302,5.673,303,1.417,311,1.261,313,1.259,314,0.93,315,2.743,342,2.136,346,1.209,347,1.605,348,3.856,349,3.75,350,2.208,351,2.733,352,2.982,353,6.383,354,2.501,355,3.109,356,4.534,357,0.957,358,4.534,359,2.223,360,1.396,361,1.687,362,1.687,363,2.223,364,1.632,365,1.632,366,1.483,367,4.061,368,1.483,369,4.061,370,2.208,371,1.632,372,5.717,373,4.061,374,2.113,375,4.061,376,2.208,377,2.113,378,4.061,379,3.177,380,2.027,381,4.061,382,2.069,383,3.177,384,4.061,385,4.061,386,4.061,387,1.876,388,4.061,389,2.5,390,4.061]],["title/classes/AmapAutocompleteWrapper.html",[275,3.62,313,0.972]],["body/classes/AmapAutocompleteWrapper.html",[1,1.748,3,0.021,4,0.033,5,0.033,6,0.06,8,0.164,9,0.556,10,5.278,21,2.457,45,0.976,46,1.429,48,0.511,49,0.005,51,0.003,52,1.702,53,1.538,55,1.591,56,1.313,57,0.383,58,1.01,60,1.487,96,0.218,114,2.153,138,0.043,148,2.083,176,0.003,177,0.002,190,1.382,209,1.76,223,6.565,232,2.234,233,1.623,235,1.081,240,3.485,241,4.11,242,4.11,252,1.096,254,2.646,260,1.464,275,4.11,284,2.664,286,3.371,288,2.775,289,3.371,291,2.573,296,1.578,300,1.021,301,1.454,302,5.278,303,1.18,311,1.05,313,1.103,314,0.839,315,2.404,342,1.962,346,1.059,348,4.078,349,3.124,350,1.84,352,2.081,354,1.48,355,1.84,357,0.797,359,2.565,360,1.163,361,1.405,362,1.405,363,2.565,364,1.359,365,1.359,366,1.235,367,5.01,368,1.83,369,5.967,370,2.724,371,1.359,372,5.01,373,3.383,374,3.105,375,5.01,376,1.84,377,2.607,378,3.383,379,3.919,380,1.689,381,3.383,382,1.724,383,2.646,384,3.383,385,3.383,386,3.383,387,1.563,388,3.383,389,2.083,390,3.383,391,1.976,392,2.314,393,2.788,394,5.593,395,3.777,396,3.777,397,2.276,398,3.777,399,3.777,400,3.777,401,1.592,402,2.397,403,1.623,404,1.623,405,1.454,406,2.276,407,3.777]],["title/directives/AmapCircleMarkerDirective.html",[219,2.97,408,3.62]],["body/directives/AmapCircleMarkerDirective.html",[3,0.01,4,0.015,5,0.015,6,0.065,8,0.075,9,0.391,14,4.768,16,1.214,21,0.933,26,1.115,27,0.356,28,2.31,45,0.686,48,0.38,49,0.005,51,0.001,52,1.005,53,1.662,55,1.122,56,0.951,57,0.397,58,0.731,60,1.37,96,0.164,138,0.013,176,0.002,177,0.001,219,1.799,221,1.214,222,7.11,225,2.193,226,2.89,228,2.89,229,1.273,230,2.193,232,2.332,235,1.125,236,3.435,237,2.193,238,3.435,243,2.193,246,2.193,250,3.051,252,0.866,260,0.656,264,6.709,278,2.193,279,3.275,281,1.163,291,2.722,292,2.64,294,1.007,295,0.961,296,1.487,298,5.499,299,5.873,300,0.468,301,0.667,303,0.541,306,1.163,307,1.273,308,1.163,309,1.273,310,2.193,311,1.093,312,2.091,313,0.342,314,0.988,316,1.273,323,2.141,324,1.273,341,1.273,342,1.947,360,0.533,392,1.235,408,2.193,409,8.003,410,1.552,411,3.933,412,3.252,413,2.818,414,2.277,415,2.179,416,3.435,417,1.899,418,2.315,419,1.86,420,1.799,421,2.469,422,1.899,423,2.731,424,2.51,425,2.651,426,2.818,427,3.139,428,3.139,429,3.252,430,2.628,431,2.913,432,2.913,433,2.913,434,2.731,435,3.933,436,3.933,437,3.933,438,3.933,439,3.933,440,3.933,441,3.933,442,3.933,443,3.933,444,3.933,445,3.933,446,3.933,447,3.933,448,1.733,449,3.866,450,2.985,451,2.985,452,1.733,453,1.807,454,1.733,455,1.733,456,1.733,457,1.733,458,1.104,459,1.733,460,1.928,461,1.733,462,4.325,463,1.733,464,1.733,465,1.733,466,1.733,467,1.733,468,1.733,469,1.733,470,1.733,471,1.733,472,1.733,473,1.733,474,1.733,475,1.733,476,1.733,477,1.733,478,1.733,479,1.733,480,1.733,481,1.733,482,1.733,483,2.985,484,1.733,485,1.733,486,1.733,487,1.733,488,1.733,489,1.733,490,1.733,491,1.733,492,1.733,493,2.193,494,1.733,495,1.454,496,1.733,497,1.08,498,1.362,499,1.733,500,0.906,501,2.193,502,1.733,503,1.733,504,1.733,505,1.733,506,1.733,507,1.433,508,1.733,509,1.273,510,1.344,511,2.89,512,1.552,513,1.344,514,1.344,515,2.985,516,1.552,517,1.733,518,1.344,519,1.733,520,1.733,521,1.552,522,1.552,523,1.733,524,1.733,525,1.733,526,1.733,527,1.733,528,1.733,529,1.433,530,1.273,531,1.433,532,1.433,533,1.433,534,1.733,535,1.433,536,1.733,537,1.733,538,1.733,539,1.733,540,1.733,541,1.733,542,1.733,543,1.733,544,1.733,545,1.733,546,1.733,547,1.733,548,1.733,549,1.733,550,1.733,551,1.733,552,1.733,553,1.733,554,1.733,555,1.733,556,1.733,557,1.733,558,1.733,559,1.733,560,1.733,561,1.733,562,1.733,563,1.344,564,7.08,565,1.733,566,1.733,567,1.163,568,1.733,569,1.733,570,1.733,571,1.733,572,1.344,573,1.733,574,1.733,575,1.733,576,1.733]],["title/injectables/AmapDistrictSearchService.html",[346,0.933,577,3.62]],["body/injectables/AmapDistrictSearchService.html",[1,1.939,3,0.025,4,0.038,5,0.038,6,0.056,8,0.189,9,0.617,17,5.064,21,1.939,45,1.083,46,1.649,48,0.423,49,0.005,51,0.004,53,1.356,55,1.128,56,0.956,57,0.332,58,0.735,60,1.083,96,0.236,114,2.782,115,5.021,138,0.048,163,2.926,176,0.003,177,0.002,190,1.594,232,2.389,233,3.106,235,2.068,252,1.265,291,2.601,294,1.47,295,1.404,296,2.038,300,1.178,301,1.678,303,1.362,311,1.212,313,1.224,314,0.91,315,2.667,342,2.099,346,1.175,347,1.543,348,3.799,350,2.123,351,2.626,352,2.93,354,2.431,355,3.023,357,1.525,359,2.162,360,1.342,361,1.621,362,1.621,363,2.162,364,1.568,365,1.568,366,1.425,368,1.425,370,2.123,371,1.568,374,2.031,376,2.123,377,2.031,379,3.053,380,1.948,382,2.832,387,1.803,389,2.403,458,0.626,577,4.56,578,5.832,579,3.202,580,6.206,581,6.062,582,3.903,583,4.358,584,3.053,585,3.903,586,3.903,587,3.38,588,3.903,589,5.559,590,3.903,591,3.903,592,3.903,593,3.903,594,2.224,595,3.38,596,3.903,597,3.38,598,3.903,599,3.903,600,3.903]],["title/classes/AmapDistrictSearchWrapper.html",[313,0.972,587,3.822]],["body/classes/AmapDistrictSearchWrapper.html",[1,1.723,3,0.021,4,0.033,5,0.033,6,0.058,8,0.161,9,0.548,17,5.111,21,2.437,45,0.962,46,1.402,48,0.493,49,0.005,51,0.004,52,1.409,53,1.498,55,1.54,56,1.26,57,0.367,58,0.969,60,1.427,96,0.225,114,2.809,115,5.097,138,0.043,163,2.488,176,0.003,177,0.002,190,2.017,232,2.213,233,1.592,235,1.06,252,1.076,291,2.555,296,1.555,300,1.001,301,1.427,303,1.158,311,1.03,313,1.088,314,0.829,315,2.37,342,1.944,346,1.044,348,3.971,350,1.805,352,2.052,354,1.452,355,1.805,357,1.646,359,2.541,360,1.141,361,1.379,362,1.379,363,2.541,364,1.333,365,1.333,366,1.212,368,1.804,370,2.686,371,1.333,374,3.07,376,1.805,377,2.57,379,3.864,380,1.657,382,2.517,387,1.533,389,2.043,391,1.939,392,2.281,393,2.749,397,2.233,401,1.562,402,2.37,403,1.592,404,1.592,405,1.427,406,2.233,458,0.946,577,2.723,578,6.096,579,2.723,581,6.096,584,2.596,585,3.319,586,4.94,587,4.278,588,5.9,589,4.94,590,3.319,591,4.94,592,3.319,593,3.319,594,1.891,595,4.278,596,3.319,597,4.278,598,3.319,599,3.319,600,3.319,601,4.94,602,4.94,603,5.515,604,3.706,605,3.706,606,3.706,607,2.488,608,3.706,609,3.706]],["title/injectables/AmapDrivingService.html",[346,0.933,610,3.452]],["body/injectables/AmapDrivingService.html",[1,1.782,3,0.022,4,0.034,5,0.034,6,0.056,8,0.168,9,0.567,18,4.642,21,1.782,26,1.36,45,0.995,46,1.467,48,0.446,49,0.005,51,0.004,53,1.368,55,1.037,56,0.879,57,0.314,58,0.676,60,0.995,96,0.228,138,0.044,176,0.003,177,0.002,190,1.418,232,2.262,233,2.906,235,1.935,252,1.125,291,2.597,294,1.308,295,1.249,296,1.907,300,1.048,301,1.492,303,1.211,311,1.078,313,1.125,314,0.939,315,2.906,342,2.349,346,1.08,347,1.372,348,3.793,350,1.888,351,2.336,352,2.774,354,2.234,355,2.777,357,1.427,359,1.986,360,1.193,361,1.442,362,1.442,363,1.986,364,1.395,365,1.395,366,1.268,368,1.268,370,1.888,371,1.395,374,1.807,376,1.888,377,1.807,380,2.549,382,3.403,387,1.604,393,2.842,453,2.318,458,0.819,594,2.91,610,3.995,611,5.822,612,2.848,613,4.076,614,5.702,615,5.568,616,3.877,617,3.877,618,2.848,619,3.877,620,2.336,621,3.007,622,3.472,623,3.007,624,3.007,625,4.423,626,3.472,627,3.472,628,3.007,629,2.198,630,3.152,631,2.264,632,1.979,633,5.107,634,2.504,635,3.472,636,3.007,637,3.472,638,3.007,639,3.472,640,3.007,641,3.472,642,3.007,643,3.472,644,1.519,645,3.007,646,3.007,647,3.472,648,3.007,649,3.472,650,2.504,651,3.007,652,2.198,653,3.472,654,3.472,655,2.336,656,3.472]],["title/classes/AmapDrivingWrapper.html",[313,0.972,623,3.822]],["body/classes/AmapDrivingWrapper.html",[1,1.444,3,0.017,4,0.026,5,0.026,6,0.062,8,0.128,9,0.46,18,4.107,21,2.197,26,1.361,45,0.806,46,1.113,48,0.496,49,0.005,51,0.004,52,2.066,53,1.59,55,1.547,56,1.281,57,0.366,58,0.985,60,1.58,96,0.207,114,1.779,138,0.036,176,0.002,177,0.001,190,2.088,213,1.975,232,1.962,233,1.264,235,0.842,252,0.854,291,2.439,296,1.303,300,0.795,301,1.132,303,0.919,311,0.818,313,0.911,314,0.814,315,2.453,342,2.154,346,0.875,348,4.216,350,1.433,352,1.719,354,1.152,355,1.433,357,1.484,359,2.253,360,0.905,361,1.094,362,1.094,363,2.253,364,1.058,365,1.058,366,0.962,368,1.511,370,2.251,371,1.058,374,2.66,376,1.433,377,2.154,380,2.066,382,2.952,387,1.217,391,1.539,392,1.912,393,2.303,401,1.24,402,2.054,403,1.264,404,1.264,405,1.132,406,1.773,453,2.676,458,0.929,594,2.359,610,2.061,611,6.472,612,2.161,613,1.773,615,4.925,620,1.773,621,2.281,622,4.139,623,3.585,624,4.427,625,3.585,626,2.634,627,4.139,628,2.281,629,2.621,630,3.277,631,1.718,632,1.501,633,4.139,634,2.984,635,2.634,636,3.585,637,2.634,638,3.585,639,2.634,640,5.017,641,2.634,642,5.017,643,2.634,644,2.534,645,2.281,646,5.017,647,2.634,648,5.017,649,2.634,650,2.984,651,2.281,652,2.621,653,2.634,654,2.634,655,1.773,656,2.634,657,3.238,658,4.139,659,4.139,660,3.585,661,3.585,662,4.139,663,2.941,664,2.941,665,2.941,666,2.941,667,2.941,668,2.634,669,2.634,670,1.501,671,2.941,672,1.718,673,2.941,674,1.401,675,2.634,676,1.773,677,2.941,678,1.833,679,2.941,680,2.634]],["title/injectables/AmapGeocoderService.html",[346,0.933,681,3.62]],["body/injectables/AmapGeocoderService.html",[1,1.615,3,0.019,4,0.03,5,0.03,6,0.05,8,0.148,9,0.514,21,1.615,22,5.265,45,0.902,46,1.287,48,0.375,49,0.005,51,0.004,52,0.869,53,1.203,55,0.94,56,0.797,57,0.295,58,0.613,60,0.902,96,0.225,138,0.04,176,0.003,177,0.002,190,1.244,209,2.409,232,2.401,233,2.687,235,1.789,248,3.622,252,0.987,277,5.778,284,1.62,291,2.767,294,1.147,295,1.095,296,2.12,300,0.919,301,1.309,303,1.063,311,0.945,313,1.02,314,0.88,315,2.221,342,2.003,346,0.979,347,1.204,348,3.43,350,1.656,351,2.049,352,2.599,354,2.025,355,2.518,357,0.718,359,1.801,360,1.047,361,1.265,362,1.265,363,1.801,364,1.224,365,1.224,366,1.112,368,1.112,370,1.656,371,1.224,374,1.585,376,1.656,377,1.585,380,2.311,382,2.359,383,3.622,387,2.587,389,1.875,397,3.116,430,2.576,453,1.166,681,6.228,682,5.83,683,2.812,684,4.63,685,4.275,686,4.63,687,4.851,688,3.622,689,4.63,690,4.63,691,4.63,692,4.63,693,4.63,694,4.63,695,4.63,696,4.63,697,4.63,698,4.63,699,4.63,700,4.63,701,4.63,702,2.85,703,4.63,704,4.63,705,6.258,706,4.63,707,4.63,708,4.63,709,4.63,710,4.63,711,4.63,712,5.169,713,5.265,714,3.4,715,3.4,716,3.046,717,3.046,718,4.63,719,3.046,720,3.046,721,3.046,722,2.638,723,3.046,724,3.046,725,2.638,726,2.638,727,3.046,728,3.046,729,3.046]],["title/classes/AmapGeocoderWrapper.html",[313,0.972,687,3.822]],["body/classes/AmapGeocoderWrapper.html",[1,1.577,3,0.019,4,0.029,5,0.029,6,0.056,8,0.143,9,0.502,21,2.316,22,5.192,45,0.881,46,1.247,48,0.48,49,0.005,51,0.004,52,1.29,53,1.445,55,1.479,56,1.205,57,0.354,58,0.926,60,1.364,96,0.216,138,0.039,176,0.003,177,0.002,190,1.206,209,2.353,232,2.248,233,1.416,235,0.943,240,3.145,248,2.309,252,0.957,277,4.174,284,2.404,291,2.744,296,1.73,300,0.891,301,1.269,303,1.03,311,0.916,313,0.996,314,0.865,315,2.169,342,1.975,346,0.956,348,3.831,350,1.605,352,1.878,354,1.291,355,1.605,357,0.695,359,2.395,360,1.015,361,1.226,362,1.226,363,2.395,364,1.186,365,1.186,366,1.078,368,1.651,370,2.458,371,1.186,374,2.859,376,1.605,377,2.353,380,2.257,382,2.304,383,3.536,387,2.088,389,1.817,391,1.724,392,2.088,393,2.516,397,3.042,401,1.389,402,2.207,403,1.416,404,1.416,405,1.269,406,1.986,430,1.643,453,2.541,681,5.051,682,6.511,683,2.725,684,2.952,685,2.725,686,2.952,687,4.758,688,2.309,689,2.952,690,2.952,691,2.952,692,2.952,693,2.952,694,2.952,695,2.952,696,2.952,697,2.952,698,2.952,699,2.952,700,2.952,701,2.952,702,2.783,703,2.952,704,2.952,705,4.521,706,2.952,707,2.952,708,2.952,709,2.952,710,2.952,711,2.952,713,5.192,716,4.521,717,5.495,718,4.521,719,2.952,720,4.521,721,2.952,722,3.915,723,2.952,724,2.952,725,3.915,726,2.556,727,2.952,728,2.952,729,2.952,730,4.521,731,3.708,732,5.047,733,3.296,734,3.296,735,3.296,736,3.296,737,3.296]],["title/directives/AmapHeatmapDirective.html",[219,2.97,738,3.62]],["body/directives/AmapHeatmapDirective.html",[3,0.015,4,0.024,5,0.024,6,0.064,8,0.119,9,0.541,21,1.362,23,4.223,27,0.561,45,0.949,48,0.333,49,0.005,51,0.001,52,1.733,53,1.645,55,1.233,56,1.045,57,0.375,58,0.804,60,1.51,96,0.201,118,1.765,138,0.021,176,0.002,177,0.001,219,2.628,221,1.915,222,7.052,225,3.203,226,3.996,227,4.219,228,3.996,229,2.008,230,3.203,232,2.665,235,1.556,236,4.561,237,3.203,238,4.561,239,4.815,243,3.203,246,3.203,250,4.219,252,1.266,264,3.996,278,3.203,279,4.349,281,1.835,291,2.782,292,1.835,294,1.471,295,1.404,296,1.913,298,5.519,299,3.203,300,0.739,301,1.052,303,0.854,306,1.835,307,2.008,308,1.835,309,2.008,310,3.203,311,1.512,312,3.055,313,0.539,314,0.344,316,2.008,323,2.755,324,2.008,341,2.008,342,2.021,360,0.841,417,2.521,420,2.628,422,2.521,429,4.498,430,3.094,458,1.038,460,2.816,498,1.99,500,1.43,509,2.008,510,2.12,511,3.996,512,2.448,513,2.12,514,2.12,516,2.448,518,2.12,521,2.448,522,2.448,529,2.26,530,2.008,531,3.606,532,3.606,563,2.12,572,2.12,738,3.203,739,7.938,740,2.448,741,5.439,742,4.36,743,4.349,744,3.521,745,3.905,746,6.208,747,4.872,748,5.134,749,5.134,750,4.815,751,2.733,752,5.134,753,4.36,754,4.36,755,4.854,756,2.733,757,2.733,758,2.733,759,2.733,760,4.727,761,2.733,762,2.733,763,2.733,764,2.733,765,2.733,766,4.36,767,2.733,768,2.733,769,2.733,770,2.733,771,2.733,772,2.733,773,2.733,774,4.36,775,2.733,776,1.647,777,2.733,778,2.733,779,2.733,780,2.733,781,2.733,782,2.008,783,4.36,784,2.733,785,6.783,786,2.448,787,2.448,788,2.733,789,2.733,790,2.733,791,2.733,792,2.733,793,2.448,794,2.448,795,4.36,796,2.733,797,2.733,798,2.733,799,2.733]],["title/components/AmapInfoWindowComponent.html",[140,3.308,800,3.822]],["body/components/AmapInfoWindowComponent.html",[3,0.058,4,0.016,5,0.016,6,0.063,8,0.079,9,0.407,14,0.851,25,1.28,26,0.436,28,1.369,39,2.778,40,1.101,45,0.714,48,0.098,49,0.005,51,0.001,52,1.391,53,1.609,55,1.079,56,1.075,57,0.372,58,0.703,60,1.393,96,0.185,105,4.348,118,1.18,138,0.014,140,2.748,176,0.002,177,0.001,190,0.668,219,1.101,220,1.28,221,1.28,225,2.295,226,3.007,227,3.175,228,3.007,229,1.342,230,6.146,232,2.374,235,1.171,236,3.559,237,2.295,238,3.559,239,3.757,243,2.295,246,2.295,252,0.907,255,2.583,256,4.338,260,1.469,264,5.126,278,2.295,279,3.393,281,1.226,291,2.754,292,2.748,294,1.054,295,1.318,296,2.524,298,4.888,299,3.999,300,0.494,301,0.703,303,0.571,306,1.226,307,1.342,308,1.226,309,1.342,310,2.295,311,1.347,312,2.189,313,0.36,314,0.61,316,1.342,323,1.662,324,1.342,341,1.342,342,2.127,360,0.562,408,1.342,412,3.385,453,2.392,460,2.017,509,2.295,510,1.417,511,1.342,513,1.417,514,1.417,518,1.417,533,1.511,535,1.511,563,1.417,572,1.417,688,1.28,738,1.342,782,1.342,800,3.757,801,2.798,802,1.827,803,1.342,804,1.827,805,1.827,806,8.404,807,7.759,808,1.636,809,3.124,810,4.092,811,3.124,812,3.124,813,4.092,814,3.983,815,4.092,816,2.919,817,3.757,818,4.006,819,3.393,820,3.559,821,2.643,822,2.798,823,2.583,824,2.798,825,4.843,826,4.006,827,4.006,828,4.006,829,4.092,830,2.307,831,4.316,832,4.006,833,4.092,834,4.092,835,4.092,836,4.092,837,1.827,838,2.748,839,2.919,840,4.092,841,4.006,842,4.092,843,3.252,844,3.124,845,1.827,846,1.827,847,1.827,848,1.827,849,2.089,850,1.827,851,1.827,852,1.827,853,3.696,854,1.827,855,1.827,856,1.827,857,1.827,858,1.827,859,1.827,860,1.827,861,1.827,862,1.827,863,1.827,864,1.827,865,1.827,866,1.827,867,1.827,868,3.124,869,1.827,870,2.583,871,1.827,872,3.124,873,1.827,874,2.583,875,1.827,876,1.827,877,1.827,878,1.827,879,1.827,880,1.827,881,1.636,882,2.189,883,1.827,884,1.511,885,1.827,886,1.636,887,1.827,888,1.827,889,2.295,890,3.124,891,1.827,892,3.124,893,1.827,894,1.827,895,1.827,896,1.827,897,1.827,898,1.827,899,1.827,900,1.827,901,1.827,902,1.827,903,1.827,904,3.124,905,1.827,906,1.827,907,4.092,908,1.827,909,1.827,910,1.827,911,1.827,912,1.827,913,1.827,914,1.511,915,6.977,916,1.827,917,1.827,918,4.843,919,1.827,920,3.124,921,1.827,922,1.827,923,1.827,924,1.827,925,1.827,926,1.827,927,1.827,928,1.827,929,1.827,930,1.511,931,2.583,932,3.124,933,4.843,934,1.827,935,1.827,936,1.511,937,1.827,938,1.511,939,1.28,940,1.827,941,1.511,942,1.827,943,3.124,944,1.511,945,1.827,946,1.827,947,1.511,948,1.827,949,1.511,950,1.511,951,1.827,952,1.511,953,1.827,954,1.511,955,1.827,956,1.511,957,1.827,958,1.342,959,1.827]],["title/injectables/AmapMouseToolService.html",[346,0.933,960,3.62]],["body/injectables/AmapMouseToolService.html",[1,1.744,3,0.021,4,0.033,5,0.033,6,0.053,8,0.163,9,0.555,14,1.755,21,1.177,27,1.748,28,1.65,30,4.658,34,1.755,35,1.97,36,1.97,45,0.974,46,1.425,48,0.357,49,0.005,51,0.002,53,1.266,55,1.015,56,0.86,57,0.331,58,0.661,60,0.657,96,0.226,118,3.604,138,0.043,176,0.003,177,0.002,232,2.494,233,2.857,234,3.114,235,1.902,252,1.093,260,0.827,291,2.731,292,3.747,294,1.27,295,1.213,296,1.875,300,1.017,301,2.148,303,1.177,311,1.047,313,1.311,314,0.837,315,2.398,323,3.626,331,5.499,332,3.114,342,2.534,346,1.057,347,1.333,348,3.583,351,2.269,352,2.735,354,2.186,357,0.795,359,1.944,360,1.159,361,1.401,362,1.401,363,1.944,364,1.355,365,1.355,366,1.231,368,1.231,371,1.355,374,1.755,377,1.755,380,1.683,387,1.558,389,2.076,460,2.432,672,2.199,914,3.114,960,4.1,961,7.236,962,6.09,963,3.114,964,5.58,965,4.998,966,3.765,967,3.765,968,3.477,969,3.477,970,5.124,971,4.143,972,2.92,973,3.372,974,3.372,975,3.114,976,3.372,977,3.372,978,3.372,979,3.372,980,3.372,981,3.372,982,3.372,983,3.372,984,3.372,985,3.372,986,1.97,987,4.998,988,3.372,989,3.372,990,2.92,991,3.372,992,2.92,993,3.372,994,2.92,995,3.372,996,2.92,997,3.372,998,2.528,999,3.114,1000,2.92,1001,3.372,1002,2.92,1003,3.372,1004,2.92,1005,3.372,1006,2.92,1007,3.372,1008,2.92,1009,3.372,1010,2.92,1011,2.528,1012,3.372,1013,3.372,1014,3.372,1015,3.372,1016,3.372,1017,3.372,1018,3.372,1019,3.372]],["title/classes/AmapMouseToolWrapper.html",[313,0.972,972,3.822]],["body/classes/AmapMouseToolWrapper.html",[1,1.303,3,0.015,4,0.023,5,0.023,6,0.061,8,0.112,9,0.415,14,2.443,21,1.879,27,1.355,28,2.297,30,4.213,34,2.443,35,2.742,36,2.742,45,0.728,46,0.978,48,0.415,49,0.005,51,0.001,53,1.564,55,1.635,56,1.354,57,0.389,58,1.041,60,1.512,96,0.197,118,1.67,138,0.032,176,0.002,177,0.001,190,2.916,232,2.482,233,1.111,234,4.335,235,0.74,252,0.751,260,1.152,291,2.78,292,3.519,294,0.872,295,0.833,296,1.176,300,0.699,301,1.606,303,0.808,311,0.719,313,1.034,314,0.66,315,1.792,323,3.721,331,4.335,332,2.138,342,2.341,346,0.79,348,4.145,352,1.551,354,1.013,357,1.106,359,2.095,360,0.796,361,0.962,362,0.962,363,2.095,364,0.93,365,0.93,366,0.846,368,1.364,371,0.93,374,2.443,377,1.944,380,1.156,387,1.07,389,1.426,391,1.353,392,1.725,393,2.079,401,1.09,402,2.164,403,1.111,404,1.111,405,0.995,406,1.558,460,2.693,644,1.013,672,1.51,816,2.514,914,2.138,960,1.9,961,7.665,962,7.046,963,2.138,965,2.316,968,3.747,969,3.747,970,5.605,971,4.623,972,3.235,973,4.695,974,2.316,975,2.138,976,2.316,977,2.316,978,2.316,979,2.316,980,2.316,981,2.316,982,2.316,983,2.316,984,2.316,985,2.316,986,2.182,987,3.736,988,2.316,989,2.316,990,3.235,991,2.316,992,3.235,993,2.316,994,3.235,995,2.316,996,3.235,997,2.316,998,1.736,999,2.138,1000,3.235,1001,2.316,1002,3.235,1003,2.316,1004,3.235,1005,2.316,1006,3.235,1007,2.316,1008,3.235,1009,2.316,1010,3.235,1011,1.736,1012,2.316,1013,3.736,1014,2.316,1015,2.316,1016,2.316,1017,2.316,1018,2.316,1019,2.316,1020,4.17,1021,3.736,1022,3.736,1023,3.736,1024,3.736,1025,4.17,1026,2.586,1027,2.586,1028,2.586,1029,2.586,1030,2.586,1031,2.586,1032,2.586,1033,2.586,1034,2.586,1035,2.586,1036,2.586,1037,2.586,1038,2.586,1039,2.586,1040,2.586]],["title/injectables/AmapPlaceSearchService.html",[346,0.933,1041,3.62]],["body/injectables/AmapPlaceSearchService.html",[1,1.742,3,0.021,4,0.033,5,0.033,6,0.053,8,0.163,9,0.554,13,2.854,21,1.742,32,4.46,34,1.752,45,0.973,46,1.422,48,0.479,49,0.005,51,0.005,53,1.265,55,1.013,56,0.859,57,0.31,58,0.66,60,0.973,96,0.218,112,5.811,114,2.146,138,0.043,176,0.003,177,0.002,190,1.375,232,2.228,233,2.854,235,1.9,252,1.091,260,0.826,284,1.79,286,2.266,289,2.266,291,2.73,294,1.268,295,1.211,296,1.873,300,1.016,301,1.447,303,1.175,311,1.045,313,1.099,314,1.035,315,2.395,342,2.328,346,1.056,347,1.331,348,3.581,350,1.831,351,2.266,352,2.733,354,2.184,355,2.715,357,0.793,359,1.941,360,1.157,361,1.398,362,1.398,363,1.941,364,1.353,365,1.353,366,1.23,368,1.23,370,1.831,371,1.353,374,1.752,376,1.831,377,1.752,379,2.634,380,3.285,382,3.353,383,5.147,387,1.555,389,2.073,424,2.992,430,2.778,453,1.911,458,0.954,578,5.497,579,2.762,644,1.473,1041,4.095,1042,5.574,1043,5.268,1044,3.759,1045,3.759,1046,3.367,1047,2.916,1048,3.367,1049,4.992,1050,3.367,1051,3.367,1052,3.367,1053,3.367,1054,2.762,1055,3.367,1056,2.762,1057,2.762,1058,3.367,1059,2.762,1060,3.367,1061,2.762,1062,3.367,1063,3.367,1064,3.367,1065,2.634,1066,3.367,1067,2.634,1068,3.367,1069,3.367,1070,2.762,1071,4.992,1072,3.367,1073,3.367,1074,3.367,1075,2.762,1076,3.367,1077,3.367]],["title/classes/AmapPlaceSearchWrapper.html",[313,0.972,1047,3.822]],["body/classes/AmapPlaceSearchWrapper.html",[1,1.267,3,0.014,4,0.022,5,0.022,6,0.062,8,0.108,9,0.403,13,3.142,21,2.025,32,3.957,34,2.386,45,0.708,46,0.945,48,0.513,49,0.005,51,0.004,52,2.012,53,1.579,55,1.623,56,1.36,57,0.384,58,1.046,60,1.574,96,0.184,112,6.189,114,1.971,138,0.031,176,0.002,177,0.001,190,0.914,209,1.164,232,1.787,233,1.073,235,0.715,240,2.527,241,2.98,242,2.98,252,0.725,260,1.125,284,1.932,286,2.444,288,1.835,289,2.444,291,2.639,296,1.144,300,0.675,301,0.962,303,0.781,311,0.694,313,0.8,314,0.874,315,1.743,342,2.03,346,0.768,348,4.187,350,1.217,352,1.509,354,0.979,355,1.217,357,0.527,359,2.053,360,0.769,361,0.929,362,0.929,363,2.053,364,0.899,365,0.899,366,0.817,368,1.326,370,1.975,371,0.899,374,2.386,376,1.217,377,1.89,379,2.841,380,2.635,382,2.689,383,4.129,387,1.033,389,1.377,391,1.307,392,1.678,393,2.021,397,1.505,401,1.053,402,1.842,403,1.073,404,1.073,405,0.962,406,1.505,424,3.163,430,2.937,453,2.02,458,1.131,578,6.428,579,1.835,582,2.237,644,2.309,672,2.369,1041,1.835,1043,4.351,1046,3.632,1047,3.146,1048,4.586,1049,3.632,1050,2.237,1051,3.632,1052,2.237,1053,2.237,1054,2.98,1055,2.237,1056,2.98,1057,1.835,1058,2.237,1059,2.98,1060,2.237,1061,2.98,1062,2.237,1063,3.632,1064,2.237,1065,2.841,1066,2.237,1067,4.129,1068,2.237,1069,2.237,1070,2.98,1071,3.632,1072,2.237,1073,2.237,1074,2.237,1075,2.98,1076,2.237,1077,2.237,1078,3.632,1079,3.632,1080,3.632,1081,3.632,1082,3.632,1083,3.632,1084,3.632,1085,3.632,1086,4.055,1087,2.498,1088,2.498,1089,2.498,1090,2.237,1091,2.498,1092,2.498,1093,2.498,1094,2.498,1095,2.498,1096,2.98,1097,2.498,1098,2.498,1099,2.498,1100,2.498,1101,1.835,1102,2.498,1103,1.937,1104,2.066,1105,2.498,1106,2.498]],["title/injectables/AmapRidingService.html",[346,0.933,1107,3.452]],["body/injectables/AmapRidingService.html",[1,1.894,3,0.024,4,0.037,5,0.037,6,0.057,8,0.183,9,0.603,21,1.894,38,5.758,45,1.058,46,1.596,48,0.326,49,0.005,51,0.004,53,1.415,55,1.102,56,0.934,57,0.327,58,0.718,60,1.058,96,0.234,138,0.047,176,0.003,177,0.002,190,1.543,232,2.353,233,3.049,235,2.03,252,1.224,291,2.674,294,1.423,295,1.358,296,2.001,300,1.14,301,1.624,303,1.318,311,1.172,313,1.196,314,0.977,315,3.049,342,2.28,346,1.148,347,1.493,348,3.905,350,2.054,351,2.542,352,2.886,354,2.375,355,2.953,357,0.89,359,2.111,360,1.298,361,1.569,362,1.569,363,2.111,364,1.517,365,1.517,366,1.379,368,1.379,370,2.054,371,1.517,374,1.966,376,2.054,377,1.966,380,2.71,382,3.541,387,1.745,393,3.021,453,2.078,594,3.094,613,4.277,618,3.098,629,2.392,630,3.308,631,2.463,632,2.153,644,1.652,655,2.542,1107,4.247,1108,6.638,1109,3.488,1110,6.062,1111,5.758,1112,4.217,1113,4.217,1114,4.217,1115,2.955,1116,3.777,1117,3.777,1118,3.271,1119,3.777,1120,5.43,1121,3.777,1122,3.777,1123,3.777,1124,5.43,1125,3.777,1126,3.777,1127,3.777]],["title/classes/AmapRidingWrapper.html",[313,0.972,1118,3.822]],["body/classes/AmapRidingWrapper.html",[1,1.778,3,0.022,4,0.034,5,0.034,6,0.058,8,0.168,9,0.566,21,2.48,38,5.56,45,0.993,46,1.462,48,0.426,49,0.005,51,0.004,52,0.987,53,1.477,55,1.443,56,1.147,57,0.35,58,0.882,60,1.385,96,0.228,114,2.19,138,0.044,176,0.003,177,0.002,190,2.081,232,2.258,233,1.66,235,1.106,252,1.122,291,2.682,296,1.604,300,1.044,301,1.488,303,1.207,311,1.074,313,1.122,314,0.937,315,2.901,342,2.212,346,1.077,348,3.917,350,1.882,352,2.116,354,1.514,355,1.882,357,0.815,359,2.593,360,1.19,361,1.437,362,1.437,363,2.593,364,1.39,365,1.39,366,1.264,368,1.861,370,2.77,371,1.39,374,3.146,376,1.882,377,2.651,380,2.543,382,3.398,387,1.598,391,2.022,392,2.353,393,2.835,401,1.629,402,2.429,403,1.66,404,1.66,405,1.488,406,2.329,453,2.552,594,2.903,613,2.329,629,3.226,630,3.699,631,2.257,632,1.972,644,2.917,655,2.329,670,1.972,1107,2.707,1108,6.657,1109,3.196,1111,5.56,1115,2.707,1116,3.461,1117,5.095,1118,4.412,1119,6.046,1120,5.095,1121,3.461,1122,5.095,1123,3.461,1124,5.095,1125,3.461,1126,3.461,1127,3.461,1128,5.688,1129,3.864,1130,3.864,1131,3.864,1132,3.864]],["title/directives/AmapToolBarDirective.html",[219,2.97,958,3.62]],["body/directives/AmapToolBarDirective.html",[3,0.012,4,0.018,5,0.018,6,0.065,8,0.09,9,0.447,21,1.087,26,0.495,28,1.969,31,2.352,41,2.438,45,0.784,48,0.341,49,0.005,51,0.001,52,1.344,53,1.666,55,0.956,56,0.811,57,0.382,58,0.623,60,1.508,96,0.188,118,3.785,138,0.016,176,0.002,177,0.001,219,2.097,221,1.454,222,7.13,225,2.557,226,3.302,227,3.486,228,3.302,229,1.524,230,2.557,232,2.515,235,1.286,236,3.865,237,2.557,238,3.865,239,4.08,243,2.557,246,2.557,250,3.486,252,1.01,260,1.822,264,5.732,278,2.557,279,3.686,281,1.393,291,2.9,292,3.017,294,1.174,295,1.694,296,1.653,298,5.594,299,4.66,300,0.561,301,0.799,303,0.648,306,1.393,307,1.524,308,1.393,309,1.524,310,2.557,311,1.463,312,2.438,313,0.409,314,0.738,316,1.524,323,0.843,324,1.524,341,1.524,342,2.209,360,0.639,412,3.716,417,2.136,422,2.136,429,3.716,460,2.247,509,1.524,510,1.609,511,1.524,513,1.609,514,1.609,518,1.609,529,1.716,530,3.865,531,2.878,532,2.878,533,1.716,535,1.716,563,1.609,572,1.609,702,2.478,731,3.865,782,4.306,786,1.858,787,1.858,793,1.858,794,1.858,830,3.021,831,3.397,849,3.237,958,2.557,1133,8.026,1134,1.858,1135,4.494,1136,3.48,1137,4.35,1138,3.686,1139,4.35,1140,4.35,1141,4.35,1142,2.878,1143,4.35,1144,4.35,1145,4.35,1146,4.35,1147,3.686,1148,4.35,1149,4.35,1150,4.35,1151,4.35,1152,4.35,1153,4.35,1154,4.494,1155,4.494,1156,4.494,1157,2.075,1158,4.35,1159,3.073,1160,3.48,1161,3.48,1162,2.075,1163,2.075,1164,2.075,1165,2.075,1166,2.075,1167,2.075,1168,2.075,1169,2.075,1170,2.075,1171,2.075,1172,2.075,1173,2.075,1174,2.075,1175,2.075,1176,2.075,1177,2.075,1178,2.075,1179,3.48,1180,2.075,1181,2.075,1182,2.075,1183,2.075,1184,2.075,1185,2.075,1186,2.075,1187,2.075,1188,2.075,1189,2.075,1190,2.075,1191,2.438,1192,2.075,1193,2.075,1194,2.075,1195,2.075,1196,2.075,1197,2.075,1198,2.075,1199,2.438,1200,2.075,1201,1.858,1202,3.48,1203,2.075,1204,8.147,1205,2.075,1206,2.075,1207,2.075,1208,2.075,1209,2.075,1210,2.075,1211,2.075,1212,2.075,1213,2.075,1214,2.075,1215,2.075,1216,2.075,1217,2.075,1218,2.075,1219,2.075,1220,2.075,1221,2.075,1222,2.075,1223,2.075,1224,2.075,1225,2.075,1226,2.075,1227,2.075,1228,2.075,1229,2.075,1230,2.075,1231,2.075,1232,2.075,1233,2.075,1234,2.075,1235,2.075,1236,2.075]],["title/injectables/AmapTransferService.html",[346,0.933,1237,3.452]],["body/injectables/AmapTransferService.html",[1,1.833,3,0.023,4,0.036,5,0.036,6,0.057,8,0.175,9,0.583,21,1.833,42,5.42,45,1.024,46,1.525,48,0.453,49,0.005,51,0.004,53,1.39,55,1.066,56,0.904,57,0.32,58,0.695,60,1.024,96,0.231,138,0.046,176,0.003,177,0.002,190,1.474,232,2.304,233,2.972,235,1.979,252,1.17,284,1.919,291,2.633,294,1.36,295,1.298,296,1.95,300,1.089,301,1.551,303,1.259,311,1.12,313,1.157,314,0.956,315,2.972,342,2.245,346,1.111,347,1.426,348,3.845,350,1.963,351,2.429,352,2.826,354,2.298,355,2.857,357,0.85,359,2.043,360,1.24,361,1.499,362,1.499,363,2.043,364,1.45,365,1.45,366,1.318,368,1.318,370,1.963,371,1.45,374,1.878,376,1.963,377,1.878,380,2.622,382,3.467,387,1.667,393,2.923,453,2.011,594,2.994,613,4.168,618,2.961,629,2.285,630,3.223,631,2.354,632,2.057,634,2.602,644,1.579,652,2.285,655,2.429,776,3.535,1237,4.109,1238,6.535,1239,3.332,1240,5.865,1241,5.656,1242,4.029,1243,4.029,1244,4.029,1245,2.823,1246,3.609,1247,3.609,1248,3.126,1249,3.609,1250,5.254,1251,3.609,1252,3.609,1253,3.609,1254,5.254,1255,3.609,1256,3.609,1257,3.126,1258,3.609,1259,3.126,1260,3.609,1261,3.609,1262,3.609,1263,3.609,1264,3.609]],["title/classes/AmapTransferWrapper.html",[313,0.972,1248,3.822]],["body/classes/AmapTransferWrapper.html",[1,1.551,3,0.018,4,0.028,5,0.028,6,0.061,8,0.14,9,0.493,21,2.293,42,4.926,45,0.866,46,1.22,48,0.509,49,0.005,51,0.004,52,1.98,53,1.552,55,1.587,56,1.317,57,0.375,58,1.013,60,1.524,96,0.214,114,1.91,138,0.039,176,0.003,177,0.002,190,1.815,209,2.313,232,2.061,233,1.385,235,0.922,240,3.092,252,0.936,284,2.364,291,2.523,296,1.399,300,0.871,301,1.241,303,1.007,311,0.896,313,0.979,314,0.855,315,2.6,342,2.065,346,0.94,348,4.114,350,1.57,352,1.846,354,1.263,355,1.57,357,0.68,359,2.367,360,0.992,361,1.199,362,1.199,363,2.367,364,1.16,365,1.16,366,1.054,368,1.623,370,2.417,371,1.16,374,2.82,376,1.57,377,2.313,380,2.219,382,3.101,387,1.333,391,1.686,392,2.053,393,2.473,401,1.359,402,2.177,403,1.385,404,1.385,405,1.241,406,1.943,453,2.329,594,2.533,613,1.943,629,2.814,630,3.42,631,1.883,632,1.645,634,3.205,644,2.662,652,2.814,655,1.943,657,3.477,660,3.849,670,1.645,672,1.883,678,2.009,776,4.095,1237,2.258,1238,6.993,1239,2.666,1241,5.141,1245,2.258,1246,2.887,1247,4.445,1248,3.849,1249,5.419,1250,4.445,1251,2.887,1252,4.445,1253,2.887,1254,4.445,1255,2.887,1256,2.887,1257,3.849,1258,2.887,1259,3.849,1260,2.887,1261,2.887,1262,2.887,1263,2.887,1264,2.887,1265,4.445,1266,4.445,1267,4.962,1268,3.223,1269,3.223,1270,1.828,1271,3.223,1272,3.223,1273,3.223,1274,3.223,1275,3.223,1276,3.223,1277,3.223]],["title/injectables/AmapTruckDrivingService.html",[346,0.933,1278,3.452]],["body/injectables/AmapTruckDrivingService.html",[1,1.904,3,0.024,4,0.037,5,0.037,6,0.058,8,0.184,9,0.606,18,3.559,21,1.904,43,4.992,45,1.063,46,1.607,48,0.418,49,0.005,51,0.004,53,1.419,55,1.108,56,0.939,57,0.328,58,0.722,60,1.063,96,0.234,138,0.047,176,0.003,177,0.002,190,1.554,232,2.361,233,3.062,235,2.039,252,1.233,291,2.681,294,1.433,295,1.368,296,2.01,300,1.148,301,1.635,303,1.327,311,1.181,313,1.202,314,0.897,315,3.062,342,2.196,346,1.154,347,1.504,348,3.915,350,2.069,351,2.56,352,2.896,354,2.387,355,2.968,357,0.896,359,2.122,360,1.308,361,1.58,362,1.58,363,2.122,364,1.528,365,1.528,366,1.389,368,1.389,370,2.069,371,1.528,374,1.98,376,2.069,377,1.98,380,1.899,382,2.781,387,1.757,393,3.037,458,0.875,594,2.168,611,6.01,612,3.121,613,4.294,618,3.121,620,2.56,621,3.295,624,3.295,625,4.727,628,3.295,644,1.664,645,3.295,650,2.743,651,3.295,655,2.56,675,3.805,1278,4.269,1279,7.532,1280,6.093,1281,5.775,1282,4.248,1283,4.248,1284,3.805,1285,3.295,1286,3.805,1287,3.805,1288,3.513,1289,3.805,1290,3.805,1291,3.805]],["title/classes/AmapTruckDrivingWrapper.html",[313,0.972,1285,3.822]],["body/classes/AmapTruckDrivingWrapper.html",[1,1.742,3,0.021,4,0.033,5,0.033,6,0.059,8,0.163,9,0.554,18,2.196,21,2.452,43,5.147,45,0.973,46,1.422,48,0.495,49,0.005,51,0.004,52,1.424,53,1.504,55,1.494,56,1.209,57,0.359,58,0.93,60,1.434,96,0.226,114,2.146,138,0.043,176,0.003,177,0.002,190,1.375,213,2.524,232,2.228,233,1.615,235,1.075,252,1.091,291,2.658,296,1.572,300,1.016,301,1.447,303,1.175,311,1.045,313,1.099,314,0.836,315,2.854,342,2.091,346,1.056,348,3.987,350,1.831,352,2.073,354,1.473,355,1.831,357,0.793,359,2.559,360,1.157,361,1.398,362,1.398,363,2.559,364,1.353,365,1.353,366,1.23,368,1.823,370,2.715,371,1.353,374,3.096,376,1.831,377,2.598,380,1.681,382,2.544,387,1.555,391,1.967,392,2.306,393,2.778,401,1.585,402,2.39,403,1.615,404,1.615,405,1.447,406,2.266,458,1.055,594,1.919,611,6.121,612,2.762,613,2.266,620,2.266,621,2.916,624,5.153,625,4.323,628,2.916,644,2.878,645,2.916,650,3.6,651,2.916,655,2.266,661,4.323,662,4.992,668,3.367,669,3.367,674,1.79,680,3.367,1278,2.634,1279,7.531,1281,5.497,1284,4.992,1285,4.323,1286,3.367,1287,4.992,1288,4.609,1289,3.367,1290,3.367,1291,3.367,1292,3.759,1293,3.759]],["title/injectables/AmapWalkingService.html",[346,0.933,1294,3.452]],["body/injectables/AmapWalkingService.html",[1,1.885,3,0.024,4,0.037,5,0.037,6,0.057,8,0.182,9,0.6,21,1.885,44,5.742,45,1.053,46,1.584,48,0.324,49,0.005,51,0.004,53,1.411,55,1.097,56,0.929,57,0.326,58,0.715,60,1.053,96,0.233,138,0.047,176,0.003,177,0.002,190,1.532,232,2.346,233,3.037,235,2.022,252,1.215,291,2.668,294,1.413,295,1.349,296,1.993,300,1.132,301,1.612,303,1.308,311,1.164,313,1.189,314,0.973,315,3.037,342,2.275,346,1.142,347,1.482,348,3.896,350,2.039,351,2.524,352,2.877,354,2.363,355,2.937,357,0.884,359,2.101,360,1.289,361,1.558,362,1.558,363,2.101,364,1.507,365,1.507,366,1.37,368,1.37,370,2.039,371,1.507,374,1.952,376,2.039,377,1.952,380,2.696,382,3.529,387,1.732,393,3.006,453,2.067,594,3.078,613,4.26,618,3.076,629,2.375,630,3.295,631,2.446,632,2.137,644,1.64,652,2.375,655,2.524,1294,4.225,1295,6.622,1296,3.463,1297,6.031,1298,5.742,1299,4.187,1300,4.187,1301,4.187,1302,2.934,1303,3.75,1304,3.75,1305,3.248,1306,3.75,1307,5.402,1308,3.75,1309,3.75,1310,3.75,1311,5.402,1312,3.75,1313,3.75,1314,3.75,1315,3.75]],["title/classes/AmapWalkingWrapper.html",[313,0.972,1305,3.822]],["body/classes/AmapWalkingWrapper.html",[1,1.733,3,0.021,4,0.033,5,0.033,6,0.059,8,0.162,9,0.552,21,2.445,44,5.483,45,0.968,46,1.413,48,0.42,49,0.005,51,0.004,52,1.417,53,1.501,55,1.491,56,1.206,57,0.358,58,0.927,60,1.431,96,0.225,114,2.136,138,0.043,176,0.003,177,0.002,190,2.029,232,2.222,233,1.605,235,1.069,252,1.084,291,2.653,296,1.565,300,1.009,301,1.438,303,1.167,311,1.038,313,1.094,314,0.922,315,2.844,342,2.185,346,1.051,348,3.98,350,1.819,352,2.064,354,1.463,355,1.819,357,0.788,359,2.551,360,1.15,361,1.39,362,1.39,363,2.551,364,1.344,365,1.344,366,1.222,368,1.814,370,2.702,371,1.344,374,3.084,376,1.819,377,2.586,380,2.48,382,3.343,387,1.545,391,1.954,392,2.295,393,2.765,401,1.574,402,2.381,403,1.605,404,1.605,405,1.438,406,2.251,453,2.511,594,2.831,613,2.251,629,3.146,630,3.647,631,2.182,632,1.906,644,2.869,652,3.146,655,2.251,657,3.887,670,1.906,672,2.182,1294,2.617,1295,6.765,1296,3.089,1298,5.483,1302,2.617,1303,3.346,1304,4.969,1305,4.303,1306,5.927,1307,4.969,1308,3.346,1309,4.969,1310,3.346,1311,4.969,1312,3.346,1313,3.346,1314,3.346,1315,3.346,1316,5.547,1317,3.735,1318,3.735,1319,3.735,1320,3.735,1321,3.735]],["title/interfaces/Autocomplete.html",[0,0.247,10,3.308]],["body/interfaces/Autocomplete.html",[0,0.376,2,0.429,3,0.033,4,0.051,5,0.051,6,0.062,8,0.25,10,5.939,45,1.309,48,0.528,49,0.005,50,3.658,51,0.004,53,1.523,55,1.608,56,1.363,57,0.387,58,1.048,60,1.544,61,4.464,96,0.222,114,2.888,138,0.058,176,0.004,177,0.003,209,2.682,240,4.675,241,5.512,242,5.512,260,1.835,284,3.573,286,4.522,288,4.228,289,4.522,302,5.037,314,0.724,357,1.214,1096,4.228,1322,5.154,1323,5.256,1324,4.123,1325,5.754,1326,5.754,1327,5.754,1328,5.754,1329,5.154,1330,1.67,1331,2.741,1332,4.464]],["title/interfaces/AutocompleteOptions.html",[0,0.247,302,3.308]],["body/interfaces/AutocompleteOptions.html",[0,0.327,2,0.486,3,0.037,4,0.058,5,0.058,6,0.044,8,0.283,9,0.808,48,0.549,49,0.005,51,0.003,57,0.424,58,1.199,138,0.051,176,0.004,177,0.003,209,4.318,244,7.186,245,7.661,260,1.945,298,6.49,302,5.454,1333,6.52,1334,2.748]],["title/interfaces/AutocompleteResult.html",[0,0.247,1332,3.822]],["body/interfaces/AutocompleteResult.html",[0,0.349,2,0.519,3,0.055,4,0.061,5,0.061,6,0.047,8,0.302,9,0.841,48,0.49,49,0.005,51,0.004,57,0.384,96,0.185,138,0.054,176,0.004,177,0.004,458,1.308,1332,6.562,1335,6.964,1336,4.197,1337,5.226,1338,9.478,1339,8.032]],["title/interfaces/BezierCurve.html",[0,0.247,11,2.97]],["body/interfaces/BezierCurve.html",[0,0.334,2,0.36,3,0.027,4,0.043,5,0.043,6,0.066,8,0.209,11,4.601,13,3.28,27,1.775,45,1.163,49,0.005,51,0.002,52,2.284,53,1.668,55,1.497,56,1.269,57,0.347,58,0.976,60,1.691,62,3.741,96,0.203,97,1.707,119,2.297,128,2.659,138,0.052,176,0.003,177,0.002,314,0.607,357,1.018,414,4.011,415,3.838,417,3.344,419,4.152,420,4.016,422,3.344,458,0.957,495,3.245,497,3.005,498,3.041,500,2.523,674,2.297,1330,1.4,1340,8.751,1341,4.319,1342,4.54,1343,6.387,1344,5.769,1345,4.016,1346,5.51,1347,4.822,1348,4.822,1349,4.822,1350,4.822,1351,6.73,1352,4.822,1353,4.822,1354,4.822,1355,2.863,1356,4.822,1357,4.822,1358,4.668,1359,6.387,1360,4.822,1361,4.822,1362,4.319]],["title/interfaces/BezierCurveEditor.html",[0,0.247,12,3.182]],["body/interfaces/BezierCurveEditor.html",[0,0.424,2,0.338,3,0.026,4,0.04,5,0.04,6,0.057,8,0.197,11,4.452,12,4.77,14,2.113,15,2.928,19,2.571,20,2.928,27,1.735,33,2.825,34,2.113,35,2.372,36,2.372,37,2.928,45,1.114,48,0.502,49,0.005,51,0.002,52,2.47,53,1.38,55,1.16,56,0.983,57,0.404,58,0.756,60,1.399,63,3.044,66,3.044,71,3.044,84,3.044,88,3.044,96,0.239,97,1.605,121,3.177,122,2.825,123,3.177,127,3.177,128,2.5,129,3.177,130,3.177,138,0.076,176,0.003,177,0.002,185,5.278,186,6.441,187,6.441,190,2.335,313,1.259,314,0.803,402,1.632,405,2.457,500,2.372,816,5.092,821,5.457,1363,3.177,1364,4.534,1365,5.427,1366,4.534,1367,5.427,1368,4.534,1369,4.534,1370,3.331,1371,6.172,1372,5.673,1373,4.285,1374,3.331,1375,3.331,1376,3.331,1377,3.331]],["title/interfaces/BezierCurveEditorOptions.html",[0,0.247,1373,3.308]],["body/interfaces/BezierCurveEditorOptions.html",[0,0.436,2,0.366,3,0.028,4,0.043,5,0.043,6,0.033,8,0.213,9,0.671,11,4.646,12,4.359,14,2.29,15,3.173,19,2.786,20,3.173,27,1.787,33,3.061,34,2.29,35,2.57,36,2.57,37,3.173,48,0.467,49,0.005,51,0.002,52,2.396,57,0.41,58,0.983,59,4.455,63,3.299,66,3.299,71,3.299,84,3.299,88,3.299,96,0.244,97,1.739,121,3.442,122,3.061,123,3.442,127,3.442,128,2.709,129,3.442,130,3.442,138,0.077,176,0.003,177,0.002,186,5.815,187,5.815,313,1.331,314,0.85,402,1.768,405,2.598,500,2.57,816,4.068,821,4.359,1363,3.442,1365,4.959,1367,4.959,1370,3.61,1371,6.296,1372,5.841,1373,5.176,1374,6.098,1375,6.098,1376,3.61,1377,3.61]],["title/interfaces/BezierCurveOptions.html",[0,0.247,1351,3.62]],["body/interfaces/BezierCurveOptions.html",[0,0.25,2,0.373,3,0.028,4,0.044,5,0.044,6,0.034,8,0.217,9,0.679,27,1.934,48,0.528,49,0.005,51,0.003,57,0.422,58,1.226,96,0.133,128,2.755,138,0.053,176,0.003,177,0.003,260,2.099,423,4.882,425,4.74,431,5.208,432,5.208,433,5.208,434,4.882,458,1.436,674,3.981,1334,2.106,1351,5.016,1359,6.484,1378,4.475,1379,6.913,1380,5.398,1381,5.398,1382,6.913,1383,5.612,1384,5.612,1385,2.55,1386,4.997]],["title/injectables/BezierCurveService.html",[346,0.933,1387,4.414]],["body/injectables/BezierCurveService.html",[1,1.797,3,0.022,4,0.035,5,0.035,6,0.061,8,0.17,9,0.572,11,4.812,12,2.533,21,1.797,27,1.64,45,1.004,46,1.484,48,0.366,49,0.005,51,0.002,53,1.553,55,1.517,56,1.23,57,0.38,58,0.946,60,1.394,96,0.229,128,3.171,138,0.03,176,0.003,177,0.002,232,2.682,235,1.948,252,1.669,291,3.053,294,1.323,295,1.263,296,1.106,300,1.06,303,1.226,311,1.09,313,0.774,314,0.724,323,1.593,342,2.128,346,1.089,347,1.388,352,2.79,354,2.668,357,1.583,359,1.366,360,1.207,361,1.459,362,1.459,363,2.612,364,1.411,365,1.411,366,1.283,368,1.881,371,1.411,392,2.379,401,1.653,402,2.45,403,1.685,404,1.685,405,1.51,939,4.029,986,2.052,1351,5.51,1373,5.035,1387,5.151,1388,8.082,1389,8.082,1390,3.513,1391,4.771,1392,3.475,1393,2.866,1394,4.029,1395,3.087,1396,5.254,1397,3.923,1398,5.751,1399,2.866,1400,3.922,1401,5.151,1402,3.922,1403,4.756,1404,5.751,1405,3.922,1406,3.922,1407,3.922,1408,2.801,1409,3.922,1410,2.052,1411,2.163,1412,3.922,1413,2.002,1414,2.163,1415,3.359,1416,2.444,1417,3.922,1418,3.922,1419,2.444,1420,4.771,1421,3.922,1422,3.922]],["title/interfaces/Bounds.html",[0,0.247,13,2.117]],["body/interfaces/Bounds.html",[0,0.377,2,0.43,3,0.033,4,0.051,5,0.051,6,0.063,8,0.25,9,0.747,13,3.591,26,2.452,45,1.311,48,0.404,49,0.005,51,0.003,53,1.581,55,1.049,56,0.889,57,0.352,58,0.684,60,1.602,64,4.475,96,0.153,98,1.776,99,1.434,119,2.748,138,0.058,176,0.004,177,0.003,260,1.652,314,0.726,413,5.336,1423,5.167,1424,8.224,1425,8.224,1426,5.521,1427,7.931,1428,7.931,1429,5.718,1430,4.529,1431,5.768,1432,4.041,1433,5.768,1434,5.768,1435,5.768,1436,5.768]],["title/interfaces/BusinessArea.html",[0,0.247,217,3.822]],["body/interfaces/BusinessArea.html",[0,0.354,2,0.527,3,0.04,4,0.062,5,0.062,6,0.047,8,0.307,9,0.849,48,0.547,49,0.005,51,0.004,56,1.468,57,0.387,138,0.055,176,0.004,177,0.004,217,6.622,702,5.253,1437,7.068,1438,7.068,1439,6.396]],["title/interfaces/CAutocomplete.html",[0,0.247,61,3.822]],["body/interfaces/CAutocomplete.html",[0,0.424,2,0.519,3,0.039,4,0.061,5,0.061,6,0.047,10,6.118,48,0.49,49,0.005,50,3.052,51,0.004,61,6.562,96,0.242,138,0.066,176,0.004,177,0.004,260,1.531,284,3.317,286,4.197,289,4.197,302,5.68,314,0.877,357,1.47,1322,6.237,1323,4.879,1324,3.943,1329,6.237,1330,2.021,1331,3.317,1332,5.402]],["title/interfaces/CBezierCurve.html",[0,0.247,62,3.822]],["body/interfaces/CBezierCurve.html",[0,0.415,2,0.501,3,0.038,4,0.059,5,0.059,6,0.045,11,4.991,13,3.559,27,1.701,49,0.005,51,0.003,52,2.293,62,6.424,96,0.238,97,2.38,119,3.203,128,3.708,138,0.064,176,0.004,177,0.003,314,0.847,357,1.419,414,3.275,415,3.134,417,2.731,422,2.731,458,0.965,495,3.275,498,3.069,1330,1.952,1340,6.023,1341,6.023,1342,3.708,1343,5.216,1344,4.712,1351,6.881,1355,2.89,1358,4.712,1359,6.424,1362,6.023]],["title/interfaces/CBezierCurveEditor.html",[0,0.247,63,3.308]],["body/interfaces/CBezierCurveEditor.html",[0,0.443,2,0.383,3,0.029,4,0.045,5,0.045,6,0.034,11,4.755,12,4.494,14,2.395,15,3.319,19,2.914,20,3.319,27,1.815,33,3.202,34,2.395,35,2.688,36,2.688,37,3.319,48,0.475,49,0.005,51,0.003,52,2.421,57,0.405,63,4.672,66,3.45,71,3.45,84,3.45,88,3.45,96,0.247,97,1.819,121,3.6,122,3.202,123,3.6,127,3.6,128,2.833,129,3.6,130,3.6,138,0.077,176,0.004,177,0.003,186,5.925,187,5.925,313,1.372,314,0.876,402,1.849,405,2.679,500,2.688,816,4.194,821,4.494,1363,3.6,1365,5.113,1367,5.113,1370,3.775,1371,6.362,1372,5.933,1373,4.672,1374,3.775,1375,3.775,1376,3.775,1377,3.775]],["title/interfaces/CBounds.html",[0,0.247,64,3.822]],["body/interfaces/CBounds.html",[0,0.426,2,0.522,3,0.04,4,0.062,5,0.062,6,0.047,13,3.648,26,2.425,48,0.376,49,0.005,51,0.004,64,6.586,96,0.186,98,2.157,99,1.741,119,3.337,138,0.066,176,0.004,177,0.004,260,1.54,314,0.882,413,4.222,1423,6.275,1424,7.605,1425,7.605,1427,6.275,1428,6.275,1429,4.524,1430,4.222]],["title/interfaces/CCircle.html",[0,0.247,65,3.822]],["body/interfaces/CCircle.html",[0,0.406,2,0.484,3,0.037,4,0.057,5,0.057,6,0.044,13,3.479,14,3.774,26,1.931,27,1.663,49,0.005,51,0.003,52,2.515,65,6.28,96,0.245,97,2.295,98,1.996,99,1.612,119,3.088,138,0.063,176,0.004,177,0.003,260,1.425,314,0.816,357,1.368,413,3.908,414,3.158,415,3.022,416,4.764,417,2.633,422,2.633,458,1.162,493,4.764,495,3.158,498,2.959,501,4.764,968,5.761,1330,1.882,1342,3.575,1355,2.786,1430,3.908,1440,5.808,1441,4.543,1442,4.879]],["title/interfaces/CCircleMarker.html",[0,0.247,67,3.822]],["body/interfaces/CCircleMarker.html",[0,0.411,2,0.494,3,0.038,4,0.058,5,0.058,6,0.044,16,5.751,26,1.958,27,1.686,28,2.905,49,0.005,51,0.003,52,2.528,67,6.368,96,0.237,97,2.347,98,2.041,99,1.648,138,0.064,176,0.004,177,0.003,314,0.835,357,1.399,413,3.996,414,3.229,415,3.09,416,4.871,417,2.693,422,2.693,458,1.179,462,6.529,493,4.871,495,3.229,498,3.026,501,4.871,1330,1.925,1355,2.849,1441,4.645,1442,3.996,1443,5.939,1444,5.939]],["title/interfaces/CDistrictSearch.html",[0,0.247,68,3.822]],["body/interfaces/CDistrictSearch.html",[0,0.42,2,0.51,3,0.039,4,0.06,5,0.06,6,0.046,17,5.864,48,0.45,49,0.005,50,2.998,51,0.004,68,6.492,96,0.24,114,3.481,115,3.58,116,5.659,138,0.065,176,0.004,177,0.003,314,0.861,357,1.766,458,0.982,581,6.335,584,4.794,595,5.307,597,5.307,1096,5.027,1324,3.901,1330,1.986,1331,3.259,1445,5.307,1446,5.027,1447,6.129]],["title/interfaces/CDriving.html",[0,0.247,69,3.822]],["body/interfaces/CDriving.html",[0,0.4,2,0.473,3,0.036,4,0.056,5,0.056,6,0.043,18,5.105,26,1.905,48,0.493,49,0.005,50,3.5,51,0.004,69,6.195,96,0.251,98,1.953,99,1.577,114,3.074,138,0.062,176,0.004,177,0.003,314,0.799,357,1.685,453,3.145,458,0.911,615,5.595,620,3.824,630,2.957,634,4.097,636,4.921,638,4.921,640,4.921,642,4.921,644,2.485,646,4.921,648,4.921,650,4.097,652,3.598,670,3.238,1324,4.074,1330,1.842,1331,3.022,1448,5.682,1449,3.022,1450,3.022,1451,5.682,1452,4.097]],["title/interfaces/CEditor.html",[0,0.247,1372,3.308]],["body/interfaces/CEditor.html",[0,0.443,2,0.383,3,0.029,4,0.045,5,0.045,6,0.034,11,4.755,12,4.494,14,2.395,15,3.319,19,2.914,20,3.319,27,1.815,33,3.202,34,2.395,35,2.688,36,2.688,37,3.319,48,0.475,49,0.005,51,0.003,52,2.421,57,0.405,63,3.45,66,3.45,71,3.45,84,3.45,88,3.45,96,0.247,97,1.819,121,3.6,122,3.202,123,3.6,127,3.6,128,2.833,129,3.6,130,3.6,138,0.077,176,0.004,177,0.003,186,5.925,187,5.925,313,1.372,314,0.876,402,1.849,405,2.679,500,2.688,816,4.194,821,4.494,1363,3.6,1365,5.113,1367,5.113,1370,3.775,1371,6.362,1372,6.116,1373,4.672,1374,3.775,1375,3.775,1376,3.775,1377,3.775]],["title/interfaces/CEllipse.html",[0,0.247,70,3.822]],["body/interfaces/CEllipse.html",[0,0.407,2,0.485,3,0.037,4,0.057,5,0.057,6,0.044,13,3.485,19,4.599,26,1.934,27,1.666,49,0.005,51,0.003,52,2.365,70,6.291,96,0.253,97,2.302,98,2.002,99,1.616,119,3.097,138,0.063,176,0.004,177,0.003,260,1.429,314,0.818,357,1.372,413,3.919,414,3.167,415,3.03,417,2.641,422,2.641,453,2.229,495,3.167,498,2.967,567,5.445,1330,1.887,1342,3.585,1355,2.794,1430,3.919,1449,3.097,1450,3.097,1453,5.824,1454,6.8,1455,5.824,1456,5.824]],["title/interfaces/CGeocoder.html",[0,0.247,73,3.822]],["body/interfaces/CGeocoder.html",[0,0.414,2,0.5,3,0.038,4,0.059,5,0.059,6,0.045,22,5.792,48,0.444,49,0.005,50,3.623,51,0.005,73,6.412,96,0.255,138,0.064,147,4.982,176,0.004,177,0.003,284,3.194,314,0.844,357,1.415,453,2.299,713,5.792,722,5.202,725,5.202,726,5.202,1324,4.177,1330,1.947,1331,3.194,1449,3.194,1450,3.194,1457,6.006,1458,6.006,1459,5.202,1460,5.202,1461,4.927]],["title/interfaces/CHeatmap.html",[0,0.247,74,3.308]],["body/interfaces/CHeatmap.html",[0,0.466,2,0.447,3,0.034,4,0.053,5,0.053,6,0.04,23,4.497,27,1.845,48,0.322,49,0.005,51,0.003,52,1.967,57,0.252,59,3.215,74,5.169,96,0.204,97,2.12,99,1.913,138,0.074,176,0.004,177,0.003,357,1.264,415,2.791,417,2.432,422,2.432,458,1.388,498,2.733,743,4.196,744,3.396,755,5.169,760,5.596,776,5.128,1330,1.738,1337,4.691,1355,2.573,1462,4.196,1463,4.4,1464,4.4,1465,4.4,1466,4.4,1467,5.961,1468,4.021,1469,5.169,1470,4.4,1471,5.169,1472,4.4,1473,4.4,1474,4.4]],["title/interfaces/CIcon.html",[0,0.247,75,3.822]],["body/interfaces/CIcon.html",[0,0.432,2,0.535,3,0.041,4,0.063,5,0.063,6,0.048,24,4.397,39,4.046,49,0.005,51,0.004,52,1.834,75,6.683,96,0.229,101,4.472,102,5.028,138,0.067,176,0.004,177,0.004,314,0.903,357,1.514,1475,6.428,1476,6.036,1477,6.428,1478,6.428,1479,6.428]],["title/interfaces/CInfoWindow.html",[0,0.247,76,3.822]],["body/interfaces/CInfoWindow.html",[0,0.409,2,0.49,3,0.037,4,0.058,5,0.058,6,0.044,25,5.721,26,1.948,27,1.677,39,3.893,48,0.353,49,0.005,51,0.003,52,2.441,76,6.335,96,0.247,97,2.327,98,2.024,99,1.634,101,4.097,105,4.097,138,0.063,176,0.004,177,0.003,260,1.445,314,0.828,357,1.387,816,3.962,817,5.1,818,5.437,819,4.606,820,4.83,870,5.437,874,5.437,882,5.721,1330,1.908,1442,4.922,1480,5.889,1481,5.889,1482,5.889,1483,5.889,1484,5.889,1485,4.83]],["title/interfaces/CLngLat.html",[0,0.247,77,3.822]],["body/interfaces/CLngLat.html",[0,0.428,2,0.527,3,0.04,4,0.062,5,0.062,6,0.047,26,2.272,48,0.38,49,0.005,51,0.004,77,6.622,99,1.757,138,0.066,176,0.004,177,0.004,260,1.554,314,0.89,368,2.312,458,1.439,1429,4.565,1468,4.746,1486,6.331,1487,6.331,1488,4.952,1489,6.331,1490,6.331,1491,6.331,1492,6.331,1493,6.331,1494,6.331,1495,6.331]],["title/interfaces/CMap.html",[0,0.247,78,4.075]],["body/interfaces/CMap.html",[0,0.329,2,0.352,3,0.027,4,0.042,5,0.042,6,0.032,13,3.684,26,1.945,27,1.348,31,3.833,39,2.875,47,4.224,48,0.507,49,0.005,50,2.875,51,0.004,52,2.64,78,5.426,96,0.228,98,1.452,99,1.172,100,2.842,101,2.939,119,2.246,138,0.051,176,0.003,177,0.002,209,2.198,284,2.246,314,0.594,357,0.995,413,2.842,424,2.532,458,1.425,511,3.465,607,4.405,820,3.465,998,5.756,1065,3.304,1067,3.304,1330,1.369,1342,2.6,1395,2.532,1442,5.349,1488,6.379,1496,4.716,1497,5.089,1498,4.716,1499,4.716,1500,4.716,1501,4.716,1502,4.716,1503,7.305,1504,4.716,1505,4.224,1506,4.716,1507,4.716,1508,4.716,1509,4.716,1510,4.716,1511,4.716,1512,4.716,1513,4.716,1514,4.716,1515,4.716,1516,4.716,1517,4.716,1518,4.716,1519,4.716,1520,4.716,1521,4.716,1522,4.716,1523,4.716,1524,4.716,1525,4.716,1526,4.716,1527,4.716,1528,4.716,1529,4.716,1530,4.716,1531,4.716,1532,3.465,1533,4.716,1534,4.716,1535,4.716,1536,4.716,1537,4.716,1538,4.716,1539,4.716,1540,4.716,1541,4.716,1542,4.716,1543,4.716,1544,4.716,1545,4.716,1546,4.716]],["title/interfaces/CMarker.html",[0,0.247,79,4.075]],["body/interfaces/CMarker.html",[0,0.354,2,0.392,3,0.03,4,0.046,5,0.046,6,0.035,24,4.073,26,1.685,27,1.639,28,3.095,31,3.567,48,0.493,49,0.005,51,0.003,52,2.633,79,5.841,96,0.236,97,1.86,98,1.617,99,1.306,100,3.166,102,3.68,138,0.055,176,0.004,177,0.003,260,2.059,314,0.661,357,1.109,414,2.559,417,2.133,422,2.133,458,1.316,495,2.559,744,2.979,817,4.075,819,3.68,969,4.401,998,4.742,1138,3.68,1191,3.68,1330,1.525,1355,2.257,1442,4.257,1485,3.86,1547,5.253,1548,4.344,1549,4.344,1550,4.344,1551,4.344,1552,4.344,1553,4.344,1554,5.253,1555,5.253,1556,4.344,1557,4.344,1558,4.344,1559,5.253,1560,5.841,1561,5.253,1562,4.344,1563,4.344,1564,4.344,1565,5.253,1566,4.705,1567,4.344,1568,4.344,1569,5.841,1570,5.841,1571,5.189,1572,4.344,1573,4.344,1574,4.344,1575,4.344,1576,4.344,1577,4.344,1578,4.344,1579,4.344,1580,4.344,1581,4.344,1582,4.344,1583,5.253,1584,6.326,1585,5.253]],["title/interfaces/CMarkerClusterer.html",[0,0.247,80,3.822]],["body/interfaces/CMarkerClusterer.html",[0,0.396,2,0.464,3,0.035,4,0.055,5,0.055,6,0.042,27,1.931,28,4.327,29,5.799,49,0.005,51,0.003,80,6.122,96,0.242,97,2.204,107,6.071,108,5.529,109,4.362,120,5.149,138,0.061,176,0.004,177,0.003,260,1.735,314,0.784,357,1.314,458,1.401,744,3.531,1330,1.807,1355,2.676,1586,5.577,1587,5.577,1588,5.529,1589,5.577,1590,4.83,1591,5.577,1592,5.577,1593,5.577,1594,5.577,1595,5.577,1596,5.577,1597,5.577,1598,5.577,1599,5.577,1600,5.577,1601,5.577,1602,5.577,1603,5.577,1604,5.577,1605,5.577,1606,5.577,1607,5.577,1608,5.577]],["title/interfaces/CMouseTool.html",[0,0.247,81,3.822]],["body/interfaces/CMouseTool.html",[0,0.407,2,0.486,3,0.037,4,0.058,5,0.058,6,0.044,27,1.818,30,5.692,49,0.005,51,0.003,81,6.302,96,0.253,97,2.308,138,0.063,176,0.004,177,0.003,260,1.433,314,0.821,968,5.062,969,5.062,970,6.056,971,5.515,990,5.057,992,5.057,994,5.057,996,5.057,1000,5.057,1002,5.057,1004,5.057,1006,5.057,1008,5.057,1010,5.057,1330,2.689,1441,4.568,1548,5.392,1609,5.84,1610,5.84,1611,5.84,1612,5.057]],["title/interfaces/CPixel.html",[0,0.247,82,3.822]],["body/interfaces/CPixel.html",[0,0.429,2,0.53,3,0.04,4,0.063,5,0.063,6,0.048,31,4.111,48,0.382,49,0.005,51,0.004,82,6.646,96,0.189,100,4.286,138,0.067,176,0.004,177,0.004,260,1.563,314,0.895,368,2.326,458,1.37,849,4.373,1429,4.593,1532,5.225,1613,6.369,1614,5.881,1615,6.369,1616,6.369,1617,6.369,1618,5.516]],["title/interfaces/CPlaceSearch.html",[0,0.247,83,3.62]],["body/interfaces/CPlaceSearch.html",[0,0.423,2,0.44,3,0.033,4,0.052,5,0.052,6,0.04,13,3.276,32,5.119,34,2.749,48,0.535,49,0.005,50,3.913,51,0.004,56,0.909,83,5.601,96,0.251,113,4.575,114,2.935,119,2.81,122,3.676,138,0.066,176,0.004,177,0.003,260,1.296,284,2.81,286,3.555,289,3.555,314,0.743,357,1.245,424,3.166,430,2.94,453,2.896,458,1.213,644,2.311,702,3.252,1043,5.119,1054,4.334,1056,4.334,1057,4.334,1059,4.334,1061,4.334,1065,4.133,1067,4.133,1070,4.334,1075,4.334,1323,4.133,1324,4.31,1330,1.712,1331,2.81,1439,3.96,1446,4.334,1449,2.81,1450,2.81,1619,3.166,1620,4.878,1621,4.334,1622,4.878,1623,6.553]],["title/interfaces/CPolygon.html",[0,0.247,85,3.822]],["body/interfaces/CPolygon.html",[0,0.441,2,0.481,3,0.037,4,0.057,5,0.057,6,0.043,13,3.467,26,1.538,27,1.657,34,3.761,49,0.005,51,0.003,52,2.476,57,0.272,85,6.259,96,0.245,97,2.283,98,1.985,99,1.603,119,3.071,138,0.068,176,0.004,177,0.003,260,1.417,314,0.812,357,1.361,414,3.141,415,3.006,417,2.619,422,2.619,453,2.21,458,1.158,495,3.141,498,2.943,567,4.329,970,5.75,1342,3.556,1344,4.518,1355,2.771,1358,4.518,1430,3.886,1624,5.333,1625,6.259,1626,5.776,1627,5.002]],["title/interfaces/CPolyline.html",[0,0.247,86,3.822]],["body/interfaces/CPolyline.html",[0,0.414,2,0.5,3,0.038,4,0.059,5,0.059,6,0.045,13,3.552,27,1.698,35,4.325,49,0.005,51,0.003,52,2.5,86,6.412,96,0.238,97,2.374,119,3.194,138,0.064,176,0.004,177,0.003,314,0.844,357,1.415,414,3.266,415,3.125,417,2.723,422,2.723,458,1.287,495,3.266,498,3.06,971,5.83,1330,1.947,1342,3.697,1343,5.202,1344,4.698,1355,2.881,1358,4.698,1612,5.202,1628,6.006]],["title/interfaces/CRectangle.html",[0,0.247,87,3.822]],["body/interfaces/CRectangle.html",[0,0.405,2,0.482,3,0.037,4,0.057,5,0.057,6,0.043,13,3.789,26,1.542,27,1.66,36,4.228,49,0.005,51,0.003,52,2.478,87,6.269,96,0.252,97,2.289,98,1.991,99,1.607,119,3.08,138,0.063,176,0.004,177,0.003,260,1.421,314,0.814,357,1.365,414,3.149,415,3.014,417,2.626,422,2.626,453,2.217,458,0.928,495,3.149,498,2.951,567,4.341,1330,1.877,1342,3.565,1355,2.778,1430,3.897,1449,3.08,1450,3.08,1627,5.016,1629,5.792,1630,6.786,1631,5.792,1632,5.792]],["title/interfaces/CRiding.html",[0,0.247,89,3.822]],["body/interfaces/CRiding.html",[0,0.417,2,0.504,3,0.038,4,0.06,5,0.06,6,0.045,38,6.303,49,0.005,50,3.642,51,0.004,89,6.446,96,0.249,114,3.199,138,0.065,176,0.004,177,0.003,314,0.851,357,1.427,453,3.084,630,3.152,644,2.65,670,3.452,1111,5.822,1115,4.739,1324,4.193,1330,1.963,1331,3.222,1449,3.222,1450,3.222,1452,4.368,1633,6.058,1634,6.058]],["title/interfaces/CSize.html",[0,0.247,90,3.822]],["body/interfaces/CSize.html",[0,0.432,2,0.535,3,0.041,4,0.063,5,0.063,6,0.048,39,3.775,48,0.385,49,0.005,51,0.004,90,6.683,96,0.19,101,4.472,138,0.067,176,0.004,177,0.004,314,0.903,368,2.347,458,1.375,853,5.368,1429,4.635,1635,6.428,1636,6.428,1637,6.428,1638,6.428,1639,5.272,1640,5.028]],["title/interfaces/CText.html",[0,0.247,91,3.822]],["body/interfaces/CText.html",[0,0.362,2,0.404,3,0.031,4,0.048,5,0.048,6,0.036,24,4.138,26,1.721,27,1.665,31,3.625,40,4.348,48,0.507,49,0.005,51,0.003,52,2.635,91,5.596,96,0.239,97,1.92,98,1.669,99,1.348,100,3.268,102,3.799,138,0.056,176,0.004,177,0.003,260,2.076,314,0.683,357,1.144,414,2.641,417,2.202,422,2.202,458,1.328,495,2.641,744,3.075,819,3.799,1138,3.799,1191,3.799,1330,1.574,1355,2.33,1442,4.348,1485,3.984,1549,4.485,1550,4.485,1551,4.485,1552,4.485,1553,4.485,1556,4.485,1557,4.485,1558,4.485,1562,4.485,1563,4.485,1564,4.485,1567,4.485,1568,4.485,1569,5.966,1570,5.966,1571,5.301,1572,4.485,1573,4.485,1574,4.485,1575,4.485,1576,4.485,1577,4.485,1578,4.485,1579,4.485,1580,4.485,1581,4.485,1582,4.485,1641,4.857,1642,5.301,1643,4.857,1644,4.857,1645,4.857,1646,4.857]],["title/interfaces/CToolBar.html",[0,0.247,92,3.822]],["body/interfaces/CToolBar.html",[0,0.413,2,0.497,3,0.038,4,0.059,5,0.059,6,0.045,26,1.965,31,3.997,41,5.772,49,0.005,51,0.003,52,2.594,92,6.39,96,0.237,98,2.053,99,1.657,100,4.019,138,0.064,176,0.004,177,0.003,314,0.839,357,1.407,417,2.708,422,2.708,731,4.899,1137,5.514,1138,4.671,1139,5.514,1140,5.514,1141,5.514,1143,5.514,1144,5.514,1145,5.514,1191,4.671,1199,5.772,1330,1.935,1647,5.972,1648,5.972]],["title/interfaces/CTransfer.html",[0,0.247,93,3.822]],["body/interfaces/CTransfer.html",[0,0.409,2,0.49,3,0.037,4,0.058,5,0.058,6,0.044,42,5.964,48,0.499,49,0.005,50,3.579,51,0.004,93,6.335,96,0.247,114,3.144,138,0.063,176,0.004,177,0.003,284,3.131,314,0.828,357,1.387,453,3.045,630,3.064,634,4.246,644,2.576,652,3.728,670,3.356,776,3.962,1241,5.721,1245,4.606,1257,5.1,1259,5.1,1324,4.14,1330,1.908,1331,3.131,1449,3.131,1450,3.131,1452,4.246,1649,5.889,1650,5.889]],["title/interfaces/CTruckDriving.html",[0,0.247,94,3.822]],["body/interfaces/CTruckDriving.html",[0,0.414,2,0.499,3,0.038,4,0.059,5,0.059,6,0.045,18,4.82,26,1.595,43,5.782,48,0.443,49,0.005,50,2.93,51,0.004,94,6.401,96,0.255,98,2.058,99,1.662,114,2.574,138,0.064,176,0.004,177,0.003,314,0.842,357,1.411,453,2.292,458,0.96,620,4.03,644,2.62,650,4.318,674,3.185,1281,5.782,1324,3.846,1330,1.941,1331,3.185,1449,3.185,1450,3.185,1651,5.989,1652,5.989,1653,5.989]],["title/interfaces/CWalking.html",[0,0.247,95,3.822]],["body/interfaces/CWalking.html",[0,0.411,2,0.494,3,0.038,4,0.058,5,0.058,6,0.044,26,1.581,44,6.247,49,0.005,50,3.597,51,0.004,95,6.368,96,0.254,98,2.041,99,1.648,114,3.16,138,0.064,176,0.004,177,0.003,314,0.835,357,1.399,453,3.057,630,3.09,644,2.598,652,3.76,670,3.384,1298,5.751,1302,4.645,1324,4.156,1330,1.925,1331,3.158,1449,3.158,1450,3.158,1452,4.282,1654,5.939,1655,5.939]],["title/classes/ChangeFilter.html",[308,3.308,313,0.972]],["body/classes/ChangeFilter.html",[3,0.03,4,0.046,5,0.046,6,0.06,8,0.229,45,1.235,48,0.493,49,0.005,51,0.003,53,1.47,55,1.668,56,1.316,57,0.387,58,1.012,60,1.394,96,0.188,138,0.041,176,0.004,177,0.003,252,1.528,279,6.567,281,3.535,295,2.751,300,1.423,301,2.027,308,5.363,311,1.967,313,1.038,314,0.663,342,2.374,359,3.104,387,2.178,391,2.755,402,3.073,632,2.687,1011,3.535,1656,8.91,1657,5.265,1658,7.074,1659,6.606,1660,5.265,1661,5.265,1662,7.074,1663,5.85,1664,5.265,1665,4.956,1666,7.074,1667,5.265,1668,7.074,1669,5.265,1670,6.606,1671,5.265,1672,7.074,1673,7.074,1674,7.074]],["title/interfaces/Cinema.html",[0,0.247,1675,4.075]],["body/interfaces/Cinema.html",[0,0.315,2,0.469,3,0.036,4,0.056,5,0.056,6,0.042,8,0.273,9,0.79,48,0.557,49,0.005,51,0.003,57,0.412,96,0.167,138,0.049,176,0.004,177,0.003,1619,3.378,1675,6.571,1676,6.293,1677,7.095,1678,7.095,1679,9.147,1680,7.564,1681,9.147,1682,6.408,1683,7.095,1684,6.091]],["title/interfaces/Circle.html",[0,0.247,14,2.297]],["body/interfaces/Circle.html",[0,0.313,2,0.327,3,0.025,4,0.039,5,0.039,6,0.066,8,0.191,13,3.118,14,3.383,26,2.175,27,1.715,45,1.089,49,0.005,51,0.002,52,2.494,53,1.668,55,1.577,56,1.336,57,0.366,58,1.028,60,1.691,65,3.406,96,0.21,97,1.554,98,1.352,99,1.091,119,2.091,138,0.048,176,0.003,177,0.002,260,1.371,314,0.553,357,0.927,413,4.763,414,3.849,415,3.683,416,5.806,417,3.209,418,4.839,419,3.888,420,3.76,421,5.159,422,3.209,430,2.188,458,1.332,493,4.584,495,3.039,497,2.736,498,2.847,500,2.297,501,4.584,968,5.559,1330,1.274,1342,4.357,1345,3.76,1355,2.681,1426,4.584,1430,3.76,1432,3.076,1440,3.932,1441,3.076,1442,3.76,1685,4.39,1686,4.39,1687,4.39,1688,4.39,1689,4.39,1690,4.39,1691,4.39,1692,4.39,1693,4.39,1694,4.39,1695,4.39,1696,4.39,1697,4.39]],["title/interfaces/CircleMarker.html",[0,0.247,16,3.452]],["body/interfaces/CircleMarker.html",[0,0.324,2,0.345,3,0.026,4,0.041,5,0.041,6,0.065,8,0.201,16,5.23,26,2.103,27,1.748,28,2.026,45,1.129,49,0.005,51,0.002,52,2.514,53,1.655,55,1.547,56,1.311,57,0.359,58,1.008,60,1.678,67,3.586,96,0.198,97,1.637,98,1.423,99,1.149,138,0.05,176,0.003,177,0.002,314,0.582,357,0.976,413,4.873,414,3.938,415,3.769,416,5.941,417,3.284,418,5.019,419,4.032,420,3.9,421,5.351,422,3.284,430,2.304,458,1.3,462,6.343,493,4.754,495,3.151,497,2.881,498,2.953,500,2.419,501,4.754,1330,1.342,1345,3.9,1355,2.78,1441,3.239,1442,2.786,1443,8.688,1444,4.141,1698,4.623,1699,4.623,1700,4.623,1701,4.623,1702,4.623,1703,4.623,1704,4.623,1705,4.623,1706,4.623,1707,4.623,1708,4.623]],["title/interfaces/CircleMarkerOptions.html",[0,0.247,462,3.452]],["body/interfaces/CircleMarkerOptions.html",[0,0.264,2,0.393,3,0.03,4,0.046,5,0.046,6,0.035,8,0.229,9,0.703,26,2.037,27,1.957,28,2.307,48,0.519,49,0.005,51,0.003,57,0.418,58,1.223,96,0.188,99,1.309,138,0.041,176,0.004,177,0.003,260,1.756,423,4.989,424,4.585,425,4.843,426,5.147,427,5.734,428,5.734,430,4.257,431,5.322,432,5.322,433,5.322,434,4.989,458,1.446,462,4.956,1334,2.219,1385,2.687,1709,4.716,1710,3.4]],["title/injectables/CircleMarkerService.html",[346,0.933,449,4.075]],["body/injectables/CircleMarkerService.html",[1,2.033,3,0.026,4,0.041,5,0.041,6,0.059,8,0.202,9,0.647,14,3.494,16,3.265,21,2.033,27,1.753,28,2.851,45,1.135,48,0.403,49,0.005,51,0.002,53,1.522,55,1.552,56,1.25,57,0.383,58,0.961,60,1.308,96,0.227,138,0.036,176,0.003,177,0.002,232,2.461,235,2.145,252,1.889,291,3.008,294,1.572,295,1.501,296,1.314,300,1.259,303,1.456,311,1.296,313,0.919,314,0.587,323,1.893,342,1.997,346,1.232,347,1.65,359,1.623,360,1.435,363,2.826,364,1.677,365,1.677,366,1.524,368,2.128,371,1.677,392,2.692,401,1.964,402,2.697,403,2.002,404,2.002,405,1.794,449,5.381,462,5.684,507,7.312,986,2.438,1392,3.826,1393,3.243,1395,3.493,1397,4.245,1399,3.243,1408,3.169,1410,2.438,1411,2.569,1413,2.379,1414,2.569,1415,2.722,1416,2.904,1419,2.904,1711,7.919,1712,4.174,1713,6.506,1714,4.66,1715,5.828,1716,4.66,1717,4.66,1718,4.66,1719,4.174]],["title/interfaces/CircleOptions.html",[0,0.247,968,3.071]],["body/interfaces/CircleOptions.html",[0,0.252,2,0.375,3,0.028,4,0.044,5,0.044,6,0.034,8,0.218,9,0.682,26,1.999,27,1.937,48,0.529,49,0.005,51,0.003,57,0.42,58,1.227,96,0.182,99,1.25,138,0.039,176,0.003,177,0.003,260,1.715,423,4.895,424,4.499,425,4.753,426,5.051,427,5.627,428,5.627,430,4.177,431,5.222,432,5.222,433,5.222,434,4.895,458,1.455,968,4.273,1334,2.12,1383,5.627,1384,5.627,1385,2.567,1709,4.504,1710,3.248]],["title/injectables/CircleService.html",[346,0.933,1720,4.414]],["body/injectables/CircleService.html",[1,1.87,3,0.023,4,0.037,5,0.037,6,0.061,8,0.18,9,0.595,14,4.088,15,2.676,21,1.87,27,1.676,45,1.044,46,1.568,48,0.377,49,0.005,51,0.002,53,1.575,55,1.546,56,1.258,57,0.386,58,0.967,60,1.424,96,0.226,138,0.032,176,0.003,177,0.002,232,2.723,235,2.01,252,1.737,291,3.077,294,1.398,295,1.334,296,1.168,300,1.12,303,1.295,311,1.152,313,0.817,314,0.753,323,1.683,342,2.175,346,1.133,347,1.467,352,2.863,354,2.753,359,1.443,360,1.275,361,1.541,362,1.541,363,2.68,364,1.491,365,1.491,366,1.355,368,1.958,371,1.491,392,2.476,401,1.746,402,2.528,403,1.78,404,1.78,405,1.595,968,4.795,986,2.168,1391,4.923,1392,3.586,1393,2.983,1394,4.193,1395,3.213,1396,5.392,1397,4.026,1399,2.983,1401,5.361,1403,4.949,1408,2.915,1410,2.168,1411,2.284,1413,2.115,1414,2.284,1415,3.496,1416,2.582,1419,2.582,1420,4.923,1715,5.361,1719,3.711,1720,5.361,1721,3.711,1722,5.985,1723,4.143,1724,4.143,1725,4.143,1726,4.143,1727,4.143,1728,4.143,1729,4.143,1730,4.143,1731,4.143]],["title/interfaces/CityInfo.html",[0,0.247,1732,4.075]],["body/interfaces/CityInfo.html",[0,0.344,2,0.512,3,0.039,4,0.061,5,0.061,6,0.046,8,0.298,9,0.834,48,0.544,49,0.005,51,0.003,56,1.453,57,0.398,138,0.053,153,6.146,176,0.004,177,0.003,205,5.877,210,6.332,458,1.3,1337,5.2,1619,3.684,1732,6.934,1733,6.862]],["title/interfaces/ClusterStyle.html",[0,0.247,107,3.452]],["body/interfaces/ClusterStyle.html",[0,0.312,2,0.464,3,0.035,4,0.055,5,0.055,6,0.042,8,0.27,9,0.785,31,4.362,39,4.327,48,0.516,49,0.005,51,0.003,57,0.405,58,1.17,96,0.209,100,3.753,101,3.88,107,5.529,138,0.048,176,0.004,177,0.003,458,1.244,830,4.34,1734,6.226,1735,6.226,1736,7.067,1737,8.161,1738,8.161,1739,6.694]],["title/interfaces/Cross.html",[0,0.247,1740,4.075]],["body/interfaces/Cross.html",[0,0.315,2,0.469,3,0.036,4,0.056,5,0.056,6,0.042,8,0.273,9,0.79,26,2.181,48,0.553,49,0.005,51,0.003,57,0.412,96,0.167,98,1.937,99,1.564,138,0.049,176,0.004,177,0.003,458,1.25,702,5.043,1147,6.408,1740,6.571,1741,6.293,1742,4.785,1743,9.147,1744,9.147,1745,9.147,1746,9.147]],["title/injectables/DebugLoggerService.html",[346,0.933,1747,4.075]],["body/injectables/DebugLoggerService.html",[3,0.031,4,0.049,5,0.049,6,0.062,8,0.239,45,1.273,48,0.536,49,0.005,51,0.003,52,2.223,53,1.557,55,1.582,56,1.34,57,0.367,58,1.031,60,1.518,96,0.146,138,0.043,176,0.004,177,0.003,235,2.489,252,2.373,300,1.489,313,1.087,346,1.381,347,1.951,1747,6.031,1748,9.296,1749,5.512,1750,5.657,1751,5.657,1752,5.358,1753,5.512,1754,6.532,1755,9.108,1756,5.512,1757,6.532,1758,5.512,1759,6.532,1760,5.512,1761,6.532,1762,5.512,1763,6.532,1764,4.937,1765,4.937]],["title/interfaces/Dining.html",[0,0.247,1766,4.075]],["body/interfaces/Dining.html",[0,0.245,2,0.364,3,0.028,4,0.043,5,0.043,6,0.033,8,0.212,9,0.668,48,0.566,49,0.005,51,0.002,57,0.427,96,0.13,138,0.038,176,0.003,177,0.002,235,2.368,1619,2.621,1677,6.421,1678,6.421,1680,6.846,1682,5.799,1683,6.421,1684,5.606,1766,5.557,1767,4.882,1768,7.414,1769,8.278,1770,7.414,1771,8.278,1772,8.278,1773,7.414,1774,7.414,1775,8.278,1776,7.414,1777,7.414,1778,8.278,1779,7.414,1780,8.278]],["title/interfaces/Discount.html",[0,0.247,1781,3.822]],["body/interfaces/Discount.html",[0,0.308,2,0.458,3,0.035,4,0.054,5,0.054,6,0.041,8,0.267,9,0.778,48,0.556,49,0.005,51,0.003,57,0.415,96,0.163,138,0.048,176,0.004,177,0.003,458,1.236,1619,3.299,1682,6.353,1684,6.048,1739,6.662,1781,6.071,1782,6.145,1783,7.499,1784,9.067,1785,8.122,1786,8.122,1787,9.067,1788,6.088]],["title/interfaces/District.html",[0,0.247,115,2.578]],["body/interfaces/District.html",[0,0.315,2,0.468,3,0.036,4,0.055,5,0.055,6,0.042,8,0.272,9,0.789,26,2.331,48,0.546,49,0.005,51,0.003,56,1.408,57,0.412,96,0.167,98,1.932,99,1.56,115,4.931,138,0.049,176,0.004,177,0.003,205,5.694,210,6.135,424,4.905,607,6.135,1445,4.868,1789,6.276,1790,9.138,1791,8.185]],["title/interfaces/DistrictSearch.html",[0,0.247,17,3.452]],["body/interfaces/DistrictSearch.html",[0,0.375,2,0.428,3,0.033,4,0.051,5,0.051,6,0.059,8,0.249,17,5.841,45,1.307,48,0.505,49,0.005,50,3.654,51,0.004,53,1.435,55,1.516,56,1.285,57,0.352,58,0.988,60,1.455,68,4.453,96,0.221,114,3.529,115,3.919,116,7.309,138,0.058,176,0.004,177,0.003,190,2.1,314,0.723,357,1.865,458,1.197,581,6.423,584,4.022,595,5.81,597,5.81,601,6.709,602,6.709,607,3.854,1096,5.503,1323,4.022,1324,4.119,1330,1.666,1331,2.734,1445,6.855,1446,4.217,1447,5.142,1792,5.74,1793,5.142,1794,5.142]],["title/interfaces/DistrictSearchOptions.html",[0,0.247,581,3.452]],["body/interfaces/DistrictSearchOptions.html",[0,0.336,2,0.5,3,0.038,4,0.059,5,0.059,6,0.045,8,0.291,9,0.822,48,0.526,49,0.005,51,0.003,57,0.394,58,1.187,114,2.582,138,0.052,176,0.004,177,0.003,260,1.97,458,1.287,581,5.792,607,6.281,1334,2.827,1795,6.706,1796,6.555,1797,9.356,1798,9.356]],["title/interfaces/DistrictSearchResult.html",[0,0.247,584,3.452]],["body/interfaces/DistrictSearchResult.html",[0,0.356,2,0.53,3,0.055,4,0.063,5,0.063,6,0.048,8,0.309,9,0.852,48,0.494,49,0.005,51,0.004,57,0.361,96,0.189,114,2.738,115,5.111,138,0.055,163,4.774,176,0.004,177,0.004,584,6.003,1336,4.286,1445,5.516,1791,8.55]],["title/injectables/DocumentRef.html",[346,0.933,1799,3.452]],["body/injectables/DocumentRef.html",[3,0.04,4,0.062,5,0.062,6,0.057,8,0.303,45,1.479,49,0.005,51,0.004,53,1.202,60,1.219,96,0.185,105,4.352,138,0.066,176,0.004,177,0.004,300,1.887,313,1.672,342,2.258,346,1.728,347,2.472,1799,5.938,1800,7.591,1801,6.256,1802,8.498,1803,6.984,1804,4.893,1805,6.256,1806,6.256]],["title/interfaces/DriveRoute.html",[0,0.247,1807,4.075]],["body/interfaces/DriveRoute.html",[0,0.315,2,0.468,3,0.036,4,0.055,5,0.055,6,0.042,8,0.272,9,0.789,48,0.467,49,0.005,51,0.003,57,0.412,96,0.167,138,0.049,167,4.868,176,0.004,177,0.003,458,1.476,678,5.694,1270,5.182,1742,4.781,1807,6.56,1808,4.868,1809,5.191,1810,8.185,1811,7.557,1812,7.088,1813,7.088,1814,6.714,1815,5.622]],["title/interfaces/DriveStep.html",[0,0.247,1814,3.62]],["body/interfaces/DriveStep.html",[0,0.387,2,0.368,3,0.028,4,0.044,5,0.044,6,0.033,8,0.214,9,0.673,26,2.298,48,0.551,49,0.005,51,0.003,56,0.76,57,0.421,96,0.18,98,1.519,99,1.226,115,4.042,138,0.06,163,3.312,176,0.003,177,0.003,205,3.074,210,3.312,382,2.252,458,1.418,674,3.96,676,5.011,1270,4.715,1742,4.558,1808,3.827,1812,6.449,1813,6.449,1814,4.973,1816,3.625,1817,5.825,1818,6.109,1819,6.876,1820,6.109,1821,5.825,1822,6.109,1823,6.109,1824,6.876,1825,6.876,1826,6.449,1827,6.449,1828,4.08,1829,4.08]],["title/interfaces/Driving.html",[0,0.247,18,2.878]],["body/interfaces/Driving.html",[0,0.311,2,0.325,3,0.025,4,0.038,5,0.038,6,0.065,8,0.189,18,4.6,26,1.724,45,1.083,48,0.511,49,0.005,50,3.791,51,0.003,53,1.652,55,1.619,56,1.372,57,0.375,58,1.055,60,1.675,69,3.38,96,0.221,98,1.342,99,1.083,114,3.331,138,0.048,176,0.003,177,0.002,213,2.926,314,0.549,357,1.662,453,3.22,458,1.038,615,4.348,620,2.626,629,2.471,630,3.369,634,4.008,636,4.814,638,4.814,640,6.109,642,6.109,644,3.086,646,6.109,648,6.109,650,4.008,652,3.519,657,4.348,658,5.559,659,5.559,660,4.814,661,4.814,670,3.168,672,2.546,674,2.076,676,2.626,678,2.716,1324,4.149,1330,1.265,1331,2.076,1448,3.903,1449,2.076,1450,2.076,1451,3.903,1452,4.008,1830,4.358,1831,4.358,1832,4.358,1833,4.358,1834,4.358,1835,4.358,1836,3.38,1837,4.358,1838,4.358,1839,4.358,1840,4.358,1841,4.358,1842,4.358]],["title/interfaces/DrivingOptions.html",[0,0.247,615,3.452]],["body/interfaces/DrivingOptions.html",[0,0.27,2,0.402,3,0.031,4,0.048,5,0.048,6,0.036,8,0.234,9,0.714,27,1.967,48,0.534,49,0.005,51,0.003,57,0.419,58,1.226,96,0.143,138,0.042,176,0.004,177,0.003,213,5.787,260,2.186,458,1.353,615,5.032,678,5.371,1334,2.27,1380,5.566,1381,5.566,1385,2.749,1796,6.038,1843,5.385,1844,6.038,1845,8.619,1846,6.332,1847,6.038,1848,7.72]],["title/interfaces/DrivingResult.html",[0,0.247,620,2.97]],["body/interfaces/DrivingResult.html",[0,0.298,2,0.443,3,0.053,4,0.052,5,0.052,6,0.04,8,0.258,9,0.762,26,2.302,48,0.455,49,0.005,51,0.003,57,0.412,96,0.225,98,1.83,99,1.477,112,3.703,138,0.046,148,5.495,159,4.164,166,4.61,176,0.004,177,0.003,458,1.217,620,4.617,630,4.174,670,4.571,1336,3.582,1807,7.406,1815,5.323,1849,5.943,1850,6.946,1851,7.406,1852,6.946,1853,8.021,1854,8.955]],["title/interfaces/Editor.html",[0,0.247,1371,3.308]],["body/interfaces/Editor.html",[0,0.424,2,0.338,3,0.026,4,0.04,5,0.04,6,0.057,8,0.197,11,4.452,12,4.122,14,2.113,15,2.928,19,2.571,20,2.928,27,1.735,33,2.825,34,2.113,35,2.372,36,2.372,37,2.928,45,1.114,48,0.502,49,0.005,51,0.002,52,2.47,53,1.38,55,1.16,56,0.983,57,0.404,58,0.756,60,1.399,63,3.044,66,3.044,71,3.044,84,3.044,88,3.044,96,0.239,97,1.605,121,3.177,122,2.825,123,3.177,127,3.177,128,2.5,129,3.177,130,3.177,138,0.076,176,0.003,177,0.002,185,5.278,186,6.441,187,6.441,190,2.335,313,1.259,314,0.803,402,1.632,405,2.457,500,2.372,816,5.092,821,5.457,1363,3.177,1365,5.427,1367,5.427,1370,3.331,1371,6.275,1372,5.673,1373,4.285,1374,3.331,1375,3.331,1376,3.331,1377,3.331,1855,4.534,1856,4.534,1857,4.534,1858,4.534]],["title/interfaces/Ellipse.html",[0,0.247,19,2.794]],["body/interfaces/Ellipse.html",[0,0.325,2,0.346,3,0.026,4,0.041,5,0.041,6,0.065,8,0.202,13,3.214,19,4.242,26,2.162,27,1.751,45,1.132,49,0.005,51,0.002,52,2.363,53,1.656,55,1.55,56,1.313,57,0.359,58,1.01,60,1.679,70,3.6,96,0.226,97,1.643,98,1.429,99,1.154,119,2.211,138,0.05,176,0.003,177,0.002,260,1.426,314,0.584,357,0.98,413,4.882,414,3.945,415,3.775,417,3.289,418,5.033,419,4.043,420,3.91,422,3.289,424,2.492,453,2.922,495,3.16,497,2.892,498,2.961,500,2.428,567,4.356,1330,1.347,1342,4.466,1345,3.91,1355,2.788,1426,4.767,1430,3.91,1432,3.252,1449,2.211,1450,2.211,1453,4.157,1454,6.66,1455,4.157,1456,5.812,1859,4.642,1860,4.642,1861,4.642,1862,4.642,1863,4.642,1864,4.642,1865,4.642,1866,4.642,1867,4.642,1868,4.642,1869,4.642]],["title/interfaces/EllipseOptions.html",[0,0.247,1454,3.62]],["body/interfaces/EllipseOptions.html",[0,0.252,2,0.375,3,0.028,4,0.044,5,0.044,6,0.034,8,0.218,9,0.682,26,1.999,27,1.937,48,0.529,49,0.005,51,0.003,57,0.42,58,1.227,96,0.182,99,1.25,138,0.039,176,0.003,177,0.003,260,1.715,423,4.895,424,4.499,425,4.753,426,5.051,427,5.627,428,5.627,430,4.177,431,5.222,432,5.222,433,5.222,434,4.895,458,1.455,1334,2.12,1383,5.627,1384,5.627,1385,2.567,1454,5.038,1710,3.248,1870,5.029]],["title/injectables/EllipseService.html",[346,0.933,1871,4.414]],["body/injectables/EllipseService.html",[1,1.87,3,0.023,4,0.037,5,0.037,6,0.061,8,0.18,9,0.595,19,4.973,20,2.676,21,1.87,27,1.676,45,1.044,46,1.568,48,0.377,49,0.005,51,0.002,53,1.575,55,1.546,56,1.258,57,0.386,58,0.967,60,1.424,96,0.226,138,0.032,176,0.003,177,0.002,232,2.723,235,2.01,252,1.737,291,3.077,294,1.398,295,1.334,296,1.168,300,1.12,303,1.295,311,1.152,313,0.817,314,0.753,323,1.683,342,2.175,346,1.133,347,1.467,352,2.863,354,2.753,359,1.443,360,1.275,361,1.541,362,1.541,363,2.68,364,1.491,365,1.491,366,1.355,368,1.958,371,1.491,392,2.476,401,1.746,402,2.528,403,1.78,404,1.78,405,1.595,986,2.168,1391,4.923,1392,3.586,1393,2.983,1394,4.193,1395,3.213,1396,5.392,1397,4.026,1399,2.983,1408,2.915,1410,2.168,1411,2.284,1413,2.115,1414,2.284,1415,3.496,1416,2.582,1419,2.582,1420,4.923,1454,5.654,1751,4.642,1871,5.361,1872,3.711,1873,5.985,1874,4.143,1875,5.985,1876,4.143,1877,5.985,1878,4.143,1879,4.143,1880,4.143,1881,4.143,1882,4.143,1883,4.143,1884,4.143,1885,4.143]],["title/classes/EventBinder.html",[313,0.972,363,1.716]],["body/classes/EventBinder.html",[1,2.286,3,0.031,4,0.049,5,0.049,6,0.049,8,0.24,21,2.832,45,1.277,48,0.44,49,0.005,51,0.003,53,0.953,55,1.33,56,0.853,57,0.308,58,0.656,60,0.966,96,0.194,138,0.043,176,0.004,177,0.003,198,6.553,291,2.723,296,1.562,301,2.132,311,1.54,313,1.092,342,2.414,359,2.854,360,1.705,363,2.548,366,1.811,391,2.897,392,3.026,401,3.084,402,3.136,405,2.816,1011,4.912,1751,5.675,1886,6.553,1887,4.96,1888,5.538,1889,5.538,1890,7.316,1891,7.316,1892,5.538,1893,5.538,1894,7.316,1895,7.316,1896,5.538,1897,7.316,1898,5.538]],["title/interfaces/Geocode.html",[0,0.247,147,2.97]],["body/interfaces/Geocode.html",[0,0.326,2,0.485,3,0.037,4,0.057,5,0.057,6,0.044,8,0.282,9,0.806,26,2.207,48,0.539,49,0.005,51,0.003,57,0.402,96,0.215,98,2.002,99,1.616,138,0.05,140,4.365,147,4.888,176,0.004,177,0.003,202,7.724,205,5.767,397,3.919,607,6.213,702,5.103,1899,6.502,1900,8.289]],["title/interfaces/GeocodeResult.html",[0,0.247,1459,3.822]],["body/interfaces/GeocodeResult.html",[0,0.349,2,0.519,3,0.055,4,0.061,5,0.061,6,0.047,8,0.302,9,0.841,48,0.49,49,0.005,51,0.004,57,0.384,96,0.185,138,0.054,147,5.853,176,0.004,177,0.004,458,1.308,1336,4.197,1459,6.562,1901,6.964,1902,8.49,1903,8.49]],["title/interfaces/Geocoder.html",[0,0.247,22,3.452]],["body/interfaces/Geocoder.html",[0,0.373,2,0.424,3,0.032,4,0.05,5,0.05,6,0.059,8,0.247,22,5.814,45,1.299,48,0.504,49,0.005,50,4.109,51,0.004,53,1.429,55,1.509,56,1.279,57,0.35,58,0.983,60,1.448,73,4.41,96,0.243,138,0.058,147,4.486,176,0.004,177,0.003,209,2.65,240,4.638,284,3.545,314,0.716,357,1.2,397,3.426,453,3.133,702,3.135,713,5.215,722,5.773,725,5.773,726,4.41,730,6.667,731,5.468,1324,4.453,1330,1.65,1331,2.708,1449,2.708,1450,2.708,1457,5.092,1458,5.092,1459,4.41,1460,4.41,1461,4.177,1904,5.685,1905,5.685,1906,5.685]],["title/interfaces/GeocoderOptions.html",[0,0.247,713,3.452]],["body/interfaces/GeocoderOptions.html",[0,0.339,2,0.504,3,0.038,4,0.06,5,0.06,6,0.045,8,0.294,9,0.826,48,0.527,49,0.005,51,0.003,57,0.396,58,1.162,138,0.053,176,0.004,177,0.003,209,4.374,260,1.977,430,4.677,458,1.292,713,5.822,1334,2.851,1796,6.574,1907,6.763,1908,9.384]],["title/interfaces/GeocoderResult.html",[0,0.247,1909,4.414]],["body/interfaces/GeocoderResult.html",[0,0.334,2,0.497,3,0.054,4,0.059,5,0.059,6,0.045,8,0.289,9,0.819,48,0.48,49,0.005,51,0.003,57,0.394,96,0.219,138,0.052,147,5.89,176,0.004,177,0.003,458,1.283,1336,4.019,1461,4.899,1902,8.363,1903,8.363,1909,7.379,1910,6.668,1911,7.761]],["title/interfaces/Groupbuy.html",[0,0.247,1912,4.075]],["body/interfaces/Groupbuy.html",[0,0.259,2,0.386,3,0.029,4,0.046,5,0.046,6,0.035,8,0.225,9,0.695,48,0.559,49,0.005,51,0.003,57,0.431,96,0.137,138,0.04,176,0.004,177,0.003,458,1.443,1337,4.675,1619,2.776,1682,5.941,1684,5.72,1739,6.23,1781,6.577,1783,7.012,1785,7.595,1786,7.595,1788,5.693,1912,5.78,1913,5.172,1914,8.479,1915,8.479,1916,8.479,1917,8.479,1918,8.479,1919,8.479,1920,8.479]],["title/interfaces/Heatmap.html",[0,0.247,23,2.878]],["body/interfaces/Heatmap.html",[0,0.425,2,0.342,3,0.026,4,0.04,5,0.04,6,0.064,8,0.199,23,4.342,27,1.894,45,1.123,48,0.246,49,0.005,51,0.002,52,2.059,53,1.613,55,1.465,56,1.242,57,0.358,58,0.955,59,2.462,60,1.635,74,3.08,96,0.171,97,1.624,99,2.003,138,0.068,176,0.003,177,0.002,190,1.678,357,0.968,415,3.756,417,3.272,420,3.878,422,3.272,458,1.401,498,2.937,500,2.4,743,5.645,744,4.57,745,5.764,747,4.109,755,5.41,760,5.63,776,4.48,1330,1.332,1337,4.679,1345,3.878,1355,2.765,1462,3.214,1463,3.37,1464,3.37,1465,4.728,1466,4.728,1467,5.208,1468,4.32,1469,4.32,1470,3.37,1471,4.32,1472,3.37,1473,3.37,1474,3.37,1921,6.435,1922,4.587,1923,4.587,1924,4.587,1925,4.587,1926,4.587,1927,4.587,1928,4.587,1929,4.587,1930,4.587]],["title/interfaces/HeatmapDataSet.html",[0,0.247,1469,3.308]],["body/interfaces/HeatmapDataSet.html",[0,0.459,2,0.426,3,0.032,4,0.05,5,0.05,6,0.038,8,0.248,9,0.742,23,4.361,27,1.812,48,0.307,49,0.005,51,0.003,52,1.908,57,0.351,58,0.885,59,3.066,74,3.835,96,0.198,97,2.022,99,1.856,138,0.073,176,0.004,177,0.003,357,1.205,415,2.663,417,2.32,422,2.32,458,1.408,498,2.607,743,4.002,744,3.239,755,5.013,760,5.497,776,5.658,1330,1.658,1337,4.586,1355,2.455,1462,4.002,1463,4.197,1464,4.197,1465,4.197,1466,4.197,1467,6.413,1468,3.835,1469,5.585,1470,6.481,1471,5.013,1472,4.197,1473,4.197,1474,4.197]],["title/interfaces/HeatmapDataUrl.html",[0,0.247,1471,3.308]],["body/interfaces/HeatmapDataUrl.html",[0,0.46,2,0.428,3,0.033,4,0.051,5,0.051,6,0.039,8,0.249,9,0.745,23,4.375,27,1.815,48,0.448,49,0.005,51,0.003,52,1.914,57,0.352,59,4.476,74,3.854,96,0.199,97,2.032,99,1.862,138,0.073,176,0.004,177,0.003,357,1.211,415,2.676,417,2.331,422,2.331,458,1.375,498,2.62,743,4.022,744,3.255,755,5.029,760,5.507,776,5.666,1330,1.666,1337,4.597,1355,2.467,1462,4.022,1463,4.217,1464,4.217,1465,4.217,1466,4.217,1467,5.841,1468,3.854,1469,5.029,1470,4.217,1471,5.598,1472,4.217,1473,6.493,1474,4.217]],["title/interfaces/HeatmapLngLatData.html",[0,0.247,1467,3.452]],["body/interfaces/HeatmapLngLatData.html",[0,0.456,2,0.419,3,0.032,4,0.05,5,0.05,6,0.038,8,0.244,9,0.734,23,4.313,27,1.8,48,0.302,49,0.005,51,0.003,52,1.887,57,0.369,58,0.875,59,3.015,74,3.771,96,0.196,97,1.988,99,2.263,138,0.073,176,0.004,177,0.003,357,1.185,415,2.618,417,2.281,422,2.281,458,1.445,498,2.563,743,3.935,744,3.185,755,4.958,760,5.461,776,4.972,1330,1.63,1337,5.153,1355,2.414,1462,3.935,1463,4.127,1464,4.127,1465,4.127,1466,4.127,1467,6.14,1468,5.884,1469,4.958,1470,4.127,1471,4.958,1472,4.127,1473,4.127,1474,4.127]],["title/interfaces/HeatmapOptions.html",[0,0.247,760,3.071]],["body/interfaces/HeatmapOptions.html",[0,0.34,2,0.506,3,0.038,4,0.06,5,0.06,6,0.046,8,0.294,9,0.828,49,0.005,51,0.003,57,0.396,58,1.189,138,0.053,176,0.004,177,0.003,430,4.682,458,1.452,748,7.768,749,7.768,750,7.286,760,5.188,1334,2.859,1931,6.783]],["title/injectables/HeatmapService.html",[346,0.933,752,4.075]],["body/injectables/HeatmapService.html",[1,1.973,3,0.025,4,0.039,5,0.039,6,0.06,8,0.194,9,0.628,21,1.973,23,5.094,27,1.635,45,1.102,46,1.69,48,0.393,49,0.005,51,0.002,53,1.543,55,1.527,56,1.227,57,0.386,58,0.943,60,1.278,96,0.231,138,0.035,176,0.003,177,0.002,232,2.778,233,3.148,235,2.096,252,1.833,291,3.037,294,1.507,295,1.438,296,1.259,300,1.207,303,1.395,311,1.755,313,0.881,314,0.562,315,2.713,323,2.564,342,1.952,346,1.196,347,1.581,352,2.962,354,2.87,359,1.555,360,1.375,361,1.661,362,1.661,363,2.773,364,1.607,365,1.607,366,1.461,368,2.065,371,1.607,389,2.462,392,2.612,401,1.882,402,2.636,403,1.919,404,1.919,405,1.719,752,5.222,760,4.962,986,2.336,1392,3.739,1393,3.147,1395,3.389,1397,4.166,1399,3.147,1408,3.075,1410,2.336,1411,2.462,1413,3.223,1414,2.462,1932,4,1933,6.314,1934,4.465,1935,6.314,1936,4.465,1937,4.465,1938,4.465,1939,4.465,1940,3.693,1941,4.465,1942,4.465,1943,4.465]],["title/interfaces/Hotel.html",[0,0.247,1944,4.075]],["body/interfaces/Hotel.html",[0,0.282,2,0.419,3,0.032,4,0.05,5,0.05,6,0.038,8,0.244,9,0.734,48,0.563,49,0.005,51,0.003,57,0.422,96,0.149,138,0.044,176,0.004,177,0.003,1619,3.015,1677,6.798,1678,6.798,1682,6.14,1683,6.798,1684,5.879,1768,7.849,1773,7.849,1779,7.849,1944,6.107,1945,5.617,1946,8.763,1947,8.763,1948,8.763,1949,8.763,1950,8.763]],["title/interfaces/IClusterStyle.html",[0,0.247,1951,3.62]],["body/interfaces/IClusterStyle.html",[0,0.312,2,0.464,3,0.035,4,0.055,5,0.055,6,0.042,8,0.27,9,0.785,39,3.993,48,0.516,49,0.005,51,0.003,57,0.405,58,1.17,96,0.209,138,0.048,176,0.004,177,0.003,458,1.244,830,4.34,849,4.98,853,5.677,1736,7.067,1737,8.161,1738,8.161,1739,6.694,1951,5.799,1952,6.226,1953,6.226,1954,5.577,1955,5.149]],["title/interfaces/IIcon.html",[0,0.247,1476,3.452]],["body/interfaces/IIcon.html",[0,0.329,2,0.489,3,0.037,4,0.058,5,0.058,6,0.044,8,0.285,9,0.811,39,4.067,48,0.477,49,0.005,51,0.003,57,0.391,58,1.182,96,0.216,138,0.051,176,0.004,177,0.003,849,4.738,853,6.149,1476,5.712,1736,7.2,1954,5.872,1955,5.422,1956,6.556,1957,9.282,1958,8.314]],["title/interfaces/IKeyMap.html",[0,0.247,1959,4.075]],["body/interfaces/IKeyMap.html",[0,0.284,2,0.423,3,0.032,4,0.05,5,0.05,6,0.05,39,2.485,48,0.503,49,0.005,51,0.003,53,0.976,138,0.044,176,0.004,177,0.003,232,2.254,295,3.018,311,1.577,313,1.119,342,2.581,402,2.982,632,4.49,644,2.222,1392,2.895,1413,2.895,1663,4.69,1665,5.807,1959,6.855,1960,6.656,1961,5.08,1962,5.671,1963,5.671,1964,6.146,1965,6.656,1966,5.08,1967,5.764,1968,7.879,1969,5.08,1970,8.675,1971,5.08,1972,5.08,1973,3.808,1974,4.69,1975,5.08,1976,5.08,1977,6.656,1978,5.08]],["title/interfaces/ILabel.html",[0,0.247,1979,3.822]],["body/interfaces/ILabel.html",[0,0.36,2,0.535,3,0.041,4,0.063,5,0.063,6,0.048,8,0.312,9,0.857,48,0.496,49,0.005,51,0.004,57,0.363,96,0.19,138,0.056,176,0.004,177,0.004,814,6.428,830,4.561,849,4.887,1955,5.935,1979,6.683,1980,7.176]],["title/interfaces/IMapAPILoaderConfig.html",[0,0.247,1981,3.822]],["body/interfaces/IMapAPILoaderConfig.html",[0,0.2,2,0.297,3,0.023,4,0.035,5,0.035,6,0.027,8,0.173,9,0.578,21,1.244,27,0.818,48,0.526,49,0.005,50,1.745,51,0.002,57,0.318,58,1.052,59,3.121,96,0.182,138,0.053,176,0.003,177,0.002,232,2.694,235,1.139,248,2.79,249,3.293,260,1.51,291,1.244,295,2.212,296,1.937,300,1.076,311,2.409,313,0.785,314,0.732,342,2.236,346,1.101,530,2.925,594,2.032,838,2.673,839,3.505,889,4.272,1011,2.673,1488,2.79,1571,4.272,1665,5.629,1670,3.293,1750,4.51,1752,4.272,1799,4.812,1804,4.812,1967,3.089,1981,5.328,1982,3.089,1983,5.189,1984,2.79,1985,3.089,1986,6.247,1987,6.247,1988,6.766,1989,6.247,1990,3.566,1991,3.566,1992,3.293,1993,3.293,1994,2.79,1995,4.51,1996,3.293,1997,2.79,1998,2.925,1999,3.566,2000,3.293,2001,3.566,2002,3.293,2003,3.566,2004,3.566,2005,3.566,2006,3.566,2007,3.566,2008,5.208,2009,3.566,2010,3.566,2011,3.566,2012,3.089,2013,6.766,2014,4.809,2015,5.208,2016,3.566,2017,3.566,2018,3.566,2019,3.566,2020,3.566,2021,3.566,2022,4.074,2023,3.566,2024,3.566,2025,3.566,2026,3.566,2027,3.566,2028,3.566,2029,3.566,2030,3.566,2031,3.566,2032,3.566,2033,3.566,2034,3.566,2035,3.566,2036,3.566,2037,3.566,2038,3.566,2039,3.566,2040,3.566,2041,3.566,2042,5.208,2043,6.152,2044,3.566,2045,5.208,2046,5.208,2047,3.566,2048,3.566,2049,5.208,2050,3.566,2051,3.566,2052,3.566,2053,3.566,2054,3.566,2055,3.566,2056,3.566,2057,3.566]],["title/interfaces/IPixel.html",[0,0.247,849,2.515]],["body/interfaces/IPixel.html",[0,0.365,2,0.543,3,0.041,4,0.064,5,0.064,6,0.049,8,0.316,9,0.865,49,0.005,51,0.004,57,0.367,138,0.057,176,0.004,177,0.004,458,1.433,849,4.438,1532,7.071,1618,7.465,2058,7.287]],["title/interfaces/IPoiObject.html",[0,0.247,1623,3.822]],["body/interfaces/IPoiObject.html",[0,0.412,2,0.415,3,0.032,4,0.049,5,0.049,6,0.037,8,0.242,9,0.73,13,3.153,32,4.927,34,2.593,48,0.543,49,0.005,50,3.826,51,0.004,56,1.345,57,0.346,83,4.088,96,0.247,113,4.316,114,2.825,119,2.65,122,3.467,138,0.064,176,0.004,177,0.003,260,1.223,284,2.65,286,3.353,289,3.353,314,0.7,357,1.174,424,2.987,430,2.773,453,3.111,458,1.179,644,2.18,702,4.814,1043,4.927,1054,4.088,1056,4.088,1057,4.088,1059,4.088,1061,4.088,1065,3.898,1067,3.898,1070,4.088,1075,4.088,1323,3.898,1324,4.23,1330,1.615,1331,2.65,1439,5.862,1446,4.088,1449,2.65,1450,2.65,1619,2.987,1620,4.601,1621,4.088,1622,4.601,1623,6.772]],["title/interfaces/ISize.html",[0,0.247,853,3.071]],["body/interfaces/ISize.html",[0,0.365,2,0.543,3,0.041,4,0.064,5,0.064,6,0.049,8,0.316,9,0.865,49,0.005,51,0.004,57,0.367,138,0.057,176,0.004,177,0.004,458,1.433,853,5.418,1639,7.071,1640,6.742,2059,7.287]],["title/interfaces/Icon.html",[0,0.247,24,2.515]],["body/interfaces/Icon.html",[0,0.41,2,0.492,3,0.037,4,0.058,5,0.058,6,0.06,8,0.286,24,4.54,39,4.33,45,1.428,49,0.005,51,0.003,52,2.09,53,1.408,55,1.199,56,1.016,57,0.278,58,0.781,60,1.428,75,5.114,96,0.217,101,4.108,102,4.619,138,0.064,176,0.004,177,0.003,314,0.83,357,1.391,1475,5.905,1476,5.731,1477,5.905,1478,8.33,1479,7.327,2060,8.18,2061,6.593,2062,6.593]],["title/injectables/IconService.html",[346,0.933,2063,3.62]],["body/injectables/IconService.html",[1,2.085,3,0.027,4,0.043,5,0.043,6,0.055,8,0.21,9,0.664,24,4.564,31,2.983,39,3.349,45,1.164,48,0.502,49,0.005,51,0.002,53,1.316,55,1.213,56,1.439,57,0.322,58,0.791,60,0.843,96,0.23,138,0.038,176,0.003,177,0.002,190,1.768,232,2.024,235,2.187,252,1.937,294,1.631,295,1.556,296,1.363,300,1.306,303,1.51,311,1.855,313,0.953,314,0.608,323,3.632,342,2.196,346,1.264,347,1.711,360,1.488,366,1.581,631,2.823,632,2.466,843,5.533,1159,4.814,1393,3.326,1399,3.326,1408,3.25,1476,5.354,1560,3.996,1973,5.131,2063,4.902,2064,4.328,2065,4.328,2066,6.672,2067,4.832,2068,3.244,2069,3.996,2070,4.832,2071,4.832,2072,4.832,2073,8.241,2074,4.832,2075,4.832,2076,8.241,2077,4.832,2078,4.832,2079,8.241,2080,4.832,2081,4.832,2082,4.832]],["title/interfaces/InfoWindow.html",[0,0.247,25,3.452]],["body/interfaces/InfoWindow.html",[0,0.331,2,0.355,3,0.027,4,0.042,5,0.042,6,0.064,8,0.207,25,5.314,26,2.22,27,1.767,39,4.001,45,1.153,48,0.355,49,0.005,51,0.002,52,2.445,53,1.627,55,1.489,56,1.262,57,0.345,58,0.971,60,1.649,76,3.695,96,0.217,97,1.686,98,1.467,99,1.184,101,2.968,105,2.968,138,0.051,176,0.003,177,0.002,190,1.743,260,1.452,314,0.6,357,1.005,458,1.176,814,3.198,816,4.937,817,6.354,818,6.774,819,5.739,820,6.018,821,4.267,822,5.918,823,5.464,824,5.918,870,5.464,874,5.464,882,4.629,1330,1.383,1442,3.982,1480,8.57,1481,4.267,1482,4.267,1483,5.918,1484,6.794,1485,4.854,2083,4.764,2084,4.764,2085,4.764,2086,4.764,2087,4.764,2088,4.764,2089,4.764,2090,4.764,2091,4.764]],["title/interfaces/InfoWindowOptions.html",[0,0.247,882,3.452]],["body/interfaces/InfoWindowOptions.html",[0,0.289,2,0.43,3,0.033,4,0.051,5,0.051,6,0.039,8,0.25,9,0.747,26,2.112,31,3.959,39,4.26,49,0.005,51,0.003,57,0.41,58,1.211,96,0.222,99,1.434,105,3.594,138,0.045,176,0.004,177,0.003,260,2.208,814,5.945,826,7.322,827,7.322,828,7.322,830,4.217,831,5.718,832,7.322,882,5.265,1334,2.432,1710,3.725,2092,5.768,2093,4.77,2094,5.768]],["title/injectables/InfoWindowService.html",[346,0.933,841,4.075]],["body/injectables/InfoWindowService.html",[1,1.826,3,0.039,4,0.035,5,0.035,6,0.058,8,0.174,9,0.581,21,1.826,24,2.046,25,5.892,26,0.956,27,1.556,31,3.083,39,3.321,45,1.02,48,0.37,49,0.005,51,0.002,53,1.495,55,1.529,56,1.241,57,0.375,58,0.955,60,1.322,96,0.236,105,3.641,138,0.031,176,0.003,177,0.002,190,1.467,232,2.551,235,1.973,252,1.696,291,2.98,294,1.353,295,1.291,296,1.131,300,1.083,301,1.543,303,1.253,311,1.115,313,0.791,314,0.505,323,1.628,342,2.019,346,1.107,347,1.419,359,2.035,360,1.234,363,2.639,364,1.442,365,1.442,366,1.311,368,1.911,371,1.442,392,2.417,401,1.69,402,2.481,403,1.723,404,1.723,405,1.543,453,2.598,821,3.774,830,1.909,831,4.894,841,4.833,843,5.088,849,2.046,882,5.309,884,7.18,986,2.097,1159,4.426,1392,3.52,1393,2.912,1395,3.137,1397,3.965,1399,2.912,1408,2.846,1410,2.097,1411,2.21,1413,2.046,1414,2.21,1415,3.413,2068,2.692,2069,3.315,2095,7.776,2096,3.591,2097,5.844,2098,4.009,2099,5.844,2100,4.009,2101,5.844,2102,4.009,2103,4.009,2104,4.533,2105,3.11,2106,5.844,2107,4.009,2108,4.009,2109,4.009,2110,4.009,2111,4.009]],["title/classes/KeyMap.html",[313,0.972,1964,4.075]],["body/classes/KeyMap.html",[0,0.211,3,0.024,4,0.037,5,0.037,6,0.064,8,0.182,9,0.601,39,3.104,45,1.055,48,0.517,49,0.005,51,0.002,52,1.074,53,1.624,55,1.408,56,1.194,57,0.36,58,0.918,60,1.573,138,0.033,176,0.003,177,0.002,232,2.592,260,0.924,294,2.04,295,3.001,311,1.168,313,0.829,342,2.402,391,2.198,393,3.014,402,3.075,458,0.603,632,3.954,644,3.035,820,3.087,1392,3.615,1413,2.145,1663,5,1665,5.988,1959,5.857,1960,8.538,1961,3.764,1964,6.406,1965,6.344,1966,6.344,1967,5.494,1968,6.938,1969,5.416,1970,8.073,1971,5.416,1972,5.416,1973,4.755,1974,6.406,1975,3.764,1976,6.938,1977,5.416,1978,6.938,2112,6.046,2113,4.202,2114,4.202,2115,4.202,2116,4.202,2117,4.202,2118,4.202,2119,4.202,2120,4.202,2121,4.202,2122,4.202,2123,4.202]],["title/injectables/LabelService.html",[346,0.933,2124,3.822]],["body/injectables/LabelService.html",[1,2.333,3,0.032,4,0.05,5,0.05,6,0.059,8,0.248,9,0.742,31,3.338,45,1.303,48,0.474,49,0.005,51,0.003,53,1.432,55,1.358,56,1.447,57,0.351,58,0.885,60,0.997,96,0.234,138,0.044,176,0.004,177,0.003,190,2.09,235,2.38,252,1.658,294,1.927,295,1.84,296,1.611,300,1.544,303,1.785,311,1.588,313,1.127,323,3.032,342,1.99,346,1.414,347,2.022,360,1.759,366,1.868,387,2.363,632,2.916,814,3.835,830,2.721,1159,5.152,1393,3.721,1399,3.721,1408,3.637,1979,7.283,2065,5.117,2068,3.835,2105,4.431,2124,5.792,2125,5.117,2126,7.466,2127,5.712,2128,5.792,2129,5.712,2130,5.712]],["title/interfaces/LngLat.html",[0,0.247,26,1.175]],["body/interfaces/LngLat.html",[0,0.364,2,0.408,3,0.031,4,0.048,5,0.048,6,0.064,8,0.238,26,2.378,45,1.267,48,0.39,49,0.005,51,0.003,53,1.597,55,1.481,56,1.255,57,0.343,58,0.965,60,1.619,77,4.245,99,1.36,138,0.056,176,0.004,177,0.003,260,1.595,314,0.689,368,2.374,458,1.447,830,3.458,1429,5.602,1468,3.675,1486,8.478,1487,4.902,1488,6.077,1489,6.502,1490,7.296,1491,6.502,1492,4.902,1493,7.77,1494,7.77,1495,6.502,1742,3.798,1752,4.021,2131,6.502,2132,5.473,2133,5.473,2134,5.473,2135,5.473,2136,5.473,2137,5.473]],["title/injectables/LoggerService.html",[346,0.933,839,2.97]],["body/injectables/LoggerService.html",[3,0.032,4,0.049,5,0.049,6,0.063,8,0.243,45,1.285,48,0.537,49,0.005,51,0.003,52,2.235,53,1.565,55,1.59,56,1.348,57,0.369,58,1.036,60,1.527,96,0.148,138,0.043,176,0.004,177,0.003,235,2.503,252,2.389,300,1.511,313,1.103,346,1.394,347,1.979,839,4.437,1750,5.71,1751,5.71,1752,5.409,1754,6.594,1755,9.089,1757,6.594,1759,6.594,1761,6.594,1763,5.007,1764,5.007,1765,5.007,2138,5.59,2139,5.59,2140,5.59,2141,5.59,2142,5.59,2143,5.59,2144,5.59]],["title/injectables/MapAPILoaderService.html",[346,0.933,1997,3.452]],["body/injectables/MapAPILoaderService.html",[0,0.162,3,0.018,4,0.028,5,0.028,6,0.06,8,0.14,9,0.494,21,1.009,27,1.02,45,0.867,48,0.509,49,0.005,50,1.414,51,0.002,53,1.503,55,0.903,56,0.765,57,0.361,58,0.589,59,2.667,60,0.867,96,0.161,138,0.047,176,0.003,177,0.002,232,2.954,235,1.733,248,2.261,249,2.669,252,0.937,260,0.709,291,1.552,294,2.043,295,2.497,296,1.708,300,0.872,311,2.246,313,0.637,314,0.625,342,2.066,346,0.941,347,1.143,530,2.371,594,1.647,838,4.066,839,4.098,889,3.65,1011,2.167,1488,2.261,1571,3.65,1665,5.144,1670,2.669,1750,5.275,1752,4.996,1799,5.432,1804,5.432,1967,2.504,1981,4.697,1982,6.893,1983,6.385,1984,6.226,1985,2.504,1986,2.669,1987,2.669,1988,2.891,1989,2.669,1990,2.891,1991,2.891,1992,2.669,1993,2.669,1994,2.261,1995,3.853,1996,2.669,1997,3.48,1998,3.65,1999,5.424,2000,4.108,2001,5.424,2002,4.108,2003,5.424,2004,5.424,2005,5.424,2006,5.424,2007,2.891,2008,5.424,2009,2.891,2010,2.891,2011,2.891,2012,5.275,2013,6.091,2014,4.108,2015,5.424,2016,2.891,2017,2.891,2018,2.891,2019,2.891,2020,2.891,2021,2.891,2022,3.48,2023,2.891,2024,2.891,2025,2.891,2026,2.891,2027,2.891,2028,2.891,2029,2.891,2030,2.891,2031,2.891,2032,4.449,2033,2.891,2034,2.891,2035,2.891,2036,2.891,2037,2.891,2038,2.891,2039,2.891,2040,2.891,2041,2.891,2042,4.449,2043,5.424,2044,2.891,2045,4.449,2046,4.449,2047,2.891,2048,2.891,2049,4.449,2050,2.891,2051,2.891,2052,2.891,2053,2.891,2054,2.891,2055,2.891,2056,2.891,2057,2.891,2145,4.967,2146,3.228,2147,4.967,2148,3.228,2149,3.228,2150,3.228,2151,3.228,2152,3.228,2153,3.228,2154,3.228,2155,3.228]],["title/injectables/MapAPIService.html",[346,0.933,1397,2.578]],["body/injectables/MapAPIService.html",[1,1.793,3,0.022,4,0.034,5,0.034,6,0.062,8,0.17,9,0.57,21,2.34,27,1.931,45,1.001,48,0.448,49,0.005,51,0.002,52,1.466,53,1.578,55,1.45,56,1.154,57,0.38,58,0.887,59,2.098,60,1.307,96,0.229,138,0.03,176,0.003,177,0.002,232,2.78,235,1.944,252,1.135,255,3.233,291,2.692,294,1.319,295,1.259,296,1.102,300,1.056,301,1.505,303,1.222,311,1.087,313,0.771,314,0.855,323,3.041,342,1.995,346,1.086,347,1.384,359,2.608,360,1.203,362,1.454,363,2.608,364,1.407,365,1.407,366,1.279,368,1.876,371,1.407,380,1.748,387,1.617,392,2.373,393,2.859,401,1.648,402,2.445,403,1.68,404,1.68,405,1.505,594,1.995,744,2.217,838,4.563,839,4.513,889,2.872,1392,3.469,1397,3.001,1410,4.795,1413,2.928,1497,5.808,1505,6.087,1982,7.109,1983,4.836,1984,2.739,1994,2.739,1997,5.246,1998,4.215,2156,3.501,2157,6.796,2158,6.796,2159,5.737,2160,5.737,2161,7.487,2162,3.501,2163,5.737,2164,5.737,2165,3.909,2166,5.737,2167,3.909,2168,3.909,2169,3.909,2170,3.909,2171,3.909,2172,3.909,2173,5.737,2174,3.909,2175,3.501,2176,3.909,2177,3.909,2178,3.909,2179,3.909,2180,3.909,2181,3.909,2182,3.909]],["title/interfaces/MapOptions.html",[0,0.247,1497,3.822]],["body/interfaces/MapOptions.html",[0,0.175,2,0.26,3,0.02,4,0.031,5,0.031,6,0.023,8,0.151,9,0.524,26,1.688,48,0.526,49,0.005,51,0.002,57,0.427,58,1.238,96,0.093,99,0.866,138,0.027,164,5.852,176,0.003,177,0.002,260,2.275,424,3.799,425,4.013,458,1.317,750,5.489,998,4.751,1101,5.199,1334,1.469,1497,4.086,1503,4.718,1710,2.251,2183,3.486,2184,6.338,2185,6.338,2186,6.338,2187,6.338,2188,6.338,2189,6.338,2190,6.338,2191,6.338,2192,6.338,2193,6.805,2194,6.338,2195,6.338,2196,6.338,2197,6.338,2198,6.338,2199,6.338,2200,6.338,2201,6.338,2202,6.338,2203,6.338,2204,6.338,2205,6.338,2206,6.338,2207,6.338,2208,6.338,2209,6.338,2210,5.199,2211,6.338,2212,3.486]],["title/interfaces/MarkerClusterer.html",[0,0.247,29,3.62]],["body/interfaces/MarkerClusterer.html",[0,0.269,2,0.267,3,0.02,4,0.032,5,0.032,6,0.066,8,0.155,27,1.809,28,4.31,29,4.742,39,2.356,45,0.938,49,0.005,51,0.002,53,1.686,55,1.657,56,1.404,57,0.384,58,1.08,60,1.709,80,2.778,96,0.19,97,1.268,107,5.656,108,3.767,109,2.509,120,2.962,138,0.042,176,0.003,177,0.002,260,1.69,314,0.451,357,0.756,458,1.383,744,4.068,803,2.631,1330,1.04,1345,3.24,1355,2.31,1586,8.809,1587,3.208,1588,3.767,1589,3.208,1590,5.564,1591,4.815,1592,4.815,1593,6.425,1594,6.425,1595,6.425,1596,6.425,1597,6.425,1598,4.815,1599,4.815,1600,4.815,1601,4.815,1602,6.425,1603,4.815,1604,6.425,1605,4.815,1606,4.815,1607,6.425,1608,4.815,2210,2.631,2213,5.376,2214,5.376,2215,5.376,2216,5.376,2217,5.376,2218,5.376,2219,5.376,2220,5.376,2221,5.376,2222,5.376,2223,3.582,2224,3.582,2225,3.582,2226,3.582,2227,3.582,2228,3.582,2229,3.582,2230,3.582,2231,3.582,2232,3.582,2233,3.582,2234,3.582,2235,3.582,2236,3.582,2237,2.778,2238,3.582,2239,3.582,2240,3.582,2241,3.582,2242,3.582,2243,3.582]],["title/interfaces/MarkerClustererOptions.html",[0,0.247,1588,3.452]],["body/interfaces/MarkerClustererOptions.html",[0,0.377,2,0.431,3,0.033,4,0.051,5,0.051,6,0.039,8,0.251,9,0.748,28,3.884,49,0.005,51,0.003,52,1.478,57,0.404,58,1.191,59,4.04,96,0.2,108,5.273,138,0.058,176,0.004,177,0.003,260,2.07,458,1.424,803,6.511,1334,2.438,1337,3.188,1588,5.273,1590,4.486,1951,6.511,2237,6.874,2244,5.179,2245,7.329,2246,7.329,2247,7.329,2248,7.329,2249,7.329,2250,4.782,2251,5.179,2252,5.179,2253,6.224]],["title/injectables/MarkerClustererService.html",[346,0.933,2254,4.414]],["body/injectables/MarkerClustererService.html",[1,1.725,3,0.021,4,0.033,5,0.033,6,0.058,8,0.161,9,0.549,21,1.725,27,1.5,28,2.42,29,2.727,31,2.948,39,3.2,45,0.964,46,1.404,48,0.354,49,0.005,51,0.002,53,1.498,55,1.487,56,1.203,57,0.375,58,0.925,60,1.274,96,0.231,107,4.619,108,2.6,109,3.868,126,4.566,138,0.029,176,0.003,177,0.002,232,2.746,233,2.833,235,1.886,252,1.603,291,2.871,294,1.252,295,1.195,296,1.047,300,1.003,303,1.16,311,1.032,313,0.732,314,0.467,315,2.373,323,2.242,342,1.946,346,1.046,347,1.314,352,2.716,354,2.583,359,1.293,360,1.143,361,1.381,362,1.381,363,2.543,364,1.335,365,1.335,366,1.214,368,1.806,371,1.335,389,2.047,392,2.284,401,1.565,402,2.372,403,1.595,404,1.595,405,1.429,830,1.768,843,4.902,849,1.894,853,2.313,986,1.942,1159,4.265,1392,3.365,1393,2.752,1395,2.964,1397,3.82,1399,2.752,1408,2.689,1410,1.942,1411,2.047,1413,2.818,1414,2.047,1588,5.115,1736,2.879,1940,3.069,1951,5.364,1973,3.707,2068,2.492,2069,3.069,2254,4.945,2255,7.797,2256,7.797,2257,3.324,2258,5.521,2259,5.521,2260,3.712,2261,5.521,2262,3.712,2263,5.521,2264,3.712,2265,3.712,2266,3.712,2267,3.712,2268,5.521,2269,3.712,2270,3.712,2271,3.712,2272,3.712,2273,3.712,2274,3.712,2275,5.521,2276,3.712,2277,7.301,2278,3.712,2279,7.301,2280,3.712]],["title/interfaces/MarkerOptions.html",[0,0.247,969,3.071]],["body/interfaces/MarkerOptions.html",[0,0.214,2,0.319,3,0.024,4,0.038,5,0.038,6,0.029,8,0.186,9,0.609,24,4.775,26,1.863,27,1.86,31,3.492,48,0.487,49,0.005,51,0.002,57,0.422,58,1.23,96,0.219,99,1.063,138,0.033,176,0.003,177,0.002,260,2.209,423,4.562,425,4.429,426,4.707,434,4.562,458,1.235,814,5.244,830,3.72,831,5.044,969,3.817,998,2.873,1334,1.804,1385,2.184,1560,3.538,1584,3.832,1710,2.763,1788,5.244,1979,6.058,2093,3.538,2128,6.058,2281,4.279,2282,6.058,2283,6.459,2284,6.058,2285,5.472,2286,6.459,2287,5.738,2288,6.996,2289,6.459,2290,6.459,2291,4.279,2292,3.832]],["title/injectables/MarkerService.html",[346,0.933,2293,4.414]],["body/injectables/MarkerService.html",[1,1.828,3,0.023,4,0.035,5,0.035,6,0.056,8,0.174,9,0.582,21,1.828,24,3.871,27,1.656,28,3.323,31,3.086,45,1.021,48,0.371,49,0.005,51,0.002,53,1.449,55,1.466,56,1.169,57,0.366,58,0.899,60,1.205,96,0.236,138,0.031,176,0.003,177,0.002,232,2.635,235,1.975,252,1.698,291,2.92,294,1.974,295,1.885,296,1.133,300,1.085,303,1.255,311,1.116,313,0.792,314,0.506,323,1.631,342,1.839,346,1.108,347,1.421,359,1.399,360,1.236,363,2.642,364,1.445,365,1.445,366,1.313,368,1.914,371,1.445,392,2.42,401,1.693,402,2.484,403,1.726,404,1.726,405,1.546,830,1.913,849,2.05,969,4.726,986,2.101,1159,4.43,1392,3.523,1393,2.916,1395,3.141,1397,3.968,1399,2.916,1408,2.85,1410,2.101,1411,2.214,1413,2.05,1414,2.214,1415,2.346,1416,2.502,1419,2.502,1973,5.092,2022,4.099,2063,5.572,2068,2.696,2104,5.883,2105,3.115,2124,5.883,2128,5.354,2287,2.95,2293,5.241,2294,3.597,2295,5.851,2296,6.793,2297,4.016,2298,5.851,2299,4.016,2300,4.016,2301,3.597,2302,4.016,2303,7.584,2304,4.016,2305,6.793,2306,3.597,2307,7.584,2308,4.016,2309,4.016,2310,4.016]],["title/interfaces/MouseTool.html",[0,0.247,30,3.452]],["body/interfaces/MouseTool.html",[0,0.314,2,0.329,3,0.025,4,0.039,5,0.039,6,0.064,8,0.191,14,2.916,27,1.494,28,2.741,30,5.095,34,2.916,35,3.273,36,3.273,45,1.092,49,0.005,51,0.002,53,1.621,55,1.712,56,1.451,57,0.397,58,1.116,60,1.643,81,3.418,96,0.222,97,1.56,138,0.049,176,0.003,177,0.002,260,1.598,314,0.555,323,3.771,644,1.727,816,3.77,968,4.932,969,4.932,970,6.158,971,5.565,990,4.852,992,4.852,994,4.852,996,4.852,1000,4.852,1002,4.852,1004,4.852,1006,4.852,1008,4.852,1010,4.852,1021,5.603,1022,5.603,1023,5.603,1024,5.603,1330,2.298,1441,3.087,1548,3.644,1609,8.531,1610,3.947,1611,3.947,1612,3.418,2311,4.407,2312,4.407,2313,4.407,2314,4.407,2315,4.407,2316,4.407,2317,4.407,2318,4.407,2319,4.407,2320,4.407]],["title/modules/NgxAmapModule.html",[2321,4.075,2322,3.62]],["body/modules/NgxAmapModule.html",[3,0.029,4,0.022,5,0.022,6,0.027,14,1.897,28,1.783,45,0.438,49,0.005,51,0.001,53,0.432,55,0.456,56,0.387,57,0.106,58,0.297,60,0.438,96,0.261,112,2.536,115,2.129,138,0.032,176,0.002,177,0.001,190,0.918,220,6.023,223,2.99,254,3.597,275,2.99,300,0.678,304,7.259,305,2.247,313,0.495,342,0.668,352,1.514,361,0.933,362,1.514,408,6.316,409,3.365,577,3.773,578,2.851,587,3.157,610,3.597,611,2.851,623,3.157,681,3.773,682,1.946,687,3.157,738,6.316,739,2.074,800,6.668,807,2.074,839,3.095,843,2.732,881,2.247,886,2.247,930,2.074,936,7.109,938,7.109,939,2.851,941,7.109,944,7.109,947,7.109,949,7.109,950,7.109,952,7.109,954,7.109,956,7.109,958,6.316,960,3.773,961,3.157,962,1.946,972,3.157,1041,3.773,1047,3.157,1107,3.597,1108,1.946,1118,3.157,1133,2.074,1159,2.377,1201,2.247,1237,3.597,1238,1.946,1248,3.157,1278,3.597,1279,3.157,1285,3.157,1294,3.597,1295,1.946,1305,3.157,1659,3.365,1747,3.365,1799,2.851,1804,2.851,1981,4.583,1983,2.628,1984,1.757,1992,2.074,1993,2.074,1995,3.157,1997,2.851,2063,2.99,2124,3.157,2210,2.99,2321,2.074,2322,7.427,2323,2.074,2324,1.946,2325,4.599,2326,2.074,2327,3.645,2328,4.599,2329,2.247,2330,2.247,2331,2.247,2332,2.247,2333,2.074,2334,4.069,2335,2.508,2336,2.508,2337,4.069,2338,2.508,2339,4.069,2340,5.135,2341,4.599,2342,2.508,2343,2.508,2344,2.508,2345,2.508,2346,2.247,2347,2.508,2348,8.596,2349,4.069,2350,2.508,2351,2.508,2352,2.247,2353,2.508,2354,2.247,2355,2.508,2356,2.508,2357,2.247,2358,2.508,2359,2.508,2360,2.508,2361,2.508,2362,2.508,2363,2.508,2364,4.069,2365,2.247,2366,2.508,2367,2.508,2368,2.247,2369,2.508,2370,2.247,2371,2.508,2372,2.247,2373,2.508,2374,2.247,2375,2.508,2376,2.508,2377,4.069,2378,2.508,2379,2.508,2380,2.508,2381,4.069,2382,2.508,2383,2.508,2384,2.508]],["title/interfaces/Photo.html",[0,0.247,1684,3.182]],["body/interfaces/Photo.html",[0,0.364,2,0.542,3,0.041,4,0.064,5,0.064,6,0.049,8,0.315,9,0.863,48,0.536,49,0.005,51,0.004,57,0.366,138,0.056,176,0.004,177,0.004,1619,3.9,1684,5.605,1739,7.064,1788,6.455,2385,7.265]],["title/interfaces/Pixel.html",[0,0.247,31,2.203]],["body/interfaces/Pixel.html",[0,0.394,2,0.462,3,0.035,4,0.055,5,0.055,6,0.063,8,0.269,31,4.289,45,1.373,48,0.423,49,0.005,51,0.003,53,1.565,55,1.126,56,0.954,57,0.261,58,0.734,60,1.587,82,4.804,96,0.164,100,3.733,138,0.061,176,0.004,177,0.003,260,1.729,314,0.78,368,2.573,458,1.377,849,4.412,1429,5.873,1432,4.339,1532,4.551,1613,5.548,1614,5.122,1615,8.145,1616,8.145,1617,7.046,1618,4.804,2131,7.046,2386,6.194,2387,6.194,2388,6.194,2389,6.194]],["title/injectables/PixelService.html",[346,0.933,1159,2.878]],["body/injectables/PixelService.html",[1,2.171,3,0.029,4,0.045,5,0.045,6,0.059,8,0.223,9,0.691,31,4.162,45,1.213,48,0.5,49,0.005,51,0.003,53,1.454,55,1.433,56,1.496,57,0.372,58,0.934,60,1.213,96,0.224,138,0.04,176,0.004,177,0.003,190,2.542,235,2.255,252,1.488,260,1.127,294,1.73,295,1.651,296,1.446,300,1.386,303,1.602,311,1.425,313,1.011,314,0.645,323,2.082,342,2.251,346,1.316,347,1.815,360,1.578,366,1.677,387,2.121,458,1.213,460,3.311,631,4.059,632,2.617,838,4.665,839,5.092,849,4.752,1159,4.059,1393,3.463,1399,3.463,1408,3.384,1532,3.767,1618,3.977,1994,3.592,2022,3.592,2390,4.592,2391,6.224,2392,4.592,2393,6.948,2394,5.127,2395,6.948,2396,5.127,2397,4.592,2398,5.127,2399,5.127,2400,5.127,2401,5.127,2402,4.592]],["title/interfaces/PlaceSearch.html",[0,0.247,32,3.308]],["body/interfaces/PlaceSearch.html",[0,0.319,2,0.262,3,0.02,4,0.031,5,0.031,6,0.064,8,0.152,13,3.441,32,4.279,34,2.97,45,0.923,48,0.535,49,0.005,50,4.026,51,0.003,53,1.616,55,1.671,56,1.432,57,0.392,58,1.089,60,1.638,83,2.577,96,0.213,113,7.344,114,2.732,119,1.67,122,2.185,138,0.049,176,0.003,177,0.002,209,1.635,240,3.297,241,3.888,242,3.888,260,1.401,284,2.52,286,3.189,288,2.577,289,3.189,314,0.441,357,0.74,424,3.421,430,3.176,453,2.611,458,1.257,644,2.781,672,3.091,702,1.934,1043,3.553,1054,3.888,1056,3.888,1057,2.577,1059,3.888,1061,3.888,1065,3.707,1067,4.973,1070,3.888,1075,3.888,1078,4.74,1079,4.74,1080,4.74,1081,4.74,1082,4.74,1083,4.74,1084,4.74,1085,5.708,1090,3.141,1096,4.682,1101,2.577,1103,2.72,1323,3.707,1324,4.332,1330,1.018,1331,1.67,1439,2.354,1446,2.577,1449,1.67,1450,1.67,1619,5.082,1620,2.9,1621,2.577,1622,4.376,1623,6.449,1793,3.141,1794,3.141,2403,3.507,2404,3.507,2405,3.507,2406,3.507,2407,3.507,2408,3.507,2409,3.507,2410,3.507,2411,3.507,2412,3.507,2413,3.507,2414,3.507]],["title/interfaces/PlaceSearchOptions.html",[0,0.247,1043,3.308]],["body/interfaces/PlaceSearchOptions.html",[0,0.257,2,0.382,3,0.029,4,0.045,5,0.045,6,0.034,8,0.223,9,0.691,27,1.945,48,0.544,49,0.005,51,0.003,57,0.427,58,1.225,96,0.136,114,1.974,138,0.04,176,0.004,177,0.003,209,3.938,244,6.553,260,2.11,458,1.378,1043,4.665,1101,6.207,1103,6.553,1104,6.987,1334,2.161,1385,2.617,1566,4.592,1796,5.919,1844,5.919,1847,5.919,2415,5.127,2416,8.449,2417,8.449,2418,8.449,2419,6.948]],["title/injectables/PluginLoaderService.html",[346,0.933,352,1.833]],["body/injectables/PluginLoaderService.html",[1,2.265,3,0.031,4,0.048,5,0.048,6,0.058,8,0.237,9,0.721,27,1.122,45,1.265,46,3.279,48,0.466,49,0.005,51,0.003,53,1.401,55,1.318,56,1.39,57,0.343,58,0.859,60,0.953,96,0.23,138,0.042,176,0.004,177,0.003,232,1.656,235,2.328,248,3.826,252,1.585,291,2.265,294,1.842,295,1.759,296,1.54,300,1.476,311,1.518,313,1.077,314,0.687,342,1.931,346,1.373,347,1.933,352,2.696,360,1.681,361,3.224,362,2.031,366,1.786,380,2.441,387,2.259,594,2.787,838,5.462,839,5.223,889,5.325,1983,4.681,1984,3.826,1985,4.236,1994,3.826,1997,6.072,1998,6.367,2012,5.622,2014,5.994,2162,4.891,2175,4.891,2420,7.763,2421,7.248,2422,7.248,2423,5.46,2424,5.46]],["title/interfaces/Poi.html",[0,0.247,148,2.717]],["body/interfaces/Poi.html",[0,0.2,2,0.297,3,0.023,4,0.035,5,0.035,6,0.027,8,0.173,9,0.578,26,2.195,48,0.558,49,0.005,51,0.002,56,1.164,57,0.431,96,0.23,98,1.226,99,0.99,138,0.031,148,3.206,176,0.003,177,0.002,205,4.707,210,5.071,260,1.844,397,4.552,458,0.986,702,4.165,1439,5.071,1619,2.137,1675,7.491,1742,3.952,1766,7.491,1781,7.026,1783,3.293,1912,7.491,1944,7.491,2425,3.982,2426,7.553,2427,7.553,2428,7.553,2429,7.553,2430,7.553,2431,7.553,2432,7.553,2433,7.553,2434,7.553,2435,7.553,2436,7.553,2437,7.491,2438,6.766,2439,7.553,2440,3.982,2441,3.982]],["title/interfaces/PoiList.html",[0,0.247,2442,4.075]],["body/interfaces/PoiList.html",[0,0.339,2,0.504,3,0.038,4,0.06,5,0.06,6,0.045,8,0.294,9,0.826,49,0.005,51,0.003,57,0.396,96,0.179,138,0.053,148,5.311,159,4.739,176,0.004,177,0.003,458,1.451,1103,7.279,1104,7.76,1337,5.174,1619,3.631,2442,6.873,2443,6.763,2444,8.405]],["title/interfaces/Polygon.html",[0,0.247,34,2.297]],["body/interfaces/Polygon.html",[0,0.371,2,0.339,3,0.026,4,0.04,5,0.04,6,0.065,8,0.198,13,3.181,26,1.765,27,1.738,34,3.45,45,1.117,49,0.005,51,0.002,52,2.472,53,1.665,55,1.538,56,1.304,57,0.37,58,1.003,60,1.688,85,3.531,96,0.213,97,1.611,98,1.401,99,1.131,119,2.168,138,0.057,176,0.003,177,0.002,260,1.407,314,0.573,357,0.961,414,3.911,415,3.743,417,3.261,419,3.988,420,3.857,422,3.261,453,2.537,458,1.063,495,3.117,497,2.836,498,2.921,500,2.381,567,3.056,674,2.168,970,5.617,1342,4.428,1344,5.626,1345,3.857,1346,5.293,1355,2.75,1358,4.484,1426,4.702,1430,3.857,1432,3.189,1624,3.764,1625,6.229,1626,4.077,1627,6.229,2445,4.552,2446,4.552,2447,4.552,2448,4.552,2449,4.552,2450,4.552,2451,4.552,2452,4.552,2453,4.552,2454,4.552,2455,4.552,2456,4.552]],["title/interfaces/PolygonOptions.html",[0,0.247,970,3.071]],["body/interfaces/PolygonOptions.html",[0,0.253,2,0.376,3,0.029,4,0.044,5,0.044,6,0.034,8,0.219,9,0.683,27,1.938,48,0.529,49,0.005,51,0.003,57,0.42,58,1.227,96,0.182,138,0.039,176,0.003,177,0.003,260,1.991,423,4.9,425,4.757,426,5.056,427,5.632,428,5.632,431,5.227,432,5.227,433,5.227,434,4.9,458,1.438,674,3.995,970,4.279,1334,2.124,1383,5.632,1384,5.632,1385,2.572,1625,6.507,2285,5.877,2457,5.039,2458,5.039]],["title/injectables/PolygonService.html",[346,0.933,2459,4.414]],["body/injectables/PolygonService.html",[1,1.873,3,0.024,4,0.037,5,0.037,6,0.061,8,0.18,9,0.596,21,1.873,27,1.678,33,2.586,34,4.09,45,1.046,46,1.57,48,0.378,49,0.005,51,0.002,53,1.576,55,1.547,56,1.259,57,0.386,58,0.968,60,1.425,96,0.226,138,0.032,176,0.003,177,0.002,232,2.725,235,2.012,252,1.739,291,3.078,294,1.4,295,1.337,296,1.17,300,1.122,303,1.297,311,1.154,313,0.819,314,0.754,323,1.686,342,2.176,346,1.135,347,1.469,352,2.865,354,2.755,359,1.446,360,1.278,361,1.544,362,1.544,363,2.683,364,1.493,365,1.493,366,1.357,368,1.96,371,1.493,392,2.479,401,1.749,402,2.531,403,1.783,404,1.783,405,1.598,970,4.799,986,2.171,1391,4.927,1392,3.59,1393,2.987,1394,4.198,1395,3.217,1396,5.396,1397,4.029,1399,2.987,1408,2.919,1410,2.171,1411,2.288,1413,2.118,1414,2.288,1415,3.5,1416,2.586,1419,2.586,1420,4.927,2459,5.367,2460,3.717,2461,5.992,2462,4.15,2463,5.367,2464,4.15,2465,5.367,2466,5.992,2467,4.15,2468,4.15,2469,4.15,2470,4.15,2471,4.15,2472,4.15,2473,3.717,2474,3.717]],["title/interfaces/Polyline.html",[0,0.247,35,2.578]],["body/interfaces/Polyline.html",[0,0.337,2,0.364,3,0.028,4,0.043,5,0.043,6,0.066,8,0.212,13,3.302,27,1.783,35,4.02,45,1.173,49,0.005,51,0.002,52,2.502,53,1.672,55,1.505,56,1.275,57,0.349,58,0.981,60,1.695,86,3.787,96,0.204,97,1.728,119,2.326,138,0.052,176,0.003,177,0.002,314,0.615,357,1.03,414,4.032,415,3.858,417,3.362,419,4.187,420,4.05,422,3.362,458,1.288,495,3.273,497,3.042,498,3.067,500,2.554,674,2.326,971,5.727,1330,1.417,1342,4.564,1343,6.421,1344,5.799,1345,4.05,1346,5.557,1355,2.888,1358,4.708,1612,3.787,1628,4.373,2475,4.882,2476,4.882,2477,4.882,2478,4.882,2479,4.882,2480,4.882,2481,4.882,2482,4.882,2483,4.882,2484,4.882,2485,4.882]],["title/interfaces/PolylineOptions.html",[0,0.247,971,3.071]],["body/interfaces/PolylineOptions.html",[0,0.244,2,0.363,3,0.028,4,0.043,5,0.043,6,0.033,8,0.211,9,0.666,27,1.921,48,0.526,49,0.005,51,0.002,57,0.422,58,1.23,96,0.129,138,0.038,176,0.003,177,0.002,260,2.15,423,4.827,426,4.98,431,5.149,432,5.149,433,5.149,434,4.827,458,1.449,674,3.936,971,4.176,1334,2.05,1379,6.834,1380,5.337,1381,5.337,1382,6.834,1383,5.548,1384,5.548,1385,2.482,2486,4.862,2487,7.401,2488,7.401]],["title/injectables/PolylineService.html",[346,0.933,2489,4.414]],["body/injectables/PolylineService.html",[1,1.87,3,0.023,4,0.037,5,0.037,6,0.061,8,0.18,9,0.595,21,1.87,27,1.676,33,2.582,35,4.588,45,1.044,46,1.568,48,0.377,49,0.005,51,0.002,53,1.575,55,1.546,56,1.258,57,0.386,58,0.967,60,1.424,96,0.226,138,0.032,176,0.003,177,0.002,232,2.723,235,2.01,252,1.737,291,3.077,294,1.398,295,1.334,296,1.168,300,1.12,303,1.295,311,1.152,313,0.817,314,0.753,323,1.683,342,2.175,346,1.133,347,1.467,352,2.863,354,2.753,359,1.443,360,1.275,361,1.541,362,1.541,363,2.68,364,1.491,365,1.491,366,1.355,368,1.958,371,1.491,392,2.476,401,1.746,402,2.528,403,1.78,404,1.78,405,1.595,971,4.795,986,2.168,1391,4.923,1392,3.586,1393,2.983,1394,4.193,1395,3.213,1396,5.392,1397,4.026,1399,2.983,1408,2.915,1410,2.168,1411,2.284,1413,2.115,1414,2.284,1415,3.496,1416,2.582,1419,2.582,1420,4.923,2463,5.361,2465,5.361,2473,3.711,2474,3.711,2489,5.361,2490,3.711,2491,5.985,2492,4.143,2493,4.143,2494,5.985,2495,4.143,2496,4.143,2497,4.143,2498,4.143,2499,4.143,2500,4.143]],["title/interfaces/ReGeocode.html",[0,0.247,1911,3.822]],["body/interfaces/ReGeocode.html",[0,0.31,2,0.462,3,0.035,4,0.055,5,0.055,6,0.042,8,0.269,9,0.782,26,1.477,48,0.464,49,0.005,51,0.003,57,0.396,96,0.249,98,1.907,99,1.539,138,0.048,140,4.158,147,3.733,148,3.415,176,0.004,177,0.003,202,7.651,397,3.733,676,5.657,1461,4.551,1740,7.763,1900,8.145,1911,6.102,2444,8.145,2501,5.122,2502,6.194,2503,9.094,2504,9.094,2505,7.52]],["title/interfaces/ReGeocodePoi.html",[0,0.247,2505,4.075]],["body/interfaces/ReGeocodePoi.html",[0,0.299,2,0.445,3,0.034,4,0.053,5,0.053,6,0.04,8,0.259,9,0.764,26,2.14,48,0.558,49,0.005,51,0.003,56,1.383,57,0.428,96,0.159,98,1.839,99,1.485,138,0.046,147,3.6,176,0.004,177,0.003,217,6.96,397,5.408,458,1.22,702,4.947,1147,6.286,1439,6.024,1742,4.694,2438,8.036,2501,4.94,2505,6.356,2506,5.973]],["title/interfaces/ReGeocodeResult.html",[0,0.247,1460,3.822]],["body/interfaces/ReGeocodeResult.html",[0,0.356,2,0.53,3,0.055,4,0.063,5,0.063,6,0.048,8,0.309,9,0.852,48,0.494,49,0.005,51,0.004,57,0.361,96,0.189,138,0.055,147,5.164,176,0.004,177,0.004,1336,4.286,1460,6.646,1461,5.225,1911,7.853,2501,5.881]],["title/interfaces/Rectangle.html",[0,0.247,36,2.578]],["body/interfaces/Rectangle.html",[0,0.325,2,0.346,3,0.026,4,0.041,5,0.041,6,0.065,8,0.202,13,3.895,26,1.784,27,1.751,36,3.914,45,1.132,49,0.005,51,0.002,52,2.48,53,1.656,55,1.55,56,1.313,57,0.359,58,1.01,60,1.679,87,3.6,96,0.226,97,1.643,98,1.429,99,1.154,119,2.211,138,0.05,176,0.003,177,0.002,260,1.426,314,0.584,357,0.98,414,3.945,415,3.775,417,3.289,419,4.043,420,3.91,422,3.289,453,2.564,458,0.931,495,3.16,497,2.892,498,2.961,500,2.428,567,3.116,1330,1.347,1342,4.466,1345,3.91,1355,2.788,1426,4.767,1430,3.91,1432,3.252,1449,2.211,1450,2.211,1627,6.283,1629,4.157,1630,6.66,1631,4.157,1632,5.812,2507,6.488,2508,4.642,2509,4.642,2510,4.642,2511,4.642,2512,4.642,2513,4.642,2514,4.642,2515,4.642,2516,4.642,2517,4.642,2518,4.642]],["title/interfaces/RectangleOptions.html",[0,0.247,1630,3.62]],["body/interfaces/RectangleOptions.html",[0,0.249,2,0.371,3,0.028,4,0.044,5,0.044,6,0.033,8,0.216,9,0.677,13,4.041,26,1.187,27,1.932,48,0.528,49,0.005,51,0.003,57,0.419,58,1.226,96,0.206,99,1.237,138,0.039,176,0.003,177,0.003,260,1.983,423,4.874,425,4.732,426,5.029,427,5.602,428,5.602,431,5.199,432,5.199,433,5.199,434,4.874,458,1.435,1334,2.097,1383,5.602,1384,5.602,1385,2.54,1630,5.002,1710,3.213,2285,5.846,2519,4.975,2520,4.975]],["title/injectables/RectangleService.html",[346,0.933,2521,4.414]],["body/injectables/RectangleService.html",[1,1.87,3,0.023,4,0.037,5,0.037,6,0.061,8,0.18,9,0.595,21,1.87,27,1.676,36,4.588,37,2.676,45,1.044,46,1.568,48,0.377,49,0.005,51,0.002,53,1.575,55,1.546,56,1.258,57,0.386,58,0.967,60,1.424,96,0.226,138,0.032,176,0.003,177,0.002,232,2.723,235,2.01,252,1.737,291,3.077,294,1.398,295,1.334,296,1.168,300,1.12,303,1.295,311,1.152,313,0.817,314,0.753,323,1.683,342,2.175,346,1.133,347,1.467,352,2.863,354,2.753,359,1.443,360,1.275,361,1.541,362,1.541,363,2.68,364,1.491,365,1.491,366,1.355,368,1.958,371,1.491,392,2.476,401,1.746,402,2.528,403,1.78,404,1.78,405,1.595,986,2.168,1391,4.923,1392,3.586,1393,2.983,1394,4.193,1395,3.213,1396,5.392,1397,4.026,1399,2.983,1408,2.915,1410,2.168,1411,2.284,1413,2.115,1414,2.284,1415,3.496,1416,2.582,1419,2.582,1420,4.923,1630,5.654,2521,5.361,2522,3.711,2523,5.985,2524,4.143,2525,5.985,2526,4.143,2527,5.985,2528,5.985,2529,4.143,2530,4.143,2531,4.143,2532,4.143,2533,4.143,2534,4.143,2535,4.143,2536,4.143]],["title/interfaces/RenderObject.html",[0,0.247,2253,4.075]],["body/interfaces/RenderObject.html",[0,0.403,2,0.478,3,0.036,4,0.057,5,0.057,6,0.043,8,0.278,9,0.8,28,4.447,49,0.005,51,0.003,52,1.639,57,0.37,96,0.213,108,5.633,138,0.062,176,0.004,177,0.003,260,1.767,458,1.389,803,4.712,1334,2.703,1337,5.078,1588,4.493,1590,7.144,1951,5.908,2237,4.975,2244,5.744,2245,5.304,2246,5.304,2247,5.304,2248,5.304,2249,5.304,2250,5.304,2251,5.744,2252,5.744,2253,7.264]],["title/interfaces/RideRoute.html",[0,0.247,2537,4.075]],["body/interfaces/RideRoute.html",[0,0.348,2,0.518,3,0.039,4,0.061,5,0.061,6,0.047,8,0.301,9,0.84,49,0.005,51,0.004,57,0.384,96,0.184,138,0.054,167,5.386,176,0.004,177,0.004,458,1.417,1270,5.37,1742,4.954,1809,5.742,1811,7.831,2537,6.984,2538,6.219,2539,7.831,2540,6.219]],["title/interfaces/RideStep.html",[0,0.247,2539,4.075]],["body/interfaces/RideStep.html",[0,0.293,2,0.437,3,0.033,4,0.052,5,0.052,6,0.039,8,0.254,9,0.754,26,2.371,48,0.548,49,0.005,51,0.003,57,0.419,96,0.155,98,1.802,99,1.455,138,0.045,176,0.004,177,0.003,458,1.357,674,4.241,676,5.367,1270,5.05,1742,4.659,1816,4.301,1817,6.238,1818,6.542,1820,6.542,1821,6.238,1822,6.542,1823,6.542,2538,5.244,2539,6.274]],["title/interfaces/Riding.html",[0,0.247,38,3.452]],["body/interfaces/Riding.html",[0,0.381,2,0.438,3,0.033,4,0.052,5,0.052,6,0.06,8,0.255,38,6.244,45,1.326,49,0.005,50,4.144,51,0.004,53,1.451,55,1.382,56,1.171,57,0.32,58,0.9,60,1.471,89,4.553,96,0.237,114,3.641,138,0.059,176,0.004,177,0.003,314,0.739,357,1.239,453,3.3,629,3.328,630,3.928,644,3.492,670,3.879,1111,5.324,1115,4.112,1324,4.487,1330,1.704,1331,2.796,1449,2.796,1450,2.796,1452,4.908,1633,5.257,1634,5.257,1836,4.553,2541,5.869,2542,5.869,2543,5.869]],["title/interfaces/RidingOptions.html",[0,0.247,1111,3.452]],["body/interfaces/RidingOptions.html",[0,0.309,2,0.459,3,0.035,4,0.054,5,0.054,6,0.041,8,0.267,9,0.78,27,2.024,48,0.463,49,0.005,51,0.003,57,0.41,58,1.212,96,0.164,138,0.048,176,0.004,177,0.003,260,2.186,678,5.656,1111,5.493,1334,2.597,1380,5.862,1381,5.862,1385,3.145,1844,6.359,1846,6.668,1847,6.359,2544,6.161]],["title/interfaces/RidingResult.html",[0,0.247,1115,3.452]],["body/interfaces/RidingResult.html",[0,0.305,2,0.454,3,0.053,4,0.054,5,0.054,6,0.041,8,0.264,9,0.773,26,2.315,48,0.46,49,0.005,51,0.003,57,0.409,96,0.227,98,1.872,99,1.512,112,3.79,138,0.047,148,5.351,159,4.261,166,4.717,176,0.004,177,0.003,458,1.23,630,4.21,670,4.61,1115,5.447,1336,3.665,1337,4.98,1850,7.006,1851,7.47,1852,7.006,2537,7.47,2540,5.447,2545,6.082]],["title/interfaces/Road.html",[0,0.247,676,2.97]],["body/interfaces/Road.html",[0,0.331,2,0.493,3,0.037,4,0.058,5,0.058,6,0.044,8,0.287,9,0.815,26,2.22,48,0.541,49,0.005,51,0.003,56,1.434,57,0.403,96,0.175,98,2.035,99,1.643,138,0.051,176,0.004,177,0.003,458,1.279,676,4.939,702,5.133,1147,6.522,1439,6.25,1742,4.871,2546,6.611]],["title/interfaces/Scenic.html",[0,0.247,2437,4.075]],["body/interfaces/Scenic.html",[0,0.276,2,0.41,3,0.031,4,0.049,5,0.049,6,0.037,8,0.239,9,0.724,48,0.564,49,0.005,51,0.003,57,0.423,96,0.146,138,0.043,176,0.004,177,0.003,607,5.835,1619,2.952,1677,6.741,1678,6.741,1680,7.187,1682,6.089,1683,6.741,1684,5.839,1774,7.784,1776,7.784,1777,7.784,2437,6.022,2547,5.499,2548,8.69,2549,8.69,2550,8.69,2551,8.69]],["title/interfaces/SearchResult.html",[0,0.247,1621,3.62]],["body/interfaces/SearchResult.html",[0,0.332,2,0.494,3,0.055,4,0.058,5,0.058,6,0.044,8,0.288,9,0.816,48,0.524,49,0.005,51,0.003,57,0.393,96,0.218,138,0.051,148,3.656,160,5.939,162,5.939,176,0.004,177,0.003,209,3.09,1336,3.996,1619,3.559,1621,6.031,1732,7.707,2442,8.265,2552,9.319,2553,9.319]],["title/interfaces/Segment.html",[0,0.247,2554,4.075]],["body/interfaces/Segment.html",[0,0.335,2,0.499,3,0.038,4,0.059,5,0.059,6,0.045,8,0.29,9,0.821,48,0.525,49,0.005,51,0.003,57,0.405,138,0.052,176,0.004,177,0.003,458,1.404,998,4.489,1270,5.3,1742,4.89,1821,6.548,2554,6.825,2555,6.687,2556,9.346,2557,9.346,2558,6.687,2559,6.687]],["title/interfaces/Size.html",[0,0.247,39,2.159]],["body/interfaces/Size.html",[0,0.408,2,0.488,3,0.037,4,0.058,5,0.058,6,0.062,8,0.284,39,3.883,45,1.42,48,0.437,49,0.005,51,0.003,53,1.525,60,1.546,90,5.071,96,0.174,101,4.074,138,0.063,176,0.004,177,0.003,314,0.823,368,2.662,458,1.396,853,5.522,1429,5.989,1635,5.856,1636,5.856,1637,8.306,1638,8.306,1639,4.804,1640,4.581,2560,6.538,2561,6.538,2562,6.538]],["title/injectables/SizeService.html",[346,0.933,843,3.308]],["body/injectables/SizeService.html",[1,2.171,3,0.029,4,0.045,5,0.045,6,0.059,8,0.223,9,0.691,39,4.08,45,1.213,48,0.5,49,0.005,51,0.003,53,1.454,55,1.433,56,1.496,57,0.372,58,0.934,60,1.213,96,0.224,138,0.04,176,0.004,177,0.003,190,2.542,235,2.255,252,1.488,260,1.127,294,1.73,295,1.651,296,1.446,300,1.386,303,1.602,311,1.425,313,1.011,314,0.645,323,2.082,342,2.251,346,1.316,347,1.815,360,1.578,366,1.677,387,2.121,458,1.213,460,3.311,631,4.059,632,2.617,838,4.665,839,5.092,843,4.665,853,5.801,1393,3.463,1399,3.463,1408,3.384,1639,3.767,1640,3.592,1994,3.592,2022,3.592,2391,6.224,2392,4.592,2397,4.592,2402,4.592,2563,4.592,2564,6.948,2565,5.127,2566,6.948,2567,5.127,2568,5.127,2569,5.127,2570,5.127,2571,5.127]],["title/interfaces/TMC.html",[0,0.247,1827,3.822]],["body/interfaces/TMC.html",[0,0.426,2,0.447,3,0.034,4,0.053,5,0.053,6,0.04,8,0.26,9,0.766,26,2.142,48,0.55,49,0.005,51,0.003,56,0.923,57,0.359,96,0.204,98,1.844,99,1.488,115,4.451,138,0.066,163,4.021,176,0.004,177,0.003,205,3.732,210,4.021,382,4.099,458,1.388,674,2.852,676,3.609,1270,3.396,1742,4.86,1808,4.645,1812,4.645,1813,4.645,1814,4.4,1816,4.4,1817,4.196,1818,4.4,1819,4.953,1820,4.4,1821,4.196,1822,4.4,1823,4.4,1824,4.953,1825,4.953,1826,5.972,1827,6.6,1828,4.953,1829,7.427]],["title/interfaces/Text.html",[0,0.247,40,2.97]],["body/interfaces/Text.html",[0,0.207,2,0.19,3,0.014,4,0.023,5,0.023,6,0.066,8,0.179,24,3.766,26,1.988,27,1.516,31,3.134,40,3.597,45,0.72,48,0.491,49,0.005,51,0.001,52,2.573,53,1.699,55,1.647,56,1.396,57,0.382,58,1.073,59,2.215,60,1.722,91,1.98,96,0.174,97,0.903,98,0.786,99,0.634,100,1.538,102,1.788,138,0.032,176,0.002,177,0.001,190,1.901,260,2.009,314,0.321,357,0.539,414,2.907,417,2.424,419,2.571,422,2.424,425,1.447,458,1.349,495,2.01,497,1.59,672,1.491,674,1.216,744,3.384,819,4.181,823,3.413,830,1.216,1138,4.181,1142,3.413,1191,2.891,1330,0.741,1345,2.487,1355,1.773,1442,2.487,1485,3.032,1549,3.413,1550,4.935,1551,3.413,1552,4.935,1553,3.413,1556,4.935,1557,3.413,1558,4.935,1562,3.413,1563,4.935,1564,3.413,1567,3.413,1568,2.11,1569,5.798,1570,5.798,1571,4.385,1572,4.296,1573,3.413,1574,4.935,1575,4.935,1576,4.935,1577,3.413,1578,4.935,1579,3.413,1580,4.935,1581,3.413,1582,4.935,1641,2.286,1642,3.032,1643,2.286,1644,5.345,1645,3.696,1646,3.696,1788,1.713,2282,1.98,2284,1.98,2285,1.788,2572,4.127,2573,4.127,2574,4.127,2575,4.127,2576,4.127,2577,4.127,2578,4.127,2579,4.127,2580,4.127,2581,4.127,2582,4.127,2583,4.127,2584,4.127,2585,2.552,2586,2.552,2587,2.552,2588,2.552,2589,2.552,2590,2.552,2591,2.552,2592,2.552,2593,2.552,2594,2.552,2595,2.552,2596,2.552,2597,2.552,2598,2.552,2599,2.552,2600,2.552,2601,2.552,2602,2.552,2603,2.552,2604,2.552,2605,2.552,2606,2.552,2607,2.552,2608,2.552,2609,2.552,2610,2.552,2611,2.552,2612,2.552,2613,2.552,2614,2.552,2615,2.552,2616,2.552,2617,2.552,2618,2.552,2619,2.552,2620,2.552,2621,2.552]],["title/interfaces/TextOptions.html",[0,0.247,1642,3.62]],["body/interfaces/TextOptions.html",[0,0.214,2,0.318,3,0.024,4,0.038,5,0.038,6,0.029,8,0.185,9,0.608,24,3.98,26,1.86,27,1.858,31,3.486,40,4.7,48,0.534,49,0.005,51,0.002,57,0.423,58,1.232,96,0.207,99,1.06,109,5.463,138,0.033,176,0.003,177,0.002,260,2.208,423,4.555,425,4.422,426,4.7,434,4.555,458,1.233,830,3.714,831,5.036,1334,1.797,1385,2.176,1642,4.489,1710,2.753,1788,5.235,2093,3.526,2282,6.048,2283,6.449,2284,6.048,2285,5.463,2286,6.449,2287,5.729,2289,6.449,2290,6.449,2292,3.818,2622,4.263,2623,6.984,2624,6.984,2625,6.984]],["title/injectables/TextService.html",[346,0.933,2626,4.414]],["body/injectables/TextService.html",[1,1.909,3,0.024,4,0.038,5,0.038,6,0.058,8,0.185,9,0.608,21,1.909,24,3.98,27,1.695,31,3.192,40,4.7,45,1.066,48,0.384,49,0.005,51,0.002,53,1.479,55,1.501,56,1.202,57,0.373,58,0.924,60,1.246,96,0.235,138,0.033,176,0.003,177,0.002,232,2.605,235,2.043,252,1.773,291,2.957,294,2.061,295,1.968,296,1.202,300,1.152,303,1.332,311,1.185,313,0.841,314,0.537,323,1.731,342,1.902,346,1.157,347,1.509,359,1.485,360,1.312,363,2.716,364,1.534,365,1.534,366,1.394,368,1.998,371,1.534,392,2.527,401,1.797,402,2.569,403,1.832,404,1.832,405,1.641,830,2.031,849,2.176,986,2.23,1159,4.555,1392,3.644,1393,3.045,1395,3.279,1397,4.079,1399,3.045,1408,2.976,1410,2.23,1411,2.351,1413,2.176,1414,2.351,1415,2.49,1416,2.656,1419,2.656,1642,5.729,1973,4.102,2022,4.28,2063,5.729,2068,2.862,2104,6.048,2105,3.307,2287,3.132,2296,6.984,2301,3.818,2305,6.984,2306,3.818,2626,5.472,2627,3.818,2628,6.109,2629,4.263,2630,6.109,2631,4.263,2632,4.263,2633,4.263,2634,4.263]],["title/interfaces/Tip.html",[0,0.247,1339,4.075]],["body/interfaces/Tip.html",[0,0.355,2,0.529,3,0.04,4,0.063,5,0.063,6,0.048,8,0.308,9,0.85,48,0.547,49,0.005,51,0.004,56,1.469,57,0.387,115,4.989,138,0.055,176,0.004,177,0.004,205,5.942,1339,7.073,2635,7.09]],["title/interfaces/ToolBar.html",[0,0.247,41,3.452]],["body/interfaces/ToolBar.html",[0,0.342,2,0.372,3,0.028,4,0.044,5,0.044,6,0.066,8,0.216,26,1.853,31,4.036,41,5.443,45,1.19,49,0.005,51,0.003,52,2.602,53,1.691,55,0.907,56,0.768,57,0.21,58,0.591,60,1.715,92,3.868,96,0.206,98,1.535,99,1.239,100,3.005,138,0.053,176,0.003,177,0.003,314,0.628,357,1.052,417,3.392,422,3.392,731,6.136,830,2.375,1137,6.906,1138,5.851,1139,6.906,1140,6.906,1141,6.906,1142,5.638,1143,6.906,1144,6.906,1145,6.906,1191,4.776,1199,4.776,1330,1.447,1647,4.466,1648,4.466,2636,4.986,2637,4.986,2638,4.986,2639,4.986,2640,4.986,2641,4.986,2642,4.986,2643,4.986,2644,4.986,2645,4.986,2646,4.986,2647,4.986]],["title/injectables/ToolBarService.html",[346,0.933,1158,4.075]],["body/injectables/ToolBarService.html",[1,1.902,3,0.024,4,0.037,5,0.037,6,0.059,8,0.184,9,0.605,21,1.902,27,1.598,41,5.449,45,1.062,46,1.604,48,0.382,49,0.005,51,0.002,53,1.52,55,1.497,56,1.199,57,0.381,58,0.922,60,1.242,96,0.234,118,3.93,138,0.033,176,0.003,177,0.002,232,2.79,233,3.059,235,2.037,252,1.766,291,3.01,294,1.431,295,1.366,296,1.196,300,1.146,303,1.325,311,1.692,313,0.836,314,0.534,315,2.615,323,1.722,342,1.897,346,1.152,347,1.501,352,2.894,354,2.789,359,1.477,360,1.305,361,1.577,362,1.577,363,2.709,364,1.526,365,1.526,366,1.387,368,1.99,371,1.526,389,2.338,392,2.517,401,1.787,402,2.561,403,1.822,404,1.822,405,1.632,782,4.471,830,2.02,986,2.218,1158,5.033,1159,4.543,1199,5.449,1392,3.633,1393,3.033,1395,3.267,1397,4.069,1399,3.033,1408,2.964,1410,2.218,1411,2.338,1413,3.106,1414,2.338,1415,2.477,1940,3.507,1973,2.847,2068,2.847,2104,6.033,2648,3.798,2649,7.118,2650,6.085,2651,4.24,2652,6.085,2653,4.24,2654,4.24,2655,4.24,2656,4.24,2657,4.24,2658,4.24,2659,4.24,2660,4.24,2661,4.24]],["title/interfaces/ToolbarOptions.html",[0,0.247,1199,3.452]],["body/interfaces/ToolbarOptions.html",[0,0.274,2,0.407,3,0.031,4,0.048,5,0.048,6,0.037,8,0.237,9,0.721,27,1.122,28,3.798,48,0.437,49,0.005,51,0.003,57,0.414,58,1.218,96,0.216,138,0.042,176,0.004,177,0.003,260,2.263,830,4.128,831,5.597,849,4.423,1146,7.167,1147,6.072,1148,7.167,1149,7.167,1150,7.167,1151,7.167,1152,7.167,1153,7.167,1199,5.078,1334,2.302,1385,2.787,1614,4.516,2250,4.516,2662,5.46]],["title/interfaces/Transfer.html",[0,0.247,42,3.308]],["body/interfaces/Transfer.html",[0,0.333,2,0.357,3,0.027,4,0.042,5,0.042,6,0.064,8,0.208,42,5.514,45,1.158,48,0.524,49,0.005,50,3.909,51,0.003,53,1.605,55,1.663,56,1.409,57,0.386,58,1.084,60,1.627,93,3.718,96,0.218,114,3.434,138,0.052,176,0.003,177,0.002,209,3.092,240,4.134,284,3.16,314,0.603,357,1.011,453,3.135,629,2.718,630,3.547,634,4.285,644,3.218,652,3.763,657,4.648,660,5.146,670,3.386,672,2.8,678,2.987,776,4.586,1241,4.648,1245,3.358,1257,5.146,1259,5.146,1265,5.943,1266,5.943,1270,2.718,1324,4.262,1330,1.391,1331,2.283,1449,2.283,1450,2.283,1452,4.285,1649,4.293,1650,4.293,1836,3.718,2663,4.793,2664,4.793,2665,4.793,2666,4.793,2667,4.793,2668,4.793,2669,4.793,2670,4.793]],["title/interfaces/TransferOptions.html",[0,0.247,1241,3.452]],["body/interfaces/TransferOptions.html",[0,0.277,2,0.412,3,0.031,4,0.049,5,0.049,6,0.037,8,0.24,9,0.726,27,1.978,48,0.536,49,0.005,51,0.003,57,0.418,58,1.224,96,0.147,138,0.043,176,0.004,177,0.003,209,4.058,260,2.194,678,5.425,1241,5.117,1334,2.329,1380,5.623,1381,5.623,1385,2.82,1796,6.1,1844,6.1,1846,6.397,1847,6.1,2671,5.525,2672,8.707,2673,8.707]],["title/interfaces/TransferPlan.html",[0,0.247,2674,4.075]],["body/interfaces/TransferPlan.html",[0,0.29,2,0.431,3,0.033,4,0.051,5,0.051,6,0.039,8,0.251,9,0.748,26,2.114,49,0.005,51,0.003,57,0.418,96,0.2,98,1.78,99,1.437,138,0.045,176,0.004,177,0.003,260,1.839,458,1.486,674,4.221,1270,5.026,1742,4.637,1770,7.938,2554,7.599,2674,6.224,2675,5.179,2676,5.783,2677,8.862,2678,8.862,2679,8.862,2680,8.862,2681,8.862,2682,8.862]],["title/interfaces/TransferResult.html",[0,0.247,1245,3.452]],["body/interfaces/TransferResult.html",[0,0.305,2,0.454,3,0.053,4,0.054,5,0.054,6,0.041,8,0.264,9,0.773,26,2.315,42,4.083,48,0.46,49,0.005,51,0.003,57,0.409,96,0.227,98,1.872,99,1.512,112,3.79,138,0.047,148,5.351,159,4.261,170,5.447,176,0.004,177,0.003,458,1.23,630,4.21,670,4.61,1245,5.447,1336,3.665,1850,7.006,1852,7.006,1853,8.09,2674,7.47,2675,5.447,2683,9.032]],["title/interfaces/TruckDriving.html",[0,0.247,43,3.452]],["body/interfaces/TruckDriving.html",[0,0.379,2,0.434,3,0.033,4,0.051,5,0.051,6,0.06,8,0.253,18,4.417,26,1.389,43,5.883,45,1.32,48,0.507,49,0.005,50,3.68,51,0.004,53,1.446,55,1.375,56,1.165,57,0.319,58,0.896,60,1.465,94,4.519,96,0.244,98,1.793,99,1.448,114,3.233,138,0.059,176,0.004,177,0.003,213,3.911,314,0.733,357,1.229,453,1.997,458,1.206,620,3.511,644,3.482,650,4.884,661,5.866,674,3.602,1281,5.298,1288,4.818,1324,4.142,1330,1.691,1331,2.775,1449,2.775,1450,2.775,1651,7.961,1652,5.218,1653,5.218,2684,5.826,2685,5.826,2686,5.826]],["title/interfaces/TruckDrivingOptions.html",[0,0.247,1281,3.452]],["body/interfaces/TruckDrivingOptions.html",[0,0.239,2,0.356,3,0.027,4,0.042,5,0.042,6,0.032,8,0.207,9,0.658,18,2.788,27,1.913,39,3.593,48,0.524,49,0.005,51,0.002,57,0.423,58,1.231,96,0.127,138,0.037,176,0.003,177,0.002,213,5.504,260,2.144,458,1.463,678,5.109,1281,4.635,1334,2.012,1380,5.295,1381,5.295,1385,2.436,1639,6.023,1640,5.744,1796,5.744,1844,5.744,1846,6.023,1847,5.744,1848,7.343,2012,6.359,2687,4.773,2688,8.198,2689,8.198]],["title/classes/Utils.html",[306,3.308,313,0.972]],["body/classes/Utils.html",[3,0.037,4,0.058,5,0.058,6,0.055,8,0.285,45,1.423,48,0.477,49,0.005,51,0.003,53,1.129,55,1.482,56,1.01,57,0.344,58,0.777,60,1.144,138,0.051,140,4.402,176,0.004,177,0.003,306,5.473,311,1.823,313,1.293,323,3.311,342,1.747,391,3.43,402,3.192,632,3.346,1011,4.402,1659,7.337,1974,7.337,2690,6.556,2691,8.152,2692,8.152,2693,6.556,2694,6.556,2695,8.872,2696,6.556]],["title/interfaces/ViaCity.html",[0,0.247,1826,3.822]],["body/interfaces/ViaCity.html",[0,0.423,2,0.439,3,0.033,4,0.052,5,0.052,6,0.039,8,0.255,9,0.757,26,2.128,48,0.552,49,0.005,51,0.003,56,1.375,57,0.376,96,0.202,98,1.811,99,1.462,115,4.834,138,0.066,163,3.95,176,0.004,177,0.003,205,5.559,210,5.99,382,2.685,458,1.326,674,2.803,676,3.546,1270,3.337,1742,3.982,1808,4.564,1812,4.564,1813,4.564,1814,4.323,1816,4.323,1817,4.122,1818,4.323,1819,4.866,1820,4.323,1821,4.122,1822,4.323,1823,4.323,1824,4.866,1825,4.866,1826,6.545,1827,5.904,1828,7.378,1829,4.866]],["title/interfaces/WalkRoute.html",[0,0.247,2697,4.075]],["body/interfaces/WalkRoute.html",[0,0.348,2,0.518,3,0.039,4,0.061,5,0.061,6,0.047,8,0.301,9,0.84,49,0.005,51,0.004,57,0.384,96,0.184,138,0.054,167,5.386,176,0.004,177,0.004,458,1.417,1270,5.37,1742,4.954,1809,5.742,1811,7.831,2697,6.984,2698,6.219,2699,7.831,2700,6.219]],["title/interfaces/WalkStep.html",[0,0.247,2699,4.075]],["body/interfaces/WalkStep.html",[0,0.293,2,0.437,3,0.033,4,0.052,5,0.052,6,0.039,8,0.254,9,0.754,26,2.371,48,0.548,49,0.005,51,0.003,57,0.419,96,0.155,98,1.802,99,1.455,138,0.045,176,0.004,177,0.003,458,1.357,674,4.241,676,5.367,1270,5.05,1742,4.659,1816,4.301,1817,6.238,1818,6.542,1820,6.542,1821,6.238,1822,6.542,1823,6.542,2698,5.244,2699,6.274]],["title/interfaces/Walking.html",[0,0.247,44,3.452]],["body/interfaces/Walking.html",[0,0.368,2,0.416,3,0.032,4,0.049,5,0.049,6,0.061,8,0.242,26,1.33,44,6.123,45,1.283,49,0.005,50,4.087,51,0.004,53,1.504,55,1.495,56,1.267,57,0.347,58,0.974,60,1.525,95,4.326,96,0.241,98,1.717,99,1.386,114,3.59,138,0.057,176,0.004,177,0.003,314,0.702,357,1.177,453,3.26,629,3.163,630,3.832,644,3.424,652,4.168,657,5.149,670,3.751,672,3.258,1298,5.149,1302,3.907,1324,4.432,1330,1.619,1331,2.656,1449,2.656,1450,2.656,1452,4.747,1654,4.995,1655,4.995,1836,4.326,2701,5.577,2702,5.577,2703,5.577,2704,5.577]],["title/interfaces/WalkingOptions.html",[0,0.247,1298,3.452]],["body/interfaces/WalkingOptions.html",[0,0.315,2,0.469,3,0.036,4,0.056,5,0.056,6,0.042,8,0.273,9,0.79,27,2.032,48,0.468,49,0.005,51,0.003,57,0.406,58,1.205,96,0.167,138,0.049,176,0.004,177,0.003,260,2.195,1298,5.567,1334,2.653,1380,5.907,1381,5.907,1385,3.212,1844,6.408,1846,6.72,1847,6.408,2705,6.293]],["title/interfaces/WalkingResult.html",[0,0.247,1302,3.452]],["body/interfaces/WalkingResult.html",[0,0.305,2,0.454,3,0.053,4,0.054,5,0.054,6,0.041,8,0.264,9,0.773,26,2.315,48,0.46,49,0.005,51,0.003,57,0.409,96,0.227,98,1.872,99,1.512,112,3.79,138,0.047,148,5.351,159,4.261,166,4.717,176,0.004,177,0.003,458,1.23,630,4.21,670,4.61,1302,5.447,1336,3.665,1337,4.98,1850,7.006,1851,7.47,1852,7.006,2697,7.47,2700,5.447,2706,6.082]],["title/injectables/WindowRef.html",[346,0.933,1804,3.452]],["body/injectables/WindowRef.html",[3,0.04,4,0.062,5,0.062,6,0.057,8,0.303,45,1.479,49,0.005,51,0.004,53,1.202,60,1.219,96,0.185,105,4.352,138,0.066,176,0.004,177,0.004,300,1.887,313,1.672,342,2.258,346,1.728,347,2.472,1799,4.893,1800,7.591,1801,6.256,1802,6.256,1804,5.938,1805,8.498,1806,6.256,2707,6.984]],["title/changelog.html",[2708,3.388,2709,3.388,2710,4.097]],["body/changelog.html",[3,0.029,14,3.661,19,3.923,23,2.975,24,2.6,28,2.232,34,3.224,35,2.665,36,3.619,40,3.07,49,0.005,51,0.003,128,3.814,176,0.004,177,0.003,209,2.374,220,3.569,281,5.274,296,1.437,314,1.241,509,3.743,610,3.569,688,3.569,939,4.847,1107,3.569,1237,3.569,1278,3.569,1294,3.569,1958,4.563,1983,3.29,2711,5.094,2712,5.094,2713,5.094,2714,5.094,2715,5.094,2716,7.855,2717,4.563,2718,5.094,2719,5.094,2720,9.783,2721,8.81,2722,7.855,2723,4.563,2724,4.563,2725,4.563,2726,4.563,2727,4.563,2728,5.094,2729,5.094,2730,5.094,2731,5.094,2732,5.094,2733,4.563,2734,5.094,2735,8.426,2736,5.094,2737,4.563,2738,5.094,2739,4.563,2740,4.563,2741,5.094,2742,5.094,2743,5.094,2744,4.563,2745,6.196,2746,5.094,2747,7.855,2748,5.094,2749,7.891,2750,4.563,2751,7.891,2752,4.563,2753,4.563,2754,4.563,2755,4.563,2756,4.563,2757,4.563,2758,5.094,2759,5.094,2760,5.094,2761,5.094,2762,5.094,2763,5.094,2764,5.094,2765,5.094,2766,5.094,2767,5.094,2768,5.094,2769,5.094,2770,7.855,2771,6.918,2772,5.094,2773,5.094,2774,5.094,2775,5.094,2776,5.094,2777,5.094,2778,5.094,2779,5.094,2780,5.094,2781,7.036,2782,5.094,2783,6.918,2784,5.094,2785,5.094,2786,5.094,2787,5.094,2788,5.094,2789,5.094]],["title/dependencies.html",[2324,4.605,2790,4.097]],["body/dependencies.html",[49,0.005,51,0.003,176,0.004,177,0.003,300,1.762,301,3.128,688,5.692,931,5.392,1998,5.969,2324,5.057,2326,6.719,2791,6.52,2792,10.115,2793,6.52,2794,6.52,2795,6.52,2796,6.52,2797,8.124,2798,7.277,2799,6.52,2800,6.52,2801,6.52,2802,6.52,2803,6.52,2804,6.52,2805,6.52,2806,6.52,2807,6.52,2808,6.52,2809,6.52,2810,6.52,2811,6.52,2812,6.52,2813,6.52,2814,6.52,2815,6.52,2816,6.52,2817,6.52,2818,6.52,2819,6.52]],["title/index.html",[8,0.178,2708,3.388,2709,3.388]],["body/index.html",[3,0.02,14,2.973,19,3.004,23,3.094,24,2.704,26,0.838,27,1.088,28,3.34,34,2.469,35,2.772,36,2.772,40,2.117,48,0.343,49,0.005,51,0.002,96,0.189,97,1.243,105,2.188,106,3.146,118,3.421,125,3.146,126,2.904,128,2.921,138,0.027,140,3.557,176,0.003,177,0.002,209,1.637,219,5.54,254,2.461,296,2.807,313,0.693,577,2.58,610,3.711,681,2.58,685,2.904,688,6.355,782,3.892,849,1.793,931,5.275,939,3.711,960,2.58,969,2.188,999,2.904,1041,2.58,1107,3.711,1237,3.711,1278,3.711,1294,3.711,1408,4.349,1476,2.461,1640,2.461,1665,4.469,1983,4.119,1986,4.381,1987,2.904,1989,2.904,2000,2.904,2002,2.904,2322,3.892,2341,3.146,2717,3.146,2723,4.745,2724,4.745,2725,4.745,2726,4.745,2727,4.745,2733,3.146,2737,3.146,2739,6.827,2740,5.713,2744,3.146,2745,3.146,2749,9.082,2750,3.146,2751,6.827,2752,3.146,2753,3.146,2754,3.146,2755,3.146,2756,3.146,2757,3.146,2820,3.512,2821,3.512,2822,6.378,2823,3.512,2824,5.297,2825,3.512,2826,3.512,2827,3.512,2828,3.512,2829,3.512,2830,3.512,2831,3.512,2832,3.512,2833,3.512,2834,3.512,2835,3.512,2836,3.512,2837,3.512,2838,3.512,2839,3.512,2840,3.512,2841,3.512,2842,3.512,2843,3.512,2844,3.512,2845,3.512,2846,3.512,2847,5.297,2848,3.512,2849,6.378,2850,3.512,2851,3.512,2852,3.512,2853,3.512,2854,3.512,2855,3.512,2856,2.904,2857,3.512,2858,3.512,2859,3.512,2860,3.512,2861,3.512,2862,3.512,2863,3.512,2864,3.512,2865,3.512,2866,3.512,2867,3.512,2868,3.512,2869,3.512,2870,3.512,2871,3.512,2872,3.512,2873,3.512,2874,3.512,2875,3.512,2876,3.512,2877,3.512,2878,3.512,2879,3.512,2880,3.512,2881,3.512,2882,3.512,2883,3.512]],["title/license.html",[2708,3.388,2709,3.388,2856,3.388]],["body/license.html",[21,1.92,49,0.004,51,0.003,176,0.004,177,0.003,975,6.473,1403,5.082,1810,5.504,1817,4.305,2333,5.082,2781,5.504,2856,5.082,2884,6.145,2885,8.612,2886,6.145,2887,6.145,2888,7.827,2889,6.145,2890,6.145,2891,6.145,2892,6.145,2893,6.145,2894,6.145,2895,7.827,2896,9.943,2897,6.145,2898,6.145,2899,6.145,2900,6.145,2901,8.612,2902,7.827,2903,6.145,2904,6.145,2905,6.145,2906,6.145,2907,6.145,2908,6.145,2909,6.145,2910,6.145,2911,6.145,2912,7.827,2913,6.145,2914,6.145,2915,6.145,2916,6.145,2917,6.145,2918,6.145,2919,6.145,2920,7.827,2921,7.827,2922,6.145,2923,6.145,2924,6.145,2925,6.145,2926,6.145,2927,6.145,2928,6.145,2929,6.145,2930,6.145,2931,6.145,2932,6.145,2933,6.145,2934,6.145,2935,6.145,2936,6.145,2937,6.145,2938,6.145,2939,6.145,2940,6.145,2941,6.145,2942,6.145,2943,6.145,2944,6.145,2945,6.145,2946,6.145,2947,6.145,2948,6.145,2949,6.145]],["title/modules.html",[2323,5.593]],["body/modules.html",[49,0.005,51,0.004,176,0.005,177,0.004,2322,5.843,2323,6.577,2798,7.123,2950,7.952,2951,7.952,2952,7.952]],["title/overview.html",[2953,6.057]],["body/overview.html",[2,0.352,49,0.005,51,0.002,176,0.003,177,0.002,220,6.379,221,3.304,347,1.669,391,2.467,408,6.689,738,6.689,800,7.062,801,4.224,930,3.9,936,7.529,938,7.529,941,7.529,944,7.529,947,7.529,949,7.529,950,7.529,952,7.529,954,7.529,956,7.529,958,6.689,2210,4.82,2321,5.426,2322,7.706,2324,3.658,2325,4.224,2326,3.9,2327,4.224,2328,4.224,2329,4.224,2330,4.224,2331,4.224,2332,4.224,2333,3.9,2953,4.224,2954,4.716,2955,4.716,2956,4.716,2957,4.716,2958,4.716,2959,4.716]],["title/miscellaneous/typealiases.html",[2960,3.178,2961,5.937]],["body/miscellaneous/typealiases.html",[6,0.065,8,0.273,15,5.132,20,5.132,33,4.951,37,5.132,49,0.005,51,0.003,57,0.265,59,3.378,66,5.335,71,5.335,84,5.335,88,5.335,128,4.381,176,0.004,177,0.003,453,2.724,755,5.335,1324,3.703,1334,3.349,1359,6.163,1363,4.409,1371,6.141,1372,6.141,1378,5.637,1462,4.409,1469,4.225,1471,4.225,1488,6.852,1624,5.204,1625,6.163,2960,4.881,2962,6.293,2963,6.293,2964,9.894,2965,5.637,2966,6.293,2967,6.293,2968,7.946,2969,6.293,2970,6.293,2971,6.293]],["title/miscellaneous/variables.html",[2960,3.178,2972,5.318]],["body/miscellaneous/variables.html",[1,2.983,3,0.027,6,0.067,8,0.096,13,0.953,14,2.197,24,1.132,28,2.065,39,0.972,40,1.337,49,0.005,51,0.001,57,0.419,109,1.554,112,2.937,115,2.466,164,1.834,176,0.002,177,0.001,209,1.034,222,6.105,223,2.702,224,3.295,244,1.72,245,1.834,294,2.929,295,2.796,296,2.858,312,6.689,314,0.279,348,3.548,349,3.042,361,0.825,409,3.042,410,4.912,423,4.405,424,2.944,425,4.277,426,4.381,427,4.083,428,4.083,430,2.733,431,4.328,432,4.328,433,4.328,434,4.405,507,1.834,578,2.577,579,4.029,611,2.577,612,4.029,674,2.245,682,1.72,683,3.042,739,1.834,740,3.295,748,1.834,749,1.834,750,2.853,803,1.629,806,1.986,807,1.834,808,3.295,814,2.47,826,1.834,827,1.834,828,1.834,830,2.612,831,3.542,832,1.834,884,1.834,939,3.302,961,3.656,962,1.72,963,3.042,1101,1.629,1108,1.72,1109,3.042,1133,1.834,1134,3.295,1146,1.834,1147,1.554,1148,1.834,1149,1.834,1150,1.834,1151,1.834,1152,1.834,1153,1.834,1238,1.72,1239,3.042,1279,3.656,1295,1.72,1296,3.042,1379,3.042,1380,2.376,1381,2.376,1382,3.042,1383,4.403,1384,4.403,1388,1.986,1389,1.986,1390,3.295,1410,1.16,1711,1.986,1712,3.295,1721,1.986,1788,2.47,1872,1.986,1886,1.986,1887,3.295,1932,1.986,1982,2.853,1983,3.044,1984,1.554,1985,4.254,1995,3.656,1996,1.834,2064,1.986,2095,1.986,2096,3.295,2125,1.986,2128,1.72,2156,3.295,2184,1.986,2185,1.986,2186,1.986,2187,1.986,2188,1.986,2189,1.986,2190,1.986,2191,1.986,2192,1.986,2193,1.986,2194,1.986,2195,1.986,2196,1.986,2197,1.986,2198,1.986,2199,1.986,2200,1.986,2201,1.986,2202,1.986,2203,1.986,2204,1.986,2205,1.986,2206,1.986,2207,1.986,2208,1.986,2209,1.986,2210,1.629,2211,1.986,2237,1.72,2245,1.834,2246,1.834,2247,1.834,2248,1.834,2249,1.834,2255,1.986,2256,1.986,2257,3.295,2282,2.853,2283,3.042,2284,2.853,2285,3.842,2286,3.042,2287,2.702,2288,1.986,2289,3.042,2290,3.042,2294,1.986,2346,1.986,2352,1.986,2354,1.986,2357,1.986,2365,1.986,2368,1.986,2370,1.986,2372,1.986,2374,1.986,2390,1.986,2420,1.986,2460,1.986,2487,1.986,2488,1.986,2490,1.986,2522,1.986,2563,1.986,2623,1.986,2624,1.986,2625,1.986,2627,1.986,2648,1.986,2960,1.72,2965,1.986,2972,1.986,2973,9.283,2974,3.678,2975,3.678,2976,3.678,2977,2.218,2978,3.678,2979,3.678,2980,3.678,2981,3.678,2982,3.678,2983,3.678,2984,2.218,2985,2.218,2986,2.218,2987,2.218,2988,2.218,2989,2.218,2990,2.218,2991,2.218,2992,3.678,2993,2.218,2994,2.218,2995,2.218,2996,2.218,2997,2.218,2998,2.218,2999,2.218,3000,2.218,3001,2.218,3002,2.218,3003,2.218]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1967,"title":{},"body":{"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"classes/KeyMap.html":{},"injectables/MapAPILoaderService.html":{}}}],["0.5.1",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["0.5.5",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2819,"title":{},"body":{"dependencies.html":{}}}],["010",{"_index":694,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["02",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":2954,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["1.1.20150312",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["1.3.1",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["1.3.2",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["1.3.3",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["1.4.1",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["1.4.11",{"_index":2002,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["1000",{"_index":695,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["11",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2956,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2958,"title":{},"body":{"overview.html":{}}}],["140",{"_index":2959,"title":{},"body":{"overview.html":{}}}],["17",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":2955,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["2.2.1",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["2.x)项目中便捷、高效地使用高德地图javascript",{"_index":2821,"title":{},"body":{"index.html":{}}}],["2017",{"_index":2781,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["2018.03.27",{"_index":2844,"title":{},"body":{"index.html":{}}}],["2018.04.17",{"_index":2842,"title":{},"body":{"index.html":{}}}],["2018.05.11",{"_index":2840,"title":{},"body":{"index.html":{}}}],["2018.05.24",{"_index":2838,"title":{},"body":{"index.html":{}}}],["2018.06.22",{"_index":2834,"title":{},"body":{"index.html":{}}}],["2018.11.29",{"_index":2831,"title":{},"body":{"index.html":{}}}],["2019",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["2019.09.23",{"_index":2828,"title":{},"body":{"index.html":{}}}],["21",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":2957,"title":{},"body":{"overview.html":{}}}],["4.3.1",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":2854,"title":{},"body":{"index.html":{}}}],["500",{"_index":696,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["6",{"_index":2740,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.1.0",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["_autocomplete",{"_index":369,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["_changes",{"_index":1662,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["_cm",{"_index":411,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["_config",{"_index":2003,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_defaulturl",{"_index":1999,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_defaultversion",{"_index":2001,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_districtsearch",{"_index":588,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["_documentref",{"_index":2004,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_driving",{"_index":624,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["_editorplugin",{"_index":1391,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{}}}],["_exec",{"_index":1020,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["_exec(method",{"_index":1013,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["_geocoder",{"_index":717,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["_heatmap",{"_index":741,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["_infowindow",{"_index":813,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["_map",{"_index":1392,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["_maploaded",{"_index":2006,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["_mappromise",{"_index":2157,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["_mapresolver",{"_index":2158,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["_mousetool",{"_index":973,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["_placesearch",{"_index":1048,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["_plugin",{"_index":233,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/ToolBarService.html":{}}}],["_riding",{"_index":1119,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["_size",{"_index":1966,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["_subscription",{"_index":234,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["_subscriptions",{"_index":412,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["_toolbar",{"_index":1135,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["_transfer",{"_index":1249,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["_walking",{"_index":1306,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["_windowref",{"_index":2005,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["above",{"_index":2919,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":393,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"classes/KeyMap.html":{},"injectables/MapAPIService.html":{}}}],["action",{"_index":1817,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"license.html":{}}}],["actual_component",{"_index":959,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["adcode",{"_index":205,"title":{},"body":{"interfaces/AddressComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Geocode.html":{},"interfaces/Poi.html":{},"interfaces/TMC.html":{},"interfaces/Tip.html":{},"interfaces/ViaCity.html":{}}}],["add",{"_index":999,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"index.html":{}}}],["add(overlayers",{"_index":1517,"title":{},"body":{"interfaces/CMap.html":{}}}],["addcontrol(obj",{"_index":1536,"title":{},"body":{"interfaces/CMap.html":{}}}],["adddatapoint",{"_index":1921,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["adddatapoint(lng",{"_index":1465,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["adddomlistener",{"_index":179,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["adddomlistener(instance",{"_index":184,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addition",{"_index":1768,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Hotel.html":{}}}],["addlistener",{"_index":180,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addlistener(instance",{"_index":192,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addlisteneronce",{"_index":181,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addlisteneronce(instance",{"_index":194,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["addmarker",{"_index":2213,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["addmarker(marker",{"_index":1591,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["addmarkers",{"_index":2214,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["addmarkers(markers",{"_index":1605,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["address",{"_index":397,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Geocode.html":{},"interfaces/Geocoder.html":{},"interfaces/Poi.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{}}}],["addresscomponent",{"_index":202,"title":{"interfaces/AddressComponent.html":{}},"body":{"interfaces/AddressComponent.html":{},"interfaces/Geocode.html":{},"interfaces/ReGeocode.html":{}}}],["addtomap",{"_index":2296,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["adname",{"_index":2426,"title":{},"body":{"interfaces/Poi.html":{}}}],["aliases",{"_index":2962,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_options",{"_index":312,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"miscellaneous/variables.html":{}}}],["amap",{"_index":296,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["amap.autocomplete",{"_index":2869,"title":{},"body":{"index.html":{}}}],["amap.autocomplete(opts",{"_index":373,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["amap.autocomplete的搜索服务和指令：amapautocompleteservice",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["amap.beziercurve",{"_index":2861,"title":{},"body":{"index.html":{}}}],["amap.beziercurve(options",{"_index":1417,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["amap.beziercurveeditor(map",{"_index":1422,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["amap.beziercurveeditor编辑功能：amap",{"_index":2753,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.beziercurve指令：amap",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["amap.bounds",{"_index":119,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/Bounds.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["amap.circle",{"_index":2863,"title":{},"body":{"index.html":{}}}],["amap.circle(options",{"_index":1729,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap.circleeditor(map",{"_index":1731,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap.circleeditor编辑功能：amap",{"_index":2750,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.circlemarker",{"_index":2864,"title":{},"body":{"index.html":{}}}],["amap.circlemarker(options",{"_index":1718,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["amap.circlemarker的指令：amap",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["amap.circle的指令：amap",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["amap.component",{"_index":2347,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["amap.component.ts",{"_index":2978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amap.districtsearch",{"_index":2871,"title":{},"body":{"index.html":{}}}],["amap.districtsearch(opts",{"_index":590,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["amap.districtsearch行政区查询服务：amapdistrictsearchservice",{"_index":2744,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.driving",{"_index":2723,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.driving(opts",{"_index":626,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["amap.editor",{"_index":131,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap.ellipse",{"_index":2862,"title":{},"body":{"index.html":{}}}],["amap.ellipse(options",{"_index":1882,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap.ellipseeditor(map",{"_index":1885,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap.ellipseeditor编辑功能：amap",{"_index":2755,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.ellipse指令：amap",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["amap.event",{"_index":103,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap.event.addlistener(m",{"_index":1893,"title":{},"body":{"classes/EventBinder.html":{}}}],["amap.event.addlistener(target",{"_index":1898,"title":{},"body":{"classes/EventBinder.html":{}}}],["amap.event.removelistener(listener",{"_index":1897,"title":{},"body":{"classes/EventBinder.html":{}}}],["amap.geocoder",{"_index":2868,"title":{},"body":{"index.html":{}}}],["amap.geocoder(opts",{"_index":719,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amap.geocoder的wrapper",{"_index":697,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amap.geocoder的地理服务：amapgeocoderservice",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["amap.heatmap",{"_index":2873,"title":{},"body":{"index.html":{}}}],["amap.heatmap(map",{"_index":1941,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap.heatmap指令：amap",{"_index":2737,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.icon",{"_index":102,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CIcon.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Icon.html":{},"interfaces/Text.html":{}}}],["amap.icon(iconoption",{"_index":2082,"title":{},"body":{"injectables/IconService.html":{}}}],["amap.info",{"_index":104,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap.infowindow",{"_index":2866,"title":{},"body":{"index.html":{}}}],["amap.infowindow(options",{"_index":2108,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["amap.lng",{"_index":98,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Cross.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocode.html":{},"interfaces/InfoWindow.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"interfaces/RideStep.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["amap.map",{"_index":97,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/InfoWindow.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MouseTool.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{},"index.html":{}}}],["amap.map(el",{"_index":2176,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["amap.marker",{"_index":125,"title":{},"body":{"interfaces/AMapClass.html":{},"index.html":{}}}],["amap.marker(options",{"_index":2309,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap.markerclusterer",{"_index":2867,"title":{},"body":{"index.html":{}}}],["amap.markerclusterer(map",{"_index":2271,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["amap.module.ts",{"_index":2335,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["amap.module.ts:74",{"_index":2338,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["amap.mouse",{"_index":117,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap.mousetool",{"_index":2872,"title":{},"body":{"index.html":{}}}],["amap.mousetool(map",{"_index":988,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["amap.mousetool鼠标工具插件：amapmousetoolservice",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["amap.pixel",{"_index":100,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPixel.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Pixel.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["amap.pixel(options.x",{"_index":2398,"title":{},"body":{"injectables/PixelService.html":{}}}],["amap.placesearch",{"_index":2870,"title":{},"body":{"index.html":{}}}],["amap.placesearch(opts",{"_index":1050,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["amap.placesearch的搜索服务：amapplacesearchservice",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["amap.plugin(name",{"_index":2424,"title":{},"body":{"injectables/PluginLoaderService.html":{}}}],["amap.polyeditor(map",{"_index":2474,"title":{},"body":{"injectables/PolygonService.html":{},"injectables/PolylineService.html":{}}}],["amap.polyeditor编辑功能：amap",{"_index":2752,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.polygon",{"_index":2860,"title":{},"body":{"index.html":{}}}],["amap.polygon(options",{"_index":2471,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap.polygon指令：amap",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["amap.polyline",{"_index":2859,"title":{},"body":{"index.html":{}}}],["amap.polyline(options",{"_index":2499,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap.rectangle",{"_index":2865,"title":{},"body":{"index.html":{}}}],["amap.rectangle(options",{"_index":2533,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap.rectangleeditor(map",{"_index":2536,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap.rectangleeditor编辑功能：amap",{"_index":2756,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.rectangle指令：amap",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["amap.riding",{"_index":2727,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.riding(opts",{"_index":1121,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["amap.size",{"_index":101,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CSize.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/Size.html":{}}}],["amap.size(options.width",{"_index":2568,"title":{},"body":{"injectables/SizeService.html":{}}}],["amap.text",{"_index":2858,"title":{},"body":{"index.html":{}}}],["amap.text(options",{"_index":2633,"title":{},"body":{"injectables/TextService.html":{}}}],["amap.text指令：amap",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["amap.toolbar",{"_index":106,"title":{},"body":{"interfaces/AMapClass.html":{},"index.html":{}}}],["amap.toolbar(options",{"_index":2658,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap.transfer",{"_index":2725,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.transfer(opts",{"_index":1251,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["amap.truckdriving",{"_index":2724,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.truckdriving(opts",{"_index":1286,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["amap.walking",{"_index":2726,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["amap.walking(opts",{"_index":1308,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["amap/ngx",{"_index":2346,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["amap/src/components/amap",{"_index":806,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"miscellaneous/variables.html":{}}}],["amap/src/components/ngx",{"_index":3003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amap/src/directives/amap",{"_index":222,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{},"miscellaneous/variables.html":{}}}],["amap/src/ngx",{"_index":2334,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["amap/src/services/amap",{"_index":348,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/bezier",{"_index":1388,"title":{},"body":{"injectables/BezierCurveService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/circle",{"_index":1711,"title":{},"body":{"injectables/CircleMarkerService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/circle/circle.service.ts",{"_index":1721,"title":{},"body":{"injectables/CircleService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/circle/circle.service.ts:12",{"_index":1728,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:13",{"_index":1727,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:14",{"_index":1722,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:24",{"_index":1723,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:31",{"_index":1725,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:37",{"_index":1726,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/circle/circle.service.ts:45",{"_index":1724,"title":{},"body":{"injectables/CircleService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts",{"_index":1872,"title":{},"body":{"injectables/EllipseService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:12",{"_index":1881,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:13",{"_index":1880,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:14",{"_index":1873,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:24",{"_index":1874,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:31",{"_index":1878,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:37",{"_index":1879,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/ellipse/ellipse.service.ts:45",{"_index":1876,"title":{},"body":{"injectables/EllipseService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts",{"_index":1932,"title":{},"body":{"injectables/HeatmapService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:12",{"_index":1938,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:13",{"_index":1937,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:14",{"_index":1933,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:24",{"_index":1934,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/heatmap/heatmap.service.ts:36",{"_index":1936,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["amap/src/services/icon/icon.service.ts",{"_index":2064,"title":{},"body":{"injectables/IconService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/icon/icon.service.ts:11",{"_index":2066,"title":{},"body":{"injectables/IconService.html":{}}}],["amap/src/services/icon/icon.service.ts:18",{"_index":2067,"title":{},"body":{"injectables/IconService.html":{}}}],["amap/src/services/info",{"_index":2095,"title":{},"body":{"injectables/InfoWindowService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/label/label.service.ts",{"_index":2125,"title":{},"body":{"injectables/LabelService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/label/label.service.ts:10",{"_index":2126,"title":{},"body":{"injectables/LabelService.html":{}}}],["amap/src/services/label/label.service.ts:14",{"_index":2127,"title":{},"body":{"injectables/LabelService.html":{}}}],["amap/src/services/logger/debug",{"_index":1748,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts",{"_index":2138,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:12",{"_index":2141,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:16",{"_index":2143,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:20",{"_index":2140,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:4",{"_index":2139,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/logger/logger.service.ts:8",{"_index":2142,"title":{},"body":{"injectables/LoggerService.html":{}}}],["amap/src/services/map",{"_index":1982,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/marker",{"_index":2255,"title":{},"body":{"injectables/MarkerClustererService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/marker/marker.service.ts",{"_index":2294,"title":{},"body":{"injectables/MarkerService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/marker/marker.service.ts:14",{"_index":2300,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap/src/services/marker/marker.service.ts:15",{"_index":2295,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap/src/services/marker/marker.service.ts:27",{"_index":2297,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap/src/services/marker/marker.service.ts:57",{"_index":2299,"title":{},"body":{"injectables/MarkerService.html":{}}}],["amap/src/services/pixel/pixel.service.ts",{"_index":2390,"title":{},"body":{"injectables/PixelService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/pixel/pixel.service.ts:10",{"_index":2393,"title":{},"body":{"injectables/PixelService.html":{}}}],["amap/src/services/pixel/pixel.service.ts:14",{"_index":2394,"title":{},"body":{"injectables/PixelService.html":{}}}],["amap/src/services/pixel/pixel.service.ts:22",{"_index":2396,"title":{},"body":{"injectables/PixelService.html":{}}}],["amap/src/services/plugin",{"_index":2420,"title":{},"body":{"injectables/PluginLoaderService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/polygon/polygon.service.ts",{"_index":2460,"title":{},"body":{"injectables/PolygonService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/polygon/polygon.service.ts:12",{"_index":2470,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:13",{"_index":2469,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:14",{"_index":2461,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:24",{"_index":2462,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:31",{"_index":2467,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:37",{"_index":2468,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polygon/polygon.service.ts:45",{"_index":2464,"title":{},"body":{"injectables/PolygonService.html":{}}}],["amap/src/services/polyline/polyline.service.ts",{"_index":2490,"title":{},"body":{"injectables/PolylineService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/polyline/polyline.service.ts:12",{"_index":2498,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:13",{"_index":2497,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:14",{"_index":2491,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:24",{"_index":2492,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:31",{"_index":2495,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:37",{"_index":2496,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/polyline/polyline.service.ts:45",{"_index":2493,"title":{},"body":{"injectables/PolylineService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts",{"_index":2522,"title":{},"body":{"injectables/RectangleService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:12",{"_index":2532,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:13",{"_index":2531,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:14",{"_index":2523,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:24",{"_index":2524,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:31",{"_index":2529,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:37",{"_index":2530,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/rectangle/rectangle.service.ts:45",{"_index":2526,"title":{},"body":{"injectables/RectangleService.html":{}}}],["amap/src/services/size/size.service.ts",{"_index":2563,"title":{},"body":{"injectables/SizeService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/size/size.service.ts:10",{"_index":2564,"title":{},"body":{"injectables/SizeService.html":{}}}],["amap/src/services/size/size.service.ts:14",{"_index":2565,"title":{},"body":{"injectables/SizeService.html":{}}}],["amap/src/services/size/size.service.ts:22",{"_index":2567,"title":{},"body":{"injectables/SizeService.html":{}}}],["amap/src/services/text/text.service.ts",{"_index":2627,"title":{},"body":{"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/text/text.service.ts:13",{"_index":2632,"title":{},"body":{"injectables/TextService.html":{}}}],["amap/src/services/text/text.service.ts:14",{"_index":2628,"title":{},"body":{"injectables/TextService.html":{}}}],["amap/src/services/text/text.service.ts:25",{"_index":2629,"title":{},"body":{"injectables/TextService.html":{}}}],["amap/src/services/text/text.service.ts:45",{"_index":2631,"title":{},"body":{"injectables/TextService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts",{"_index":2648,"title":{},"body":{"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:13",{"_index":2655,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:14",{"_index":2654,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:15",{"_index":2650,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:26",{"_index":2651,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/services/toolbar/toolbar.service.ts:44",{"_index":2653,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["amap/src/types/class/amap.bounds.ts",{"_index":1423,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:10",{"_index":1435,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:11",{"_index":1434,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:12",{"_index":1436,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:8",{"_index":1431,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.bounds.ts:9",{"_index":1433,"title":{},"body":{"interfaces/Bounds.html":{}}}],["amap/src/types/class/amap.editor.ts",{"_index":1363,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["amap/src/types/class/amap.editor.ts:11",{"_index":1858,"title":{},"body":{"interfaces/Editor.html":{}}}],["amap/src/types/class/amap.editor.ts:12",{"_index":1855,"title":{},"body":{"interfaces/Editor.html":{}}}],["amap/src/types/class/amap.editor.ts:13",{"_index":1857,"title":{},"body":{"interfaces/Editor.html":{}}}],["amap/src/types/class/amap.editor.ts:14",{"_index":1856,"title":{},"body":{"interfaces/Editor.html":{}}}],["amap/src/types/class/amap.editor.ts:23",{"_index":1369,"title":{},"body":{"interfaces/BezierCurveEditor.html":{}}}],["amap/src/types/class/amap.editor.ts:24",{"_index":1364,"title":{},"body":{"interfaces/BezierCurveEditor.html":{}}}],["amap/src/types/class/amap.editor.ts:25",{"_index":1368,"title":{},"body":{"interfaces/BezierCurveEditor.html":{}}}],["amap/src/types/class/amap.editor.ts:26",{"_index":1366,"title":{},"body":{"interfaces/BezierCurveEditor.html":{}}}],["amap/src/types/class/amap.event.ts",{"_index":178,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:2",{"_index":188,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:3",{"_index":193,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:4",{"_index":195,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:5",{"_index":197,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.event.ts:6",{"_index":201,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["amap/src/types/class/amap.icon.ts",{"_index":1475,"title":{},"body":{"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["amap/src/types/class/amap.icon.ts:6",{"_index":2061,"title":{},"body":{"interfaces/Icon.html":{}}}],["amap/src/types/class/amap.icon.ts:7",{"_index":2062,"title":{},"body":{"interfaces/Icon.html":{}}}],["amap/src/types/class/amap.info",{"_index":1480,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["amap/src/types/class/amap.lng",{"_index":1486,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["amap/src/types/class/amap.map.ts",{"_index":1496,"title":{},"body":{"interfaces/CMap.html":{}}}],["amap/src/types/class/amap.marker",{"_index":1586,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["amap/src/types/class/amap.mouse",{"_index":1609,"title":{},"body":{"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["amap/src/types/class/amap.pixel.ts",{"_index":1613,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.pixel.ts:5",{"_index":2387,"title":{},"body":{"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.pixel.ts:6",{"_index":2388,"title":{},"body":{"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.pixel.ts:7",{"_index":2386,"title":{},"body":{"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.pixel.ts:8",{"_index":2389,"title":{},"body":{"interfaces/Pixel.html":{}}}],["amap/src/types/class/amap.size.ts",{"_index":1635,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["amap/src/types/class/amap.size.ts:5",{"_index":2561,"title":{},"body":{"interfaces/Size.html":{}}}],["amap/src/types/class/amap.size.ts:6",{"_index":2560,"title":{},"body":{"interfaces/Size.html":{}}}],["amap/src/types/class/amap.size.ts:7",{"_index":2562,"title":{},"body":{"interfaces/Size.html":{}}}],["amap/src/types/class/amap.toolbar.ts",{"_index":1647,"title":{},"body":{"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:10",{"_index":2638,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:11",{"_index":2643,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:12",{"_index":2642,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:13",{"_index":2647,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:14",{"_index":2640,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:15",{"_index":2645,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:16",{"_index":2641,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:17",{"_index":2646,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:18",{"_index":2636,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:19",{"_index":2637,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:20",{"_index":2639,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/amap.toolbar.ts:21",{"_index":2644,"title":{},"body":{"interfaces/ToolBar.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts",{"_index":1322,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts:10",{"_index":1325,"title":{},"body":{"interfaces/Autocomplete.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts:11",{"_index":1328,"title":{},"body":{"interfaces/Autocomplete.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts:12",{"_index":1326,"title":{},"body":{"interfaces/Autocomplete.html":{}}}],["amap/src/types/class/autocomplete/amap.autocomplete.ts:13",{"_index":1327,"title":{},"body":{"interfaces/Autocomplete.html":{}}}],["amap/src/types/class/autocomplete/autocomplete",{"_index":1335,"title":{},"body":{"interfaces/AutocompleteResult.html":{}}}],["amap/src/types/class/autocomplete/tip.ts",{"_index":2635,"title":{},"body":{"interfaces/Tip.html":{}}}],["amap/src/types/class/cluster",{"_index":1734,"title":{},"body":{"interfaces/ClusterStyle.html":{}}}],["amap/src/types/class/district",{"_index":1445,"title":{},"body":{"interfaces/CDistrictSearch.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchResult.html":{}}}],["amap/src/types/class/driving/amap.driving.ts",{"_index":1448,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:12",{"_index":1835,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:18",{"_index":1837,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:22",{"_index":1841,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:23",{"_index":1839,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:24",{"_index":1840,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:25",{"_index":1832,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:26",{"_index":1831,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:27",{"_index":1833,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:28",{"_index":1834,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:29",{"_index":1830,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:30",{"_index":1838,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.driving.ts:31",{"_index":1842,"title":{},"body":{"interfaces/Driving.html":{}}}],["amap/src/types/class/driving/amap.truck",{"_index":1651,"title":{},"body":{"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["amap/src/types/class/driving/drive",{"_index":1808,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["amap/src/types/class/driving/driving",{"_index":1849,"title":{},"body":{"interfaces/DrivingResult.html":{}}}],["amap/src/types/class/geocoder/address",{"_index":203,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["amap/src/types/class/geocoder/amap.geocoder.ts",{"_index":1457,"title":{},"body":{"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["amap/src/types/class/geocoder/amap.geocoder.ts:12",{"_index":1905,"title":{},"body":{"interfaces/Geocoder.html":{}}}],["amap/src/types/class/geocoder/amap.geocoder.ts:13",{"_index":1906,"title":{},"body":{"interfaces/Geocoder.html":{}}}],["amap/src/types/class/geocoder/amap.geocoder.ts:14",{"_index":1904,"title":{},"body":{"interfaces/Geocoder.html":{}}}],["amap/src/types/class/geocoder/business",{"_index":1437,"title":{},"body":{"interfaces/BusinessArea.html":{}}}],["amap/src/types/class/geocoder/cross.ts",{"_index":1741,"title":{},"body":{"interfaces/Cross.html":{}}}],["amap/src/types/class/geocoder/geocode",{"_index":1901,"title":{},"body":{"interfaces/GeocodeResult.html":{}}}],["amap/src/types/class/geocoder/geocode.ts",{"_index":1899,"title":{},"body":{"interfaces/Geocode.html":{}}}],["amap/src/types/class/geocoder/geocoder",{"_index":1910,"title":{},"body":{"interfaces/GeocoderResult.html":{}}}],["amap/src/types/class/geocoder/re",{"_index":2501,"title":{},"body":{"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{}}}],["amap/src/types/class/geocoder/road.ts",{"_index":2546,"title":{},"body":{"interfaces/Road.html":{}}}],["amap/src/types/class/index.ts",{"_index":7,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap/src/types/class/index.ts:75",{"_index":54,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts",{"_index":1462,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"miscellaneous/typealiases.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:10",{"_index":1929,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:11",{"_index":1922,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:12",{"_index":1927,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:14",{"_index":1926,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:15",{"_index":1930,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:17",{"_index":1924,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:18",{"_index":1925,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:19",{"_index":1923,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/layers/amap.heatmap.ts:9",{"_index":1928,"title":{},"body":{"interfaces/Heatmap.html":{}}}],["amap/src/types/class/overlays/amap.bezier",{"_index":1340,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{}}}],["amap/src/types/class/overlays/amap.circle",{"_index":1443,"title":{},"body":{"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts",{"_index":1440,"title":{},"body":{"interfaces/CCircle.html":{},"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:11",{"_index":1692,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:12",{"_index":1687,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:13",{"_index":1686,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:14",{"_index":1696,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:15",{"_index":1690,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:16",{"_index":1695,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:17",{"_index":1689,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:18",{"_index":1691,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:19",{"_index":1697,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:20",{"_index":1694,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:21",{"_index":1693,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:22",{"_index":1688,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.circle.ts:23",{"_index":1685,"title":{},"body":{"interfaces/Circle.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts",{"_index":1453,"title":{},"body":{"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:12",{"_index":1868,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:13",{"_index":1863,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:14",{"_index":1861,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:15",{"_index":1865,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:16",{"_index":1860,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:17",{"_index":1864,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:18",{"_index":1869,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:19",{"_index":1867,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:20",{"_index":1866,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:21",{"_index":1862,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.ellipse.ts:22",{"_index":1859,"title":{},"body":{"interfaces/Ellipse.html":{}}}],["amap/src/types/class/overlays/amap.marker.ts",{"_index":1547,"title":{},"body":{"interfaces/CMarker.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts",{"_index":1624,"title":{},"body":{"interfaces/CPolygon.html":{},"interfaces/Polygon.html":{},"miscellaneous/typealiases.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:13",{"_index":2455,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:14",{"_index":2450,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:15",{"_index":2454,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:16",{"_index":2449,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:17",{"_index":2447,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:18",{"_index":2446,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:19",{"_index":2451,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:20",{"_index":2456,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:21",{"_index":2453,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:22",{"_index":2452,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:23",{"_index":2448,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polygon.ts:24",{"_index":2445,"title":{},"body":{"interfaces/Polygon.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts",{"_index":1628,"title":{},"body":{"interfaces/CPolyline.html":{},"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:10",{"_index":2484,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:11",{"_index":2479,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:12",{"_index":2483,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:13",{"_index":2478,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:14",{"_index":2477,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:15",{"_index":2475,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:16",{"_index":2480,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:17",{"_index":2485,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:18",{"_index":2482,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:19",{"_index":2481,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.polyline.ts:20",{"_index":2476,"title":{},"body":{"interfaces/Polyline.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts",{"_index":1629,"title":{},"body":{"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:12",{"_index":2517,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:13",{"_index":2512,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:14",{"_index":2510,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:15",{"_index":2514,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:16",{"_index":2509,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:17",{"_index":2513,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:18",{"_index":2518,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:19",{"_index":2516,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:20",{"_index":2515,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:21",{"_index":2511,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.rectangle.ts:22",{"_index":2508,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["amap/src/types/class/overlays/amap.text.ts",{"_index":1641,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:12",{"_index":2594,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:13",{"_index":2615,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:14",{"_index":2614,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:15",{"_index":2591,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:16",{"_index":2611,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:17",{"_index":2604,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:18",{"_index":2586,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:19",{"_index":2606,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:20",{"_index":2587,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:21",{"_index":2592,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:22",{"_index":2612,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:23",{"_index":2603,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:24",{"_index":2585,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:25",{"_index":2619,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:26",{"_index":2597,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:27",{"_index":2608,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:28",{"_index":2588,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:29",{"_index":2598,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:30",{"_index":2620,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:31",{"_index":2607,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:32",{"_index":2599,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:33",{"_index":2600,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:34",{"_index":2621,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:35",{"_index":2601,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:36",{"_index":2602,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:37",{"_index":2610,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:38",{"_index":2590,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:39",{"_index":2616,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:40",{"_index":2595,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:41",{"_index":2617,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:42",{"_index":2596,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:43",{"_index":2613,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:44",{"_index":2593,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:45",{"_index":2609,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/overlays/amap.text.ts:46",{"_index":2589,"title":{},"body":{"interfaces/Text.html":{}}}],["amap/src/types/class/place",{"_index":1619,"title":{},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/Cinema.html":{},"interfaces/CityInfo.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Hotel.html":{},"interfaces/IPoiObject.html":{},"interfaces/Photo.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{}}}],["amap/src/types/class/riding/amap.riding.ts",{"_index":1633,"title":{},"body":{"interfaces/CRiding.html":{},"interfaces/Riding.html":{}}}],["amap/src/types/class/riding/amap.riding.ts:11",{"_index":2542,"title":{},"body":{"interfaces/Riding.html":{}}}],["amap/src/types/class/riding/amap.riding.ts:16",{"_index":2543,"title":{},"body":{"interfaces/Riding.html":{}}}],["amap/src/types/class/riding/amap.riding.ts:20",{"_index":2541,"title":{},"body":{"interfaces/Riding.html":{}}}],["amap/src/types/class/riding/ride",{"_index":2538,"title":{},"body":{"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{}}}],["amap/src/types/class/riding/riding",{"_index":2545,"title":{},"body":{"interfaces/RidingResult.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts",{"_index":1649,"title":{},"body":{"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:11",{"_index":2665,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:16",{"_index":2666,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:20",{"_index":2670,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:21",{"_index":2668,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:22",{"_index":2669,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:23",{"_index":2664,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:24",{"_index":2663,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/amap.transfer.ts:25",{"_index":2667,"title":{},"body":{"interfaces/Transfer.html":{}}}],["amap/src/types/class/transfer/segment.ts",{"_index":2555,"title":{},"body":{"interfaces/Segment.html":{}}}],["amap/src/types/class/transfer/transfer",{"_index":2675,"title":{},"body":{"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{}}}],["amap/src/types/class/walking/amap.walking.ts",{"_index":1654,"title":{},"body":{"interfaces/CWalking.html":{},"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/amap.walking.ts:12",{"_index":2702,"title":{},"body":{"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/amap.walking.ts:17",{"_index":2703,"title":{},"body":{"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/amap.walking.ts:21",{"_index":2701,"title":{},"body":{"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/amap.walking.ts:22",{"_index":2704,"title":{},"body":{"interfaces/Walking.html":{}}}],["amap/src/types/class/walking/walk",{"_index":2698,"title":{},"body":{"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{}}}],["amap/src/types/class/walking/walking",{"_index":2706,"title":{},"body":{"interfaces/WalkingResult.html":{}}}],["amap/src/types/interface/autocomplete",{"_index":1333,"title":{},"body":{"interfaces/AutocompleteOptions.html":{}}}],["amap/src/types/interface/callback.type.ts",{"_index":2970,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amap/src/types/interface/cluster",{"_index":1952,"title":{},"body":{"interfaces/IClusterStyle.html":{}}}],["amap/src/types/interface/district",{"_index":1795,"title":{},"body":{"interfaces/DistrictSearchOptions.html":{}}}],["amap/src/types/interface/driving/driving",{"_index":1843,"title":{},"body":{"interfaces/DrivingOptions.html":{}}}],["amap/src/types/interface/driving/truck",{"_index":2687,"title":{},"body":{"interfaces/TruckDrivingOptions.html":{}}}],["amap/src/types/interface/geocoder",{"_index":1907,"title":{},"body":{"interfaces/GeocoderOptions.html":{}}}],["amap/src/types/interface/icon.interface.ts",{"_index":1956,"title":{},"body":{"interfaces/IIcon.html":{}}}],["amap/src/types/interface/info",{"_index":2092,"title":{},"body":{"interfaces/InfoWindowOptions.html":{}}}],["amap/src/types/interface/label.interface.ts",{"_index":1980,"title":{},"body":{"interfaces/ILabel.html":{}}}],["amap/src/types/interface/layers/heatmap",{"_index":1931,"title":{},"body":{"interfaces/HeatmapOptions.html":{}}}],["amap/src/types/interface/lng",{"_index":2971,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amap/src/types/interface/map",{"_index":2183,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["amap/src/types/interface/marker",{"_index":2244,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["amap/src/types/interface/overlays/bezier",{"_index":1378,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"miscellaneous/typealiases.html":{}}}],["amap/src/types/interface/overlays/circle",{"_index":1709,"title":{},"body":{"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{}}}],["amap/src/types/interface/overlays/ellipse",{"_index":1870,"title":{},"body":{"interfaces/EllipseOptions.html":{}}}],["amap/src/types/interface/overlays/marker",{"_index":2281,"title":{},"body":{"interfaces/MarkerOptions.html":{}}}],["amap/src/types/interface/overlays/polygon",{"_index":2457,"title":{},"body":{"interfaces/PolygonOptions.html":{}}}],["amap/src/types/interface/overlays/polyline",{"_index":2486,"title":{},"body":{"interfaces/PolylineOptions.html":{}}}],["amap/src/types/interface/overlays/rectangle",{"_index":2519,"title":{},"body":{"interfaces/RectangleOptions.html":{}}}],["amap/src/types/interface/overlays/text",{"_index":2622,"title":{},"body":{"interfaces/TextOptions.html":{}}}],["amap/src/types/interface/pixel.interface.ts",{"_index":2058,"title":{},"body":{"interfaces/IPixel.html":{}}}],["amap/src/types/interface/place",{"_index":2415,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["amap/src/types/interface/riding/riding",{"_index":2544,"title":{},"body":{"interfaces/RidingOptions.html":{}}}],["amap/src/types/interface/size.interface.ts",{"_index":2059,"title":{},"body":{"interfaces/ISize.html":{}}}],["amap/src/types/interface/toolbar",{"_index":2662,"title":{},"body":{"interfaces/ToolbarOptions.html":{}}}],["amap/src/types/interface/transfer/transfer",{"_index":2671,"title":{},"body":{"interfaces/TransferOptions.html":{}}}],["amap/src/types/interface/walking/walking",{"_index":2705,"title":{},"body":{"interfaces/WalkingOptions.html":{}}}],["amap/src/utils/browser",{"_index":1800,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["amap/src/utils/change",{"_index":1656,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["amap/src/utils/event",{"_index":1886,"title":{},"body":{"classes/EventBinder.html":{},"miscellaneous/variables.html":{}}}],["amap/src/utils/key",{"_index":1960,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["amap/src/utils/utils.ts",{"_index":2690,"title":{},"body":{"classes/Utils.html":{}}}],["amap/src/utils/utils.ts:2",{"_index":2693,"title":{},"body":{"classes/Utils.html":{}}}],["amap/ts/types/class/amap.map.js",{"_index":982,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["amap/types/class';可以从ngx",{"_index":2875,"title":{},"body":{"index.html":{}}}],["amap/types/class中import对amap",{"_index":2874,"title":{},"body":{"index.html":{}}}],["amap/types/interface",{"_index":2878,"title":{},"body":{"index.html":{}}}],["amap/types/interface中import对ngx",{"_index":2876,"title":{},"body":{"index.html":{}}}],["amapautocomplete",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["amapautocompletedirective",{"_index":220,"title":{"directives/AmapAutocompleteDirective.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"overview.html":{}}}],["amapautocompleteservice",{"_index":254,"title":{"injectables/AmapAutocompleteService.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapautocompletewrapper",{"_index":275,"title":{"classes/AmapAutocompleteWrapper.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapautocompletewrapper(opts",{"_index":390,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["amapautocompletewrapper对象将高德原生的autocomplete对象提供的方法封装成promise",{"_index":367,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["amapbeziercurvedirective",{"_index":938,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapcircledirective",{"_index":941,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapcirclemarkerdirective",{"_index":408,"title":{"directives/AmapCircleMarkerDirective.html":{}},"body":{"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapclass",{"_index":1,"title":{"interfaces/AMapClass.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["amapdistrictsearchservice",{"_index":577,"title":{"injectables/AmapDistrictSearchService.html":{}},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapdistrictsearchwrapper",{"_index":587,"title":{"classes/AmapDistrictSearchWrapper.html":{}},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapdistrictsearchwrapper(opts",{"_index":600,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["amapdistrictsearchwrapper对象将高德原生的districtsearch对象提供的方法封装成promise",{"_index":586,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["amapdrivingservice",{"_index":610,"title":{"injectables/AmapDrivingService.html":{}},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amapdrivingwrapper",{"_index":623,"title":{"classes/AmapDrivingWrapper.html":{}},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapdrivingwrapper(opts",{"_index":656,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["amapdrivingwrapper对象将高德原生的driving对象提供的方法封装成promise",{"_index":622,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["amapellipsedirective",{"_index":944,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapevent",{"_index":72,"title":{"interfaces/AMapEvent.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{}}}],["amapgeocoder",{"_index":691,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amapgeocoder.of",{"_index":693,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amapgeocoderservice",{"_index":681,"title":{"injectables/AmapGeocoderService.html":{}},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapgeocoderwrapper",{"_index":687,"title":{"classes/AmapGeocoderWrapper.html":{}},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapgeocoderwrapper(opts",{"_index":729,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amapgeocoderwrapper对象将高德原生的geocoder对象提供的方法封装成promise",{"_index":716,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["amapheatmapdirective",{"_index":738,"title":{"directives/AmapHeatmapDirective.html":{}},"body":{"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapinfowindowcomponent",{"_index":800,"title":{"components/AmapInfoWindowComponent.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapmarkerclustererdirective",{"_index":947,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapmarkerdirective",{"_index":949,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapmousetoolservice",{"_index":960,"title":{"injectables/AmapMouseToolService.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapmousetoolwrapper",{"_index":972,"title":{"classes/AmapMouseToolWrapper.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapmousetoolwrapper(map",{"_index":1019,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["amapplacesearchservice",{"_index":1041,"title":{"injectables/AmapPlaceSearchService.html":{}},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"modules/NgxAmapModule.html":{},"index.html":{}}}],["amapplacesearchwrapper",{"_index":1047,"title":{"classes/AmapPlaceSearchWrapper.html":{}},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapplacesearchwrapper(opts",{"_index":1077,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["amapplacesearchwrapper对象将高德原生的placesearch对象提供的方法封装成promise",{"_index":1046,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["amappolygondirective",{"_index":950,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amappolylinedirective",{"_index":952,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amaprectangledirective",{"_index":954,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amapridingservice",{"_index":1107,"title":{"injectables/AmapRidingService.html":{}},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amapridingwrapper",{"_index":1118,"title":{"classes/AmapRidingWrapper.html":{}},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapridingwrapper(opts",{"_index":1127,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["amapridingwrapper对象将高德原生的riding对象提供的方法封装成promise",{"_index":1117,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["amaptextdirective",{"_index":956,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amaptoolbardirective",{"_index":958,"title":{"directives/AmapToolBarDirective.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["amaptransferservice",{"_index":1237,"title":{"injectables/AmapTransferService.html":{}},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amaptransferwrapper",{"_index":1248,"title":{"classes/AmapTransferWrapper.html":{}},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amaptransferwrapper(opts",{"_index":1264,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["amaptransferwrapper对象将高德原生的transfer对象提供的方法封装成promise",{"_index":1247,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["amaptruckdrivingservice",{"_index":1278,"title":{"injectables/AmapTruckDrivingService.html":{}},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amaptruckdrivingwrapper",{"_index":1285,"title":{"classes/AmapTruckDrivingWrapper.html":{}},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amaptruckdrivingwrapper(opts",{"_index":1291,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["amaptruckdrivingwrapper对象将高德原生的truckdriving对象提供的方法封装成promise",{"_index":1284,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["amapwalkingservice",{"_index":1294,"title":{"injectables/AmapWalkingService.html":{}},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{}}}],["amapwalkingwrapper",{"_index":1305,"title":{"classes/AmapWalkingWrapper.html":{}},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"modules/NgxAmapModule.html":{}}}],["amapwalkingwrapper(opts",{"_index":1315,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["amapwalkingwrapper对象将高德原生的walking对象提供的方法封装成promise",{"_index":1304,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["amap所使用的input",{"_index":2877,"title":{},"body":{"index.html":{}}}],["amap支持gridmapforeign",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":2910,"title":{},"body":{"license.html":{}}}],["angle",{"_index":2282,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":2739,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular(ver",{"_index":2820,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":300,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"injectables/WindowRef.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2605,"title":{},"body":{"interfaces/Text.html":{}}}],["animateenable",{"_index":2184,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["animation",{"_index":2623,"title":{},"body":{"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":1983,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":1411,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["api.service.ts",{"_index":2156,"title":{},"body":{"injectables/MapAPIService.html":{},"miscellaneous/variables.html":{}}}],["api.service.ts:13",{"_index":2171,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:14",{"_index":2169,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:15",{"_index":2170,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:16",{"_index":2163,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:23",{"_index":2167,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:32",{"_index":2168,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:39",{"_index":2172,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api.service.ts:43",{"_index":2165,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["api/map",{"_index":1410,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1986,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["apiversion",{"_index":1987,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["api的baseurl调整为https",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["api的版本调整为1.4.3",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["appmodule",{"_index":2852,"title":{},"body":{"index.html":{}}}],["area",{"_index":142,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AddressComponent.html":{}}}],["area.ts",{"_index":1438,"title":{},"body":{"interfaces/BusinessArea.html":{}}}],["args",{"_index":1755,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["arising",{"_index":2947,"title":{},"body":{"license.html":{}}}],["array",{"_index":1488,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/LngLat.html":{},"injectables/MapAPILoaderService.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(i",{"_index":2053,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["array.isarray(queryparams[k",{"_index":2046,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["array>|array",{"_index":1386,"title":{},"body":{"interfaces/BezierCurveOptions.html":{}}}],["arrays",{"_index":2045,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["array|array>|array|array",{"_index":1626,"title":{},"body":{"interfaces/CPolygon.html":{},"interfaces/Polygon.html":{}}}],["assist_action",{"_index":1818,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["associated",{"_index":2897,"title":{},"body":{"license.html":{}}}],["atmosphere",{"_index":1769,"title":{},"body":{"interfaces/Dining.html":{}}}],["authors",{"_index":2937,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":10,"title":{"interfaces/Autocomplete.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{}}}],["autocomplete.directive",{"_index":2363,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["autocomplete.directive.ts",{"_index":224,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"miscellaneous/variables.html":{}}}],["autocomplete.directive.ts:22",{"_index":297,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:25",{"_index":263,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:27",{"_index":259,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:29",{"_index":262,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:31",{"_index":261,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:34",{"_index":271,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:36",{"_index":267,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:38",{"_index":269,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:40",{"_index":272,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:42",{"_index":265,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:44",{"_index":293,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:45",{"_index":257,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:52",{"_index":280,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:61",{"_index":283,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:71",{"_index":282,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:77",{"_index":276,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:85",{"_index":285,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:89",{"_index":290,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:93",{"_index":287,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete.service",{"_index":305,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"modules/NgxAmapModule.html":{}}}],["autocomplete.service.ts",{"_index":349,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"miscellaneous/variables.html":{}}}],["autocomplete.service.ts:14",{"_index":394,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:21",{"_index":407,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:30",{"_index":395,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:34",{"_index":396,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:40",{"_index":398,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:44",{"_index":400,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:48",{"_index":399,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete.service.ts:57",{"_index":358,"title":{},"body":{"injectables/AmapAutocompleteService.html":{}}}],["autocomplete.service.ts:59",{"_index":353,"title":{},"body":{"injectables/AmapAutocompleteService.html":{}}}],["autocomplete.service.ts:63",{"_index":356,"title":{},"body":{"injectables/AmapAutocompleteService.html":{}}}],["autocomplete/amap",{"_index":223,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["autocomplete/amap.autocomplete",{"_index":111,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["autocomplete/autocomplete",{"_index":150,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["autocomplete/tip",{"_index":151,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["autocompleteoptions",{"_index":302,"title":{"interfaces/AutocompleteOptions.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/CAutocomplete.html":{}}}],["autocompleteresult",{"_index":1332,"title":{"interfaces/AutocompleteResult.html":{}},"body":{"interfaces/Autocomplete.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/CAutocomplete.html":{}}}],["autocomplete事件，返回可以被subscribe的observable",{"_index":375,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["autocomplete插件触发choose",{"_index":266,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete插件触发complete",{"_index":268,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete插件触发error",{"_index":270,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autocomplete插件触发select",{"_index":273,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["autofitview",{"_index":1844,"title":{},"body":{"interfaces/DrivingOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["automove",{"_index":826,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindowOptions.html":{},"miscellaneous/variables.html":{}}}],["autoposition",{"_index":1146,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["autorotation",{"_index":2283,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["autos",{"_index":258,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["averagecenter",{"_index":2237,"title":{},"body":{"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["awesome",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["axlesnum",{"_index":2688,"title":{},"body":{"interfaces/TruckDrivingOptions.html":{}}}],["bar",{"_index":782,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"injectables/ToolBarService.html":{},"index.html":{}}}],["basic",{"_index":2440,"title":{},"body":{"interfaces/Poi.html":{}}}],["batch",{"_index":1908,"title":{},"body":{"interfaces/GeocoderOptions.html":{}}}],["beta.4",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["bezier",{"_index":939,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/BezierCurveService.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["beziercurve",{"_index":11,"title":{"interfaces/BezierCurve.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["beziercurve.then(m",{"_index":1418,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["beziercurveeditor",{"_index":12,"title":{"interfaces/BezierCurveEditor.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["beziercurveeditoroptions",{"_index":1373,"title":{"interfaces/BezierCurveEditorOptions.html":{}},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["beziercurveoptions",{"_index":1351,"title":{"interfaces/BezierCurveOptions.html":{}},"body":{"interfaces/BezierCurve.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurve.html":{}}}],["beziercurveservice",{"_index":1387,"title":{"injectables/BezierCurveService.html":{}},"body":{"injectables/BezierCurveService.html":{}}}],["binder",{"_index":365,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["binder.ts",{"_index":1887,"title":{},"body":{"classes/EventBinder.html":{},"miscellaneous/variables.html":{}}}],["binder.ts:7",{"_index":1888,"title":{},"body":{"classes/EventBinder.html":{}}}],["bindevent",{"_index":392,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["bindevent(event",{"_index":483,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["bindevent(target",{"_index":401,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["bindevents",{"_index":236,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["bindevents(wrapper",{"_index":274,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["bindheatmapevent",{"_index":742,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["bindheatmapevent(event",{"_index":766,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["bindmapevents",{"_index":2159,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["bindmapevents(event",{"_index":2164,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["bindtoolbarevent",{"_index":1136,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["bindtoolbarevent(event",{"_index":1179,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["boolean",{"_index":260,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/Bounds.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"classes/KeyMap.html":{},"interfaces/LngLat.html":{},"injectables/MapAPILoaderService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/MouseTool.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RidingOptions.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["bootstrap",{"_index":2326,"title":{},"body":{"modules/NgxAmapModule.html":{},"dependencies.html":{},"overview.html":{}}}],["borderweight",{"_index":1379,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/PolylineOptions.html":{},"miscellaneous/variables.html":{}}}],["boundaries",{"_index":1790,"title":{},"body":{"interfaces/District.html":{}}}],["bounds",{"_index":13,"title":{"interfaces/Bounds.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/BezierCurve.html":{},"interfaces/Bounds.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["bounds|polygon",{"_index":1057,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["branches",{"_index":2826,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2952,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2798,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bubble",{"_index":423,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["bugfix",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["bugfix：[amapautocomplete",{"_index":2837,"title":{},"body":{"index.html":{}}}],["building",{"_index":206,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["buildinganimation",{"_index":2185,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["buildingtype",{"_index":207,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["business",{"_index":218,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["businessarea",{"_index":217,"title":{"interfaces/BusinessArea.html":{}},"body":{"interfaces/AddressComponent.html":{},"interfaces/BusinessArea.html":{},"interfaces/ReGeocodePoi.html":{}}}],["businessareas",{"_index":208,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["c",{"_index":1403,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"license.html":{}}}],["c.clearmarkers",{"_index":2273,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["c.getcenter",{"_index":573,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.getextdata",{"_index":576,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.getoptions",{"_index":575,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.getradius",{"_index":574,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.hide",{"_index":566,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.setcenter(lnglat",{"_index":568,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.setextdata(ext",{"_index":571,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.setmap(null",{"_index":2274,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["c.setoptions(opt",{"_index":570,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.setradius(radius",{"_index":569,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["c.show",{"_index":565,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["callback",{"_index":50,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CGeocoder.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Geocoder.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"injectables/MapAPILoaderService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["callbackfn",{"_index":1324,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{},"miscellaneous/typealiases.html":{}}}],["callbackname",{"_index":2015,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["cautocomplete",{"_index":61,"title":{"interfaces/CAutocomplete.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{}}}],["cbeziercurve",{"_index":62,"title":{"interfaces/CBezierCurve.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{}}}],["cbeziercurveeditor",{"_index":63,"title":{"interfaces/CBezierCurveEditor.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["cbounds",{"_index":64,"title":{"interfaces/CBounds.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["ccircle",{"_index":65,"title":{"interfaces/CCircle.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CCircle.html":{},"interfaces/Circle.html":{}}}],["ccircleeditor",{"_index":66,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["ccirclemarker",{"_index":67,"title":{"interfaces/CCircleMarker.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{}}}],["cdistrictsearch",{"_index":68,"title":{"interfaces/CDistrictSearch.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["cdriving",{"_index":69,"title":{"interfaces/CDriving.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["ceditor",{"_index":1372,"title":{"interfaces/CEditor.html":{}},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["cellipse",{"_index":70,"title":{"interfaces/CEllipse.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{}}}],["cellipseeditor",{"_index":71,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["center",{"_index":424,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/District.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/IPoiObject.html":{},"interfaces/MapOptions.html":{},"interfaces/PlaceSearch.html":{},"miscellaneous/variables.html":{}}}],["cgeocoder",{"_index":73,"title":{"interfaces/CGeocoder.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["change",{"_index":435,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["change').subscribe(e",{"_index":902,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["changefilter",{"_index":308,"title":{"classes/ChangeFilter.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"classes/ChangeFilter.html":{}}}],["changefilter(changes",{"_index":1671,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["changefilter.of(changes",{"_index":316,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["changelog",{"_index":2710,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":281,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"classes/ChangeFilter.html":{},"changelog.html":{}}}],["charge",{"_index":2892,"title":{},"body":{"license.html":{}}}],["cheatmap",{"_index":74,"title":{"interfaces/CHeatmap.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["children",{"_index":2416,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["choose",{"_index":247,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["cicon",{"_index":75,"title":{"interfaces/CIcon.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["cinema",{"_index":1675,"title":{"interfaces/Cinema.html":{}},"body":{"interfaces/Cinema.html":{},"interfaces/Poi.html":{}}}],["cinfowindow",{"_index":76,"title":{"interfaces/CInfoWindow.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["circlable",{"_index":1572,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["circle",{"_index":14,"title":{"interfaces/Circle.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CCircle.html":{},"interfaces/CEditor.html":{},"interfaces/Circle.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/Editor.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["circle'},{'name",{"_index":942,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["circle(options",{"_index":996,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["circle.directive",{"_index":2366,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["circle.directive.ts",{"_index":2975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circle.then(m",{"_index":1719,"title":{},"body":{"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{}}}],["circle/amap",{"_index":2365,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["circleeditor",{"_index":15,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"injectables/CircleService.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["circlemarker",{"_index":16,"title":{"interfaces/CircleMarker.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{}}}],["circlemarkerclick",{"_index":436,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["circlemarkerhide",{"_index":437,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["circlemarkeroptions",{"_index":462,"title":{"interfaces/CircleMarkerOptions.html":{}},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{}}}],["circlemarkerservice",{"_index":449,"title":{"injectables/CircleMarkerService.html":{}},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/CircleMarkerService.html":{}}}],["circlemarkershow",{"_index":438,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["circleoptions",{"_index":968,"title":{"interfaces/CircleOptions.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CCircle.html":{},"interfaces/CMouseTool.html":{},"interfaces/Circle.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/MouseTool.html":{}}}],["circleservice",{"_index":1720,"title":{"injectables/CircleService.html":{}},"body":{"injectables/CircleService.html":{}}}],["cities",{"_index":1819,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["city",{"_index":209,"title":{},"body":{"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/CMap.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/SearchResult.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["citycode",{"_index":210,"title":{},"body":{"interfaces/AddressComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Poi.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["cityd",{"_index":2672,"title":{},"body":{"interfaces/TransferOptions.html":{}}}],["cityinfo",{"_index":1732,"title":{"interfaces/CityInfo.html":{}},"body":{"interfaces/CityInfo.html":{},"interfaces/SearchResult.html":{}}}],["citylimit",{"_index":244,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"miscellaneous/variables.html":{}}}],["citylist",{"_index":2552,"title":{},"body":{"interfaces/SearchResult.html":{}}}],["cityname",{"_index":2427,"title":{},"body":{"interfaces/Poi.html":{}}}],["claim",{"_index":2940,"title":{},"body":{"license.html":{}}}],["class",{"_index":313,"title":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"classes/EventBinder.html":{},"classes/KeyMap.html":{},"classes/Utils.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"interfaces/Editor.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["class/amap.bounds",{"_index":2520,"title":{},"body":{"interfaces/RectangleOptions.html":{}}}],["class/amap.icon",{"_index":2292,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{}}}],["class/amap.lng",{"_index":1710,"title":{},"body":{"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/TextOptions.html":{}}}],["class/amap.map",{"_index":1385,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["class/amap.pixel",{"_index":2093,"title":{},"body":{"interfaces/InfoWindowOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{}}}],["class/amap.size",{"_index":2094,"title":{},"body":{"interfaces/InfoWindowOptions.html":{}}}],["class/overlays/amap.marker",{"_index":2250,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/ToolbarOptions.html":{}}}],["class/overlays/amap.polygon",{"_index":2458,"title":{},"body":{"interfaces/PolygonOptions.html":{}}}],["classes",{"_index":391,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"classes/EventBinder.html":{},"classes/KeyMap.html":{},"classes/Utils.html":{},"overview.html":{}}}],["classlist.js",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["clear",{"_index":644,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/IKeyMap.html":{},"interfaces/IPoiObject.html":{},"classes/KeyMap.html":{},"interfaces/MouseTool.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["clearavoidpolygons",{"_index":642,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["clearavoidroad",{"_index":640,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["clearinfowindow",{"_index":1538,"title":{},"body":{"interfaces/CMap.html":{}}}],["clearlimitbounds",{"_index":1524,"title":{},"body":{"interfaces/CMap.html":{}}}],["clearmap",{"_index":1534,"title":{},"body":{"interfaces/CMap.html":{}}}],["clearmarkers",{"_index":1602,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["clickable",{"_index":2284,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["clnglat",{"_index":77,"title":{"interfaces/CLngLat.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["clone",{"_index":2879,"title":{},"body":{"index.html":{}}}],["close",{"_index":816,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CInfoWindow.html":{},"interfaces/Editor.html":{},"interfaces/InfoWindow.html":{},"interfaces/MouseTool.html":{}}}],["close').subscribe(e",{"_index":909,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["close(clear",{"_index":1010,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["closewhenclickmap",{"_index":827,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindowOptions.html":{},"miscellaneous/variables.html":{}}}],["cluster",{"_index":108,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/RenderObject.html":{}}}],["cluster.then(c",{"_index":2272,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["cluster_ngxamapmodule",{"_index":2329,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["cluster_ngxamapmodule_declarations",{"_index":2330,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["cluster_ngxamapmodule_exports",{"_index":2331,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["clusterer",{"_index":126,"title":{},"body":{"interfaces/AMapClass.html":{},"injectables/MarkerClustererService.html":{},"index.html":{}}}],["clusterer'},{'name",{"_index":948,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["clusterer.directive",{"_index":2358,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["clusterer.directive.ts",{"_index":2979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterer.service.ts",{"_index":2257,"title":{},"body":{"injectables/MarkerClustererService.html":{},"miscellaneous/variables.html":{}}}],["clusterer.service.ts:14",{"_index":2266,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:15",{"_index":2265,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:16",{"_index":2259,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:28",{"_index":2260,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:42",{"_index":2264,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.service.ts:49",{"_index":2262,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["clusterer.ts",{"_index":1587,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:11",{"_index":2223,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:12",{"_index":2234,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:13",{"_index":2226,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:14",{"_index":2227,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:15",{"_index":2230,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:16",{"_index":2231,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:17",{"_index":2232,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:18",{"_index":2238,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:19",{"_index":2241,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:20",{"_index":2242,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:21",{"_index":2243,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:22",{"_index":2225,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:23",{"_index":2239,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:24",{"_index":2240,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:25",{"_index":2228,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:26",{"_index":2229,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:27",{"_index":2224,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:28",{"_index":2235,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:29",{"_index":2233,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer.ts:30",{"_index":2236,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["clusterer/amap",{"_index":2357,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["clusterer/marker",{"_index":2256,"title":{},"body":{"injectables/MarkerClustererService.html":{},"miscellaneous/variables.html":{}}}],["clusterstyle",{"_index":107,"title":{"interfaces/ClusterStyle.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/ClusterStyle.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{}}}],["cmap",{"_index":78,"title":{"interfaces/CMap.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMap.html":{}}}],["cmarker",{"_index":79,"title":{"interfaces/CMarker.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarker.html":{}}}],["cmarkerclusterer",{"_index":80,"title":{"interfaces/CMarkerClusterer.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["cmousetool",{"_index":81,"title":{"interfaces/CMouseTool.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["cms",{"_index":451,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["comma",{"_index":2050,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["common",{"_index":1376,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["compat",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["complains",{"_index":979,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["complete",{"_index":248,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/PluginLoaderService.html":{}}}],["component",{"_index":140,"title":{"components/AmapInfoWindowComponent.html":{}},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/Geocode.html":{},"interfaces/ReGeocode.html":{},"classes/Utils.html":{},"index.html":{}}}],["component.ts",{"_index":204,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["component[key",{"_index":2695,"title":{},"body":{"classes/Utils.html":{}}}],["component_template",{"_index":934,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["components",{"_index":801,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"overview.html":{}}}],["components/amap",{"_index":2350,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["components/ngx",{"_index":2345,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["conditions",{"_index":2918,"title":{},"body":{"license.html":{}}}],["config",{"_index":2008,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["connection",{"_index":2948,"title":{},"body":{"license.html":{}}}],["console.error(`[${tag",{"_index":1764,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["console.log('get",{"_index":701,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.log('result",{"_index":706,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.log('status",{"_index":704,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.log(`[${tag",{"_index":1763,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["console.log(data.result.geocodes[0].formattedaddress",{"_index":711,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.log(data.result.geocodes[0].location",{"_index":710,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["console.warn(`[${tag",{"_index":1765,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["const",{"_index":311,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{}}}],["constructor",{"_index":252,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["constructor(@inject(map_api_config",{"_index":2007,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["constructor(_changes",{"_index":1660,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["constructor(autos",{"_index":253,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["constructor(cms",{"_index":448,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["constructor(config",{"_index":2146,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["constructor(el",{"_index":837,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["constructor(hms",{"_index":751,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["constructor(loader",{"_index":2162,"title":{},"body":{"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["constructor(logger",{"_index":2392,"title":{},"body":{"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["constructor(map",{"_index":986,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["constructor(opts",{"_index":370,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["constructor(pixel",{"_index":2065,"title":{},"body":{"injectables/IconService.html":{},"injectables/LabelService.html":{}}}],["constructor(plugins",{"_index":351,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"injectables/AmapMouseToolService.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{}}}],["constructor(private",{"_index":387,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/SizeService.html":{}}}],["constructor(toolbars",{"_index":1157,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["container",{"_index":1499,"title":{},"body":{"interfaces/CMap.html":{}}}],["containertolnglat(pixel",{"_index":1541,"title":{},"body":{"interfaces/CMap.html":{}}}],["contains",{"_index":1426,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["contains(point",{"_index":1430,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["content",{"_index":814,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/ILabel.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/LabelService.html":{},"interfaces/MarkerOptions.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":187,"title":{},"body":{"interfaces/AMapEvent.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["contract",{"_index":2944,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2912,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2895,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2885,"title":{},"body":{"license.html":{}}}],["core",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":1770,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/TransferPlan.html":{}}}],["count",{"_index":1337,"title":{},"body":{"interfaces/AutocompleteResult.html":{},"interfaces/CHeatmap.html":{},"interfaces/CityInfo.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/PoiList.html":{},"interfaces/RenderObject.html":{},"interfaces/RidingResult.html":{},"interfaces/WalkingResult.html":{}}}],["cp_rating",{"_index":1771,"title":{},"body":{"interfaces/Dining.html":{}}}],["cpixel",{"_index":82,"title":{"interfaces/CPixel.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["cplacesearch",{"_index":83,"title":{"interfaces/CPlaceSearch.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["cpolyeditor",{"_index":84,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["cpolygon",{"_index":85,"title":{"interfaces/CPolygon.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CPolygon.html":{},"interfaces/Polygon.html":{}}}],["cpolyline",{"_index":86,"title":{"interfaces/CPolyline.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CPolyline.html":{},"interfaces/Polyline.html":{}}}],["create",{"_index":1393,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["create(options",{"_index":1399,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["created",{"_index":2178,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["createeditor",{"_index":1394,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{}}}],["createeditor(c",{"_index":1401,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{}}}],["createeditor(e",{"_index":1875,"title":{},"body":{"injectables/EllipseService.html":{}}}],["createeditor(p",{"_index":2463,"title":{},"body":{"injectables/PolygonService.html":{},"injectables/PolylineService.html":{}}}],["createeditor(r",{"_index":2525,"title":{},"body":{"injectables/RectangleService.html":{}}}],["createmap",{"_index":2160,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["createmap(el",{"_index":2166,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["createstyle",{"_index":2258,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["createstyle(style",{"_index":2261,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["crectangle",{"_index":87,"title":{"interfaces/CRectangle.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{}}}],["crectangleeditor",{"_index":88,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["criding",{"_index":89,"title":{"interfaces/CRiding.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CRiding.html":{},"interfaces/Riding.html":{}}}],["cross",{"_index":1740,"title":{"interfaces/Cross.html":{}},"body":{"interfaces/Cross.html":{},"interfaces/ReGeocode.html":{}}}],["crosses",{"_index":2503,"title":{},"body":{"interfaces/ReGeocode.html":{}}}],["crs",{"_index":2186,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["csize",{"_index":90,"title":{"interfaces/CSize.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["css",{"_index":2853,"title":{},"body":{"index.html":{}}}],["ctext",{"_index":91,"title":{"interfaces/CText.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["ctoolbar",{"_index":92,"title":{"interfaces/CToolBar.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["ctransfer",{"_index":93,"title":{"interfaces/CTransfer.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["ctruckdriving",{"_index":94,"title":{"interfaces/CTruckDriving.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["cuisines",{"_index":1772,"title":{},"body":{"interfaces/Dining.html":{}}}],["cursor",{"_index":425,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["curve",{"_index":128,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["curve'},{'name",{"_index":940,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["curve.directive",{"_index":2371,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["curve.directive.ts",{"_index":2974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curve.service.ts",{"_index":1390,"title":{},"body":{"injectables/BezierCurveService.html":{},"miscellaneous/variables.html":{}}}],["curve.service.ts:13",{"_index":1409,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:14",{"_index":1407,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:15",{"_index":1398,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:25",{"_index":1400,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:32",{"_index":1405,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:38",{"_index":1406,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.service.ts:46",{"_index":1402,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["curve.ts",{"_index":1341,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{}}}],["curve.ts:10",{"_index":1360,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:11",{"_index":1352,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:12",{"_index":1357,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:13",{"_index":1350,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:14",{"_index":1349,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:15",{"_index":1347,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:16",{"_index":1353,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:17",{"_index":1361,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:18",{"_index":1356,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:19",{"_index":1354,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve.ts:20",{"_index":1348,"title":{},"body":{"interfaces/BezierCurve.html":{}}}],["curve/amap",{"_index":2370,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["curve/bezier",{"_index":1389,"title":{},"body":{"injectables/BezierCurveService.html":{},"miscellaneous/variables.html":{}}}],["curvepath",{"_index":1359,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CBezierCurve.html":{},"miscellaneous/typealiases.html":{}}}],["cwalking",{"_index":95,"title":{"interfaces/CWalking.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CWalking.html":{},"interfaces/Walking.html":{}}}],["d",{"_index":1750,"title":{},"body":{"injectables/DebugLoggerService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{}}}],["d(tag",{"_index":1754,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["damages",{"_index":2941,"title":{},"body":{"license.html":{}}}],["data",{"_index":776,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CHeatmap.html":{},"interfaces/CTransfer.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Transfer.html":{}}}],["data.result",{"_index":707,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["data.result.info",{"_index":708,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["data.status",{"_index":705,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["dataparser",{"_index":1473,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["dataset",{"_index":747,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/Heatmap.html":{}}}],["datatype",{"_index":245,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"interfaces/AutocompleteOptions.html":{},"miscellaneous/variables.html":{}}}],["dblclick",{"_index":439,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["deal",{"_index":2900,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2949,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1988,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["debugloggerservice",{"_index":1747,"title":{"injectables/DebugLoggerService.html":{}},"body":{"injectables/DebugLoggerService.html":{},"modules/NgxAmapModule.html":{}}}],["declarations",{"_index":2325,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["declare",{"_index":366,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["declared",{"_index":976,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["deep",{"_index":2441,"title":{},"body":{"interfaces/Poi.html":{}}}],["deep_src",{"_index":1677,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Hotel.html":{},"interfaces/Scenic.html":{}}}],["deep_type",{"_index":2428,"title":{},"body":{"interfaces/Poi.html":{}}}],["default",{"_index":294,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["defaultlayer",{"_index":2187,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":53,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"injectables/DocumentRef.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{},"injectables/WindowRef.html":{}}}],["delete",{"_index":1973,"title":{},"body":{"interfaces/IKeyMap.html":{},"injectables/IconService.html":{},"classes/KeyMap.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["delete(key",{"_index":1972,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["demo",{"_index":2749,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":2324,"title":{"dependencies.html":{}},"body":{"modules/NgxAmapModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":350,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["destination",{"_index":630,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Riding.html":{},"interfaces/RidingResult.html":{},"interfaces/Transfer.html":{},"interfaces/TransferResult.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["destroy",{"_index":1395,"title":{},"body":{"injectables/BezierCurveService.html":{},"interfaces/CMap.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["destroy(beziercurve",{"_index":1404,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["destroy(circle",{"_index":1715,"title":{},"body":{"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{}}}],["destroy(cluster",{"_index":2263,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["destroy(ellipse",{"_index":1877,"title":{},"body":{"injectables/EllipseService.html":{}}}],["destroy(heatmap",{"_index":1935,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["destroy(infowindow",{"_index":2099,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["destroy(marker",{"_index":2298,"title":{},"body":{"injectables/MarkerService.html":{}}}],["destroy(polygon",{"_index":2466,"title":{},"body":{"injectables/PolygonService.html":{}}}],["destroy(polyline",{"_index":2494,"title":{},"body":{"injectables/PolylineService.html":{}}}],["destroy(rectangle",{"_index":2528,"title":{},"body":{"injectables/RectangleService.html":{}}}],["destroy(text",{"_index":2630,"title":{},"body":{"injectables/TextService.html":{}}}],["destroy(toolbar",{"_index":2652,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["destroymap",{"_index":2161,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["detail",{"_index":1783,"title":{},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Poi.html":{}}}],["detailonamap",{"_index":1078,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["detailonamap(obj",{"_index":1075,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["dining",{"_index":1766,"title":{"interfaces/Dining.html":{}},"body":{"interfaces/Dining.html":{},"interfaces/Poi.html":{}}}],["direction",{"_index":1147,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/Cross.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Road.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":219,"title":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"index.html":{}}}],["directives",{"_index":221,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"overview.html":{}}}],["directives/amap",{"_index":2348,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["discount",{"_index":1781,"title":{"interfaces/Discount.html":{}},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Poi.html":{}}}],["discounts",{"_index":2429,"title":{},"body":{"interfaces/Poi.html":{}}}],["distance",{"_index":1742,"title":{},"body":{"interfaces/Cross.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/LngLat.html":{},"interfaces/Poi.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Road.html":{},"interfaces/Segment.html":{},"interfaces/TMC.html":{},"interfaces/TransferPlan.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{}}}],["distance(lnglat",{"_index":1491,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["distribute",{"_index":2908,"title":{},"body":{"license.html":{}}}],["district",{"_index":115,"title":{"interfaces/District.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/AddressComponent.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveStep.html":{},"modules/NgxAmapModule.html":{},"interfaces/TMC.html":{},"interfaces/Tip.html":{},"interfaces/ViaCity.html":{},"miscellaneous/variables.html":{}}}],["districtlist",{"_index":1791,"title":{},"body":{"interfaces/District.html":{},"interfaces/DistrictSearchResult.html":{}}}],["districts",{"_index":1828,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["districtsearch",{"_index":17,"title":{"interfaces/DistrictSearch.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["districtsearchoptions",{"_index":581,"title":{"interfaces/DistrictSearchOptions.html":{}},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{}}}],["districtsearchresult",{"_index":584,"title":{"interfaces/DistrictSearchResult.html":{}},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchResult.html":{}}}],["districtsearch事件，返回可以被subscribe的observable",{"_index":591,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["document",{"_index":1806,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["documentation",{"_index":2898,"title":{},"body":{"license.html":{}}}],["documentref",{"_index":1799,"title":{"injectables/DocumentRef.html":{}},"body":{"injectables/DocumentRef.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{},"injectables/WindowRef.html":{}}}],["dolocation",{"_index":1137,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["dom",{"_index":804,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["doubleclickzoom",{"_index":2188,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["dragenable",{"_index":2189,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["draggable",{"_index":2285,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["drive",{"_index":1815,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/DrivingResult.html":{}}}],["driveroute",{"_index":1807,"title":{"interfaces/DriveRoute.html":{}},"body":{"interfaces/DriveRoute.html":{},"interfaces/DrivingResult.html":{}}}],["drivestep",{"_index":1814,"title":{"interfaces/DriveStep.html":{}},"body":{"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["driving",{"_index":18,"title":{"interfaces/Driving.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTruckDriving.html":{},"interfaces/Driving.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["driving.service",{"_index":2377,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["driving.service.ts",{"_index":612,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"miscellaneous/variables.html":{}}}],["driving.service.ts:107",{"_index":616,"title":{},"body":{"injectables/AmapDrivingService.html":{}}}],["driving.service.ts:15",{"_index":662,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:22",{"_index":680,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:31",{"_index":668,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:35",{"_index":669,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:41",{"_index":1292,"title":{},"body":{"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:45",{"_index":1293,"title":{},"body":{"classes/AmapTruckDrivingWrapper.html":{}}}],["driving.service.ts:47",{"_index":677,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:51",{"_index":673,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:55",{"_index":675,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{}}}],["driving.service.ts:57",{"_index":1280,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{}}}],["driving.service.ts:59",{"_index":665,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:62",{"_index":1283,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{}}}],["driving.service.ts:63",{"_index":664,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:67",{"_index":663,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:70",{"_index":1282,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{}}}],["driving.service.ts:71",{"_index":666,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:74",{"_index":667,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:78",{"_index":679,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:82",{"_index":671,"title":{},"body":{"classes/AmapDrivingWrapper.html":{}}}],["driving.service.ts:92",{"_index":617,"title":{},"body":{"injectables/AmapDrivingService.html":{}}}],["driving.service.ts:94",{"_index":614,"title":{},"body":{"injectables/AmapDrivingService.html":{}}}],["driving.service.ts:99",{"_index":619,"title":{},"body":{"injectables/AmapDrivingService.html":{}}}],["driving.ts",{"_index":1652,"title":{},"body":{"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["driving.ts:12",{"_index":2685,"title":{},"body":{"interfaces/TruckDriving.html":{}}}],["driving.ts:16",{"_index":2684,"title":{},"body":{"interfaces/TruckDriving.html":{}}}],["driving.ts:17",{"_index":2686,"title":{},"body":{"interfaces/TruckDriving.html":{}}}],["driving/amap",{"_index":611,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["driving/amap.driving",{"_index":133,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["driving/amap.truck",{"_index":134,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["driving/drive",{"_index":165,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["driving/driving",{"_index":168,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["drivingoptions",{"_index":615,"title":{"interfaces/DrivingOptions.html":{}},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{}}}],["drivingresult",{"_index":620,"title":{"interfaces/DrivingResult.html":{}},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTruckDriving.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/TruckDriving.html":{}}}],["driving事件，返回可以被subscribe的observable",{"_index":627,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["dynamic",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1751,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/LoggerService.html":{}}}],["e(tag",{"_index":1757,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["editor",{"_index":1371,"title":{"interfaces/Editor.html":{}},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"miscellaneous/typealiases.html":{}}}],["editor]=\"true",{"_index":2751,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["editoradjust",{"_index":2846,"title":{},"body":{"index.html":{}}}],["editoradjust)等，详见各demo",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["editoroptions]=\"editoroptions",{"_index":2754,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["editors",{"_index":1377,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["editor相关事件emitter，例如：(editoraddnode",{"_index":2757,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["el",{"_index":255,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/MapAPIService.html":{}}}],["element",{"_index":932,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["elementref",{"_index":256,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"components/AmapInfoWindowComponent.html":{}}}],["ellipse",{"_index":19,"title":{"interfaces/Ellipse.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"changelog.html":{},"index.html":{}}}],["ellipse'},{'name",{"_index":945,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["ellipse.directive",{"_index":2373,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["ellipse.directive.ts",{"_index":2976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellipse.then(m",{"_index":1883,"title":{},"body":{"injectables/EllipseService.html":{}}}],["ellipse/amap",{"_index":2372,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["ellipseeditor",{"_index":20,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"injectables/EllipseService.html":{},"miscellaneous/typealiases.html":{}}}],["ellipseoptions",{"_index":1454,"title":{"interfaces/EllipseOptions.html":{}},"body":{"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{}}}],["ellipseservice",{"_index":1871,"title":{"injectables/EllipseService.html":{}},"body":{"injectables/EllipseService.html":{}}}],["email",{"_index":2430,"title":{},"body":{"interfaces/Poi.html":{}}}],["empty",{"_index":1670,"title":{},"body":{"classes/ChangeFilter.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["end",{"_index":1850,"title":{},"body":{"interfaces/DrivingResult.html":{},"interfaces/RidingResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["end_location",{"_index":1820,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["end_time",{"_index":1784,"title":{},"body":{"interfaces/Discount.html":{}}}],["entr_location",{"_index":2431,"title":{},"body":{"interfaces/Poi.html":{}}}],["entries",{"_index":1978,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["entry.key}=${entry.value",{"_index":2056,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["environment_rating",{"_index":1773,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Hotel.html":{}}}],["equals",{"_index":2131,"title":{},"body":{"interfaces/LngLat.html":{},"interfaces/Pixel.html":{}}}],["equals(lnglat",{"_index":1495,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["equals(point",{"_index":1617,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["error",{"_index":249,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["etime",{"_index":1914,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["event",{"_index":21,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"license.html":{}}}],["eventbinder",{"_index":363,"title":{"classes/EventBinder.html":{}},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["eventbinder:7",{"_index":404,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["eventemitter",{"_index":264,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["eventlistener",{"_index":191,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["eventname",{"_index":185,"title":{},"body":{"interfaces/AMapEvent.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/Editor.html":{}}}],["events",{"_index":514,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["example",{"_index":685,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"index.html":{}}}],["exit_location",{"_index":2432,"title":{},"body":{"interfaces/Poi.html":{}}}],["expandzoomrange",{"_index":2190,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":138,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["exportas",{"_index":509,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"changelog.html":{}}}],["exported",{"_index":980,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["exports",{"_index":2328,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["express",{"_index":2928,"title":{},"body":{"license.html":{}}}],["ext",{"_index":497,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["extargs",{"_index":200,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["extdata",{"_index":426,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":368,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"interfaces/CLngLat.html":{},"interfaces/CPixel.html":{},"interfaces/CSize.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"interfaces/LngLat.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/Pixel.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"interfaces/Size.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["extensions",{"_index":1796,"title":{},"body":{"interfaces/DistrictSearchOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["extra",{"_index":513,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["f",{"_index":1570,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["faci_rating",{"_index":1946,"title":{},"body":{"interfaces/Hotel.html":{}}}],["false",{"_index":460,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["features",{"_index":2191,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["ferry",{"_index":1845,"title":{},"body":{"interfaces/DrivingOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{}}}],["files",{"_index":2899,"title":{},"body":{"license.html":{}}}],["fillcolor",{"_index":427,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["fillopacity",{"_index":428,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":310,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["filter((k",{"_index":2042,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["filter.has('city').subscribe(v",{"_index":317,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["filter.has('citylimit').subscribe(v",{"_index":321,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["filter.has('content').subscribe(v",{"_index":893,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["filter.has('direction').subscribe(v",{"_index":1208,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["filter.has('extdata').subscribe(v",{"_index":523,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["filter.has('hidden').subscribe(v",{"_index":529,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["filter.has('isopen').subscribe(v",{"_index":895,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["filter.has('locate').subscribe(v",{"_index":1211,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["filter.has('options').subscribe(v",{"_index":521,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{}}}],["filter.has('radius').subscribe(v",{"_index":525,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["filter.has('ruler').subscribe(v",{"_index":1205,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["filter.has('type').subscribe(v",{"_index":319,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["filter.notempty('center').subscribe(v",{"_index":527,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["filter.notempty('dataset').subscribe(v",{"_index":788,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["filter.notempty('offset').subscribe(v",{"_index":1214,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["filter.notempty('position').subscribe(v",{"_index":896,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["filter.notempty('size').subscribe(v",{"_index":898,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["filter.ts",{"_index":1657,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["filter.ts:11",{"_index":1667,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["filter.ts:22",{"_index":1664,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["filter.ts:4",{"_index":1661,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["filter.ts:7",{"_index":1669,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["first_id",{"_index":1743,"title":{},"body":{"interfaces/Cross.html":{}}}],["first_name",{"_index":1744,"title":{},"body":{"interfaces/Cross.html":{}}}],["fitness",{"_index":2933,"title":{},"body":{"license.html":{}}}],["following",{"_index":2917,"title":{},"body":{"license.html":{}}}],["font",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["formattedaddress",{"_index":1900,"title":{},"body":{"interfaces/Geocode.html":{},"interfaces/ReGeocode.html":{}}}],["forroot",{"_index":2336,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["forroot(mapapiloaderconfig",{"_index":2337,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["free",{"_index":2891,"title":{},"body":{"license.html":{}}}],["function",{"_index":59,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/Text.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":2915,"title":{},"body":{"license.html":{}}}],["general",{"_index":1370,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["geocode",{"_index":147,"title":{"interfaces/Geocode.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderResult.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{}}}],["geocode.ts",{"_index":2502,"title":{},"body":{"interfaces/ReGeocode.html":{}}}],["geocoder",{"_index":22,"title":{"interfaces/Geocoder.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["geocoder.getlocation(this.address",{"_index":699,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service",{"_index":2361,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["geocoder.service.ts",{"_index":683,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"miscellaneous/variables.html":{}}}],["geocoder.service.ts:14",{"_index":732,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:21",{"_index":737,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:30",{"_index":735,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:34",{"_index":734,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:40",{"_index":736,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:44",{"_index":733,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{}}}],["geocoder.service.ts:86",{"_index":715,"title":{},"body":{"injectables/AmapGeocoderService.html":{}}}],["geocoder.service.ts:88",{"_index":712,"title":{},"body":{"injectables/AmapGeocoderService.html":{}}}],["geocoder.service.ts:92",{"_index":714,"title":{},"body":{"injectables/AmapGeocoderService.html":{}}}],["geocoder/address",{"_index":139,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/amap",{"_index":682,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["geocoder/amap.geocoder",{"_index":110,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/business",{"_index":141,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/cross",{"_index":143,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/geocode",{"_index":144,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/geocoder",{"_index":145,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/re",{"_index":146,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoder/road",{"_index":149,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["geocoderesult",{"_index":1459,"title":{"interfaces/GeocodeResult.html":{}},"body":{"interfaces/CGeocoder.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{}}}],["geocoderoptions",{"_index":713,"title":{"interfaces/GeocoderOptions.html":{}},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{}}}],["geocoderresult",{"_index":1909,"title":{"interfaces/GeocoderResult.html":{}},"body":{"interfaces/GeocoderResult.html":{}}}],["geocoder事件，返回可以被subscribe的observable",{"_index":720,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["geocodes",{"_index":1902,"title":{},"body":{"interfaces/GeocodeResult.html":{},"interfaces/GeocoderResult.html":{}}}],["geodesic",{"_index":2487,"title":{},"body":{"interfaces/PolylineOptions.html":{},"miscellaneous/variables.html":{}}}],["geopromise",{"_index":689,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["get(key",{"_index":1971,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["getaddress",{"_index":730,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{},"interfaces/Geocoder.html":{}}}],["getaddress(location",{"_index":725,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["getalloverlays(type",{"_index":1519,"title":{},"body":{"interfaces/CMap.html":{}}}],["getangle",{"_index":1556,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getanimation",{"_index":1550,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getarea",{"_index":1627,"title":{},"body":{"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["getavoidpolygons",{"_index":646,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["getavoidroad",{"_index":648,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["getbounds",{"_index":1342,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CEllipse.html":{},"interfaces/CMap.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["getcenter",{"_index":413,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CMap.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{}}}],["getcity(callback",{"_index":1506,"title":{},"body":{"interfaces/CMap.html":{}}}],["getclickable",{"_index":1552,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getclusterscount",{"_index":1593,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getcontainer",{"_index":1504,"title":{},"body":{"interfaces/CMap.html":{}}}],["getcontent",{"_index":817,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMarker.html":{},"interfaces/InfoWindow.html":{}}}],["getctrllineoptions",{"_index":1375,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["getdataset",{"_index":743,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["getdefaultcursor",{"_index":1511,"title":{},"body":{"interfaces/CMap.html":{}}}],["getdetails",{"_index":1079,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["getdetails(poiid",{"_index":1059,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["getdraggable",{"_index":1563,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getextdata",{"_index":414,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["getfeatures",{"_index":1546,"title":{},"body":{"interfaces/CMap.html":{}}}],["getgridsize",{"_index":1594,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getheight",{"_index":1638,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["geticon",{"_index":1561,"title":{},"body":{"interfaces/CMarker.html":{}}}],["getimagesize",{"_index":1478,"title":{},"body":{"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["getisopen",{"_index":818,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["getlabel",{"_index":1555,"title":{},"body":{"interfaces/CMarker.html":{}}}],["getlabelzindex",{"_index":1507,"title":{},"body":{"interfaces/CMap.html":{}}}],["getlang",{"_index":1067,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["getlat",{"_index":1494,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["getlayers",{"_index":1502,"title":{},"body":{"interfaces/CMap.html":{}}}],["getlength",{"_index":1343,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CPolyline.html":{},"interfaces/Polyline.html":{}}}],["getlimitbounds",{"_index":1508,"title":{},"body":{"interfaces/CMap.html":{}}}],["getlng",{"_index":1493,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["getloaded",{"_index":618,"title":{},"body":{"injectables/AmapDrivingService.html":{},"injectables/AmapRidingService.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{}}}],["getlocation",{"_index":731,"title":{},"body":{"classes/AmapGeocoderWrapper.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/Geocoder.html":{},"interfaces/ToolBar.html":{}}}],["getlocation(address",{"_index":722,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["getmap",{"_index":744,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CText.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/Text.html":{}}}],["getmapstyle",{"_index":1544,"title":{},"body":{"interfaces/CMap.html":{}}}],["getmarkeroptions",{"_index":1374,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["getmarkers",{"_index":1604,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getmaxzoom",{"_index":1595,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getminclustersize",{"_index":1596,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getnative",{"_index":406,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{}}}],["getnativedocument",{"_index":1802,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["getnativewindow",{"_index":1805,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["getnortheast",{"_index":1427,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["getoffset",{"_index":1138,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["getoptions",{"_index":415,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["getoptionsfor",{"_index":2691,"title":{},"body":{"classes/Utils.html":{}}}],["getoptionsfor(component",{"_index":2692,"title":{},"body":{"classes/Utils.html":{}}}],["getpath",{"_index":1344,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{}}}],["getposition",{"_index":819,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/InfoWindow.html":{},"interfaces/Text.html":{}}}],["getradius",{"_index":416,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{}}}],["getresolution(point",{"_index":1512,"title":{},"body":{"interfaces/CMap.html":{}}}],["getrotation",{"_index":1509,"title":{},"body":{"interfaces/CMap.html":{}}}],["getscale(dpi",{"_index":1513,"title":{},"body":{"interfaces/CMap.html":{}}}],["getshadow",{"_index":1582,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getshape",{"_index":1585,"title":{},"body":{"interfaces/CMarker.html":{}}}],["getsize",{"_index":820,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/InfoWindow.html":{},"classes/KeyMap.html":{}}}],["getsouthwest",{"_index":1428,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["getsrcfromconfig",{"_index":2145,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["getsrcfromconfig(callbackname",{"_index":2032,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["getstatus",{"_index":1510,"title":{},"body":{"interfaces/CMap.html":{}}}],["getstyles",{"_index":1597,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["getters",{"_index":572,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["gettext",{"_index":1644,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getting",{"_index":2708,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":1578,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["gettop",{"_index":1580,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getwidth",{"_index":1637,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["getx",{"_index":1615,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["gety",{"_index":1616,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{}}}],["getzindex",{"_index":1558,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["getzoom",{"_index":1501,"title":{},"body":{"interfaces/CMap.html":{}}}],["github",{"_index":2825,"title":{},"body":{"index.html":{}}}],["globals",{"_index":1993,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{}}}],["globals.ts",{"_index":1801,"title":{},"body":{"injectables/DocumentRef.html":{},"injectables/WindowRef.html":{}}}],["globals.ts:12",{"_index":1803,"title":{},"body":{"injectables/DocumentRef.html":{}}}],["globals.ts:5",{"_index":2707,"title":{},"body":{"injectables/WindowRef.html":{}}}],["gradient",{"_index":748,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/HeatmapOptions.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":2890,"title":{},"body":{"license.html":{}}}],["gridmapforeign",{"_index":2192,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["gridsize",{"_index":2245,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["groupbuy",{"_index":1912,"title":{"interfaces/Groupbuy.html":{}},"body":{"interfaces/Groupbuy.html":{},"interfaces/Poi.html":{}}}],["groupbuy_price",{"_index":1915,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["groupbuys",{"_index":2433,"title":{},"body":{"interfaces/Poi.html":{}}}],["handler",{"_index":186,"title":{},"body":{"interfaces/AMapEvent.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["has(key",{"_index":1663,"title":{},"body":{"classes/ChangeFilter.html":{},"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["health_rating",{"_index":1947,"title":{},"body":{"interfaces/Hotel.html":{}}}],["heatmap",{"_index":23,"title":{"interfaces/Heatmap.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/HeatmapService.html":{},"changelog.html":{},"index.html":{}}}],["heatmap'},{'name",{"_index":946,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["heatmap.directive",{"_index":2376,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["heatmap.directive.ts",{"_index":740,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"miscellaneous/variables.html":{}}}],["heatmap.directive.ts:103",{"_index":769,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:22",{"_index":780,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:25",{"_index":762,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:26",{"_index":757,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:27",{"_index":759,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:28",{"_index":763,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:31",{"_index":761,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:32",{"_index":756,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:35",{"_index":758,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:38",{"_index":764,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:40",{"_index":753,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:46",{"_index":773,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:48",{"_index":771,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:65",{"_index":772,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:70",{"_index":765,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:73",{"_index":767,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:77",{"_index":779,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:81",{"_index":778,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:85",{"_index":770,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:90",{"_index":777,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:94",{"_index":775,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.directive.ts:99",{"_index":768,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["heatmap.then(hm",{"_index":1942,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["heatmap/amap",{"_index":739,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["heatmapdata",{"_index":755,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"miscellaneous/typealiases.html":{}}}],["heatmapdataset",{"_index":1469,"title":{"interfaces/HeatmapDataSet.html":{}},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"miscellaneous/typealiases.html":{}}}],["heatmapdataurl",{"_index":1471,"title":{"interfaces/HeatmapDataUrl.html":{}},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"miscellaneous/typealiases.html":{}}}],["heatmaplnglatdata",{"_index":1467,"title":{"interfaces/HeatmapLngLatData.html":{}},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["heatmapoptions",{"_index":760,"title":{"interfaces/HeatmapOptions.html":{}},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{}}}],["heatmapservice",{"_index":752,"title":{"injectables/HeatmapService.html":{}},"body":{"directives/AmapHeatmapDirective.html":{},"injectables/HeatmapService.html":{}}}],["height",{"_index":1640,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/ISize.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TruckDrivingOptions.html":{},"index.html":{}}}],["here",{"_index":977,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["hereby",{"_index":2889,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":429,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["hide",{"_index":417,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["hidedirection",{"_index":1139,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["hidelocation",{"_index":1140,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["hidemarkers",{"_index":1846,"title":{},"body":{"interfaces/DrivingOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["hideruler",{"_index":1141,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["hm.setmap(null",{"_index":1943,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["hms",{"_index":754,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["holders",{"_index":2938,"title":{},"body":{"license.html":{}}}],["hostmarker",{"_index":815,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["hotel",{"_index":1944,"title":{"interfaces/Hotel.html":{}},"body":{"interfaces/Hotel.html":{},"interfaces/Poi.html":{}}}],["html",{"_index":931,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"dependencies.html":{},"index.html":{}}}],["htmldivelement",{"_index":1505,"title":{},"body":{"interfaces/CMap.html":{},"injectables/MapAPIService.html":{}}}],["htmlelement",{"_index":2419,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["https://github.com/rollup/rollup/issues/1048",{"_index":985,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["https://webapi.amap.com/maps",{"_index":2000,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["https或者http",{"_index":2857,"title":{},"body":{"index.html":{}}}],["i'm",{"_index":974,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["i(tag",{"_index":1759,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["i.join",{"_index":2054,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["iclusterstyle",{"_index":1951,"title":{"interfaces/IClusterStyle.html":{}},"body":{"interfaces/IClusterStyle.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/RenderObject.html":{}}}],["icon",{"_index":24,"title":{"interfaces/Icon.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CIcon.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icon'}.imageoffset",{"_index":2081,"title":{},"body":{"injectables/IconService.html":{}}}],["icon'}.imagesize",{"_index":2078,"title":{},"body":{"injectables/IconService.html":{}}}],["icon'}.size",{"_index":2075,"title":{},"body":{"injectables/IconService.html":{}}}],["icon/icon.service",{"_index":2301,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["iconoption",{"_index":2072,"title":{},"body":{"injectables/IconService.html":{}}}],["iconoption.imageoffset",{"_index":2079,"title":{},"body":{"injectables/IconService.html":{}}}],["iconoption.imagesize",{"_index":2076,"title":{},"body":{"injectables/IconService.html":{}}}],["iconoption.size",{"_index":2073,"title":{},"body":{"injectables/IconService.html":{}}}],["iconservice",{"_index":2063,"title":{"injectables/IconService.html":{}},"body":{"injectables/IconService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/TextService.html":{}}}],["id",{"_index":1439,"title":{},"body":{"interfaces/BusinessArea.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Poi.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Road.html":{}}}],["iicon",{"_index":1476,"title":{"interfaces/IIcon.html":{}},"body":{"interfaces/CIcon.html":{},"interfaces/IIcon.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"index.html":{}}}],["ikeymap",{"_index":1959,"title":{"interfaces/IKeyMap.html":{}},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["ilabel",{"_index":1979,"title":{"interfaces/ILabel.html":{}},"body":{"interfaces/ILabel.html":{},"injectables/LabelService.html":{},"interfaces/MarkerOptions.html":{}}}],["ilnglat",{"_index":453,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"injectables/InfoWindowService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{},"miscellaneous/typealiases.html":{}}}],["ilnglat|ilnglat",{"_index":726,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["image",{"_index":1957,"title":{},"body":{"interfaces/IIcon.html":{}}}],["imageoffset",{"_index":1736,"title":{},"body":{"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"injectables/MarkerClustererService.html":{}}}],["imagesize",{"_index":1958,"title":{},"body":{"interfaces/IIcon.html":{},"changelog.html":{}}}],["imapapiloaderconfig",{"_index":1981,"title":{"interfaces/IMapAPILoaderConfig.html":{}},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{}}}],["implements",{"_index":225,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["implied",{"_index":2929,"title":{},"body":{"license.html":{}}}],["import",{"_index":96,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["imports",{"_index":2850,"title":{},"body":{"index.html":{}}}],["included",{"_index":2922,"title":{},"body":{"license.html":{}}}],["including",{"_index":2902,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1962,"title":{},"body":{"interfaces/IKeyMap.html":{}}}],["indoormap",{"_index":2193,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["info.ts",{"_index":1733,"title":{},"body":{"interfaces/CityInfo.html":{}}}],["infowindow",{"_index":25,"title":{"interfaces/InfoWindow.html":{}},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{}}}],["infowindow.close",{"_index":921,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.getcontent",{"_index":927,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.getisopen",{"_index":926,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.getposition",{"_index":928,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.getsize",{"_index":929,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.open(map",{"_index":2111,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["infowindow.setcontent(content",{"_index":922,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.setposition(position",{"_index":923,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.setsize(value",{"_index":925,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindow.then(w",{"_index":2109,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["infowindowoptions",{"_index":882,"title":{"interfaces/InfoWindowOptions.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{}}}],["infowindows",{"_index":840,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["infowindowservice",{"_index":841,"title":{"injectables/InfoWindowService.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/InfoWindowService.html":{}}}],["inherited",{"_index":403,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["inject",{"_index":1990,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["injectable",{"_index":346,"title":{"injectables/AmapAutocompleteService.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"injectables/AmapMouseToolService.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"injectables/WindowRef.html":{}},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"injectables/WindowRef.html":{}}}],["injectables",{"_index":347,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"injectables/AmapMouseToolService.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"injectables/WindowRef.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1991,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["injectiontoken('ngx",{"_index":1996,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":298,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/AutocompleteOptions.html":{}}}],["input[amapautocomplete",{"_index":231,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["input[amapautocomplete]'},{'name",{"_index":937,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["input[autocomplete",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["inputs",{"_index":243,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["install",{"_index":2847,"title":{},"body":{"index.html":{}}}],["instance",{"_index":189,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["instanceof",{"_index":1889,"title":{},"body":{"classes/EventBinder.html":{}}}],["instruction",{"_index":1821,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/Segment.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/MouseTool.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"classes/KeyMap.html":{},"interfaces/LngLat.html":{},"injectables/MapAPILoaderService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/MouseTool.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{}}}],["interface/autocomplete",{"_index":1329,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{}}}],["interface/callback.type",{"_index":1331,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["interface/district",{"_index":1447,"title":{},"body":{"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["interface/driving/driving",{"_index":1451,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["interface/driving/truck",{"_index":1653,"title":{},"body":{"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["interface/geocoder",{"_index":1458,"title":{},"body":{"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{}}}],["interface/icon.interface",{"_index":1477,"title":{},"body":{"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["interface/info",{"_index":1482,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["interface/layers/heatmap",{"_index":1463,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["interface/lng",{"_index":1449,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["interface/map",{"_index":1498,"title":{},"body":{"interfaces/CMap.html":{}}}],["interface/marker",{"_index":1589,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["interface/overlays/bezier",{"_index":1362,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{}}}],["interface/overlays/circle",{"_index":1441,"title":{},"body":{"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CMouseTool.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/MouseTool.html":{}}}],["interface/overlays/ellipse",{"_index":1455,"title":{},"body":{"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{}}}],["interface/overlays/marker",{"_index":1548,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["interface/overlays/polygon",{"_index":1611,"title":{},"body":{"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["interface/overlays/polyline",{"_index":1612,"title":{},"body":{"interfaces/CMouseTool.html":{},"interfaces/CPolyline.html":{},"interfaces/MouseTool.html":{},"interfaces/Polyline.html":{}}}],["interface/overlays/rectangle",{"_index":1631,"title":{},"body":{"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{}}}],["interface/overlays/text",{"_index":1643,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["interface/pixel.interface",{"_index":1614,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/Pixel.html":{},"interfaces/ToolbarOptions.html":{}}}],["interface/place",{"_index":1620,"title":{},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["interface/riding/riding",{"_index":1634,"title":{},"body":{"interfaces/CRiding.html":{},"interfaces/Riding.html":{}}}],["interface/size.interface",{"_index":1636,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/Size.html":{}}}],["interface/toolbar",{"_index":1648,"title":{},"body":{"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["interface/transfer/transfer",{"_index":1650,"title":{},"body":{"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["interface/walking/walking",{"_index":1655,"title":{},"body":{"interfaces/CWalking.html":{},"interfaces/Walking.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/MouseTool.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"overview.html":{}}}],["intro",{"_index":1678,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Hotel.html":{},"interfaces/Scenic.html":{}}}],["ipixel",{"_index":849,"title":{"interfaces/IPixel.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CPixel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IPixel.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"injectables/TextService.html":{},"interfaces/ToolbarOptions.html":{},"index.html":{}}}],["ipoiobject",{"_index":1623,"title":{"interfaces/IPoiObject.html":{}},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["isaveragecenter",{"_index":1607,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["iscustom",{"_index":828,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindowOptions.html":{},"miscellaneous/variables.html":{}}}],["ishotspot",{"_index":2194,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["isize",{"_index":853,"title":{"interfaces/ISize.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CSize.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ISize.html":{},"injectables/MarkerClustererService.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{}}}],["isopen",{"_index":829,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["isopenchange",{"_index":833,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["isoutline",{"_index":1380,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":984,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["issue#23",{"_index":2733,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["issue#40",{"_index":2717,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["istop",{"_index":2618,"title":{},"body":{"interfaces/Text.html":{}}}],["jogenable",{"_index":2195,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":2049,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["js",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["jsonp",{"_index":1474,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["jsonp格式数据的服务地址url",{"_index":1472,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["k",{"_index":1571,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"interfaces/Text.html":{}}}],["key",{"_index":1665,"title":{},"body":{"classes/ChangeFilter.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"classes/KeyMap.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["keyboardenable",{"_index":2196,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":1964,"title":{"classes/KeyMap.html":{}},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["keys",{"_index":1974,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{},"classes/Utils.html":{}}}],["keys.foreach(key",{"_index":2694,"title":{},"body":{"classes/Utils.html":{}}}],["keyword",{"_index":1096,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/PlaceSearch.html":{}}}],["keywordlist",{"_index":2553,"title":{},"body":{"interfaces/SearchResult.html":{}}}],["kind",{"_index":2927,"title":{},"body":{"license.html":{}}}],["label",{"_index":2128,"title":{},"body":{"injectables/LabelService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"miscellaneous/variables.html":{}}}],["label'}.offset",{"_index":2130,"title":{},"body":{"injectables/LabelService.html":{}}}],["label.interface",{"_index":2291,"title":{},"body":{"interfaces/MarkerOptions.html":{}}}],["label/label.service",{"_index":2302,"title":{},"body":{"injectables/MarkerService.html":{}}}],["labelservice",{"_index":2124,"title":{"injectables/LabelService.html":{}},"body":{"injectables/LabelService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{}}}],["labelzindex",{"_index":2197,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":1101,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/MapOptions.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"miscellaneous/variables.html":{}}}],["lat",{"_index":99,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/Cross.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RideStep.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolBar.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["lat.interface",{"_index":1450,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["lat.interface.ts",{"_index":2968,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lat.ts",{"_index":1487,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["lat.ts:3",{"_index":2136,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:4",{"_index":2132,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:5",{"_index":2135,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:6",{"_index":2134,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:7",{"_index":2133,"title":{},"body":{"interfaces/LngLat.html":{}}}],["lat.ts:8",{"_index":2137,"title":{},"body":{"interfaces/LngLat.html":{}}}],["layers",{"_index":164,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["layers/amap.heatmap",{"_index":132,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["lcode",{"_index":1829,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["leaveat",{"_index":1265,"title":{},"body":{"classes/AmapTransferWrapper.html":{},"interfaces/Transfer.html":{}}}],["leaveat(time",{"_index":1259,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["legend",{"_index":930,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["level",{"_index":607,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CMap.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/Geocode.html":{},"interfaces/Scenic.html":{}}}],["liability",{"_index":2942,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2939,"title":{},"body":{"license.html":{}}}],["lib/.ng_pkg_build/ngx",{"_index":981,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["license",{"_index":2856,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":288,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/PlaceSearch.html":{}}}],["limitation",{"_index":2903,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2930,"title":{},"body":{"license.html":{}}}],["linejoin",{"_index":2488,"title":{},"body":{"interfaces/PolylineOptions.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":160,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/SearchResult.html":{}}}],["list.ts",{"_index":2443,"title":{},"body":{"interfaces/PoiList.html":{}}}],["listener",{"_index":198,"title":{},"body":{"interfaces/AMapEvent.html":{},"classes/EventBinder.html":{}}}],["listenerpromise",{"_index":1891,"title":{},"body":{"classes/EventBinder.html":{}}}],["listenerpromise.then(listener",{"_index":1896,"title":{},"body":{"classes/EventBinder.html":{}}}],["litestyle",{"_index":1148,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["lng",{"_index":1468,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/CLngLat.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/LngLat.html":{}}}],["lnglat",{"_index":26,"title":{"interfaces/LngLat.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/Cross.html":{},"interfaces/District.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"interfaces/Geocode.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RideStep.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolBar.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{},"index.html":{}}}],["lnglattocontainer(lnglat",{"_index":1542,"title":{},"body":{"interfaces/CMap.html":{}}}],["lnglattopixel(lnglat",{"_index":1540,"title":{},"body":{"interfaces/CMap.html":{}}}],["lnglat|array",{"_index":1492,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["lnglat|ilnglat",{"_index":567,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CEllipse.html":{},"interfaces/CPolygon.html":{},"interfaces/CRectangle.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["lnglat|number",{"_index":1442,"title":{},"body":{"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/InfoWindow.html":{},"interfaces/Text.html":{}}}],["load",{"_index":2012,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/PluginLoaderService.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["load(name",{"_index":2422,"title":{},"body":{"injectables/PluginLoaderService.html":{}}}],["loaded",{"_index":613,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["loadeditor",{"_index":1396,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{}}}],["loader",{"_index":1998,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{},"dependencies.html":{}}}],["loader.service",{"_index":362,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{}}}],["loader.service.ts",{"_index":1985,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/PluginLoaderService.html":{},"miscellaneous/variables.html":{}}}],["loader.service.ts:10",{"_index":2421,"title":{},"body":{"injectables/PluginLoaderService.html":{}}}],["loader.service.ts:14",{"_index":2423,"title":{},"body":{"injectables/PluginLoaderService.html":{}}}],["loader.service.ts:16",{"_index":2155,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:18",{"_index":2151,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:19",{"_index":2152,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:20",{"_index":2150,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:21",{"_index":2153,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:22",{"_index":2154,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:23",{"_index":2147,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:34",{"_index":2149,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader.service.ts:60",{"_index":2148,"title":{},"body":{"injectables/MapAPILoaderService.html":{}}}],["loader/map",{"_index":1984,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"miscellaneous/variables.html":{}}}],["loader/plugin",{"_index":361,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":2014,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/PluginLoaderService.html":{}}}],["localhost:8080npm",{"_index":2882,"title":{},"body":{"index.html":{}}}],["locate",{"_index":1149,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":702,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/BusinessArea.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/Cross.html":{},"interfaces/Geocode.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Poi.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Road.html":{}}}],["locationmarker",{"_index":1150,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":838,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/SizeService.html":{}}}],["logger.service",{"_index":2344,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["logger.service.ts",{"_index":1749,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:12",{"_index":1758,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:16",{"_index":1762,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:20",{"_index":1756,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:4",{"_index":1753,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger.service.ts:8",{"_index":1760,"title":{},"body":{"injectables/DebugLoggerService.html":{}}}],["logger/logger.service",{"_index":1994,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/SizeService.html":{}}}],["loggerservice",{"_index":839,"title":{"injectables/LoggerService.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/SizeService.html":{}}}],["lowest_price",{"_index":1948,"title":{},"body":{"interfaces/Hotel.html":{}}}],["m.setmap(null",{"_index":1419,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{}}}],["map",{"_index":27,"title":{},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/DrivingOptions.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RidingOptions.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{},"index.html":{}}}],["map((entry",{"_index":2055,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["map((k",{"_index":2048,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["map.addcontrol(toolbar",{"_index":2659,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["map.clearmap",{"_index":2180,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["map.destroy",{"_index":2181,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["map.map",{"_index":1414,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["map.removecontrol(t",{"_index":2661,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["map.ts",{"_index":1961,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["map.ts:1",{"_index":1963,"title":{},"body":{"interfaces/IKeyMap.html":{}}}],["map.ts:11",{"_index":2121,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:20",{"_index":2118,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:24",{"_index":2116,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:35",{"_index":2119,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:39",{"_index":2115,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:44",{"_index":2120,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:48",{"_index":2122,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:52",{"_index":2117,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:6",{"_index":2113,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:7",{"_index":2114,"title":{},"body":{"classes/KeyMap.html":{}}}],["map.ts:9",{"_index":2123,"title":{},"body":{"classes/KeyMap.html":{}}}],["map_api_config",{"_index":1995,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["mapapiloaderconfig",{"_index":2339,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["mapapiloaderconfig.debug",{"_index":2384,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["mapapiloaderservice",{"_index":1997,"title":{"injectables/MapAPILoaderService.html":{}},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{}}}],["mapapiservice",{"_index":1397,"title":{"injectables/MapAPIService.html":{}},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["mapoptions",{"_index":1497,"title":{"interfaces/MapOptions.html":{}},"body":{"interfaces/CMap.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{}}}],["mapstyle",{"_index":2198,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["marker",{"_index":28,"title":{},"body":{"interfaces/AMapClass.html":{},"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/RenderObject.html":{},"interfaces/ToolbarOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["marker'},{'name",{"_index":943,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["marker(options",{"_index":990,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["marker.directive",{"_index":2349,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["marker.directive.ts",{"_index":410,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"miscellaneous/variables.html":{}}}],["marker.directive.ts:112",{"_index":484,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:117",{"_index":503,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:121",{"_index":490,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:126",{"_index":494,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:130",{"_index":502,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:134",{"_index":499,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:138",{"_index":496,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:143",{"_index":486,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:147",{"_index":489,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:151",{"_index":488,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:155",{"_index":487,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:29",{"_index":505,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:32",{"_index":468,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:33",{"_index":454,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:34",{"_index":452,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:35",{"_index":455,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:36",{"_index":464,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:37",{"_index":465,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:38",{"_index":466,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:39",{"_index":467,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:40",{"_index":457,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:41",{"_index":459,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:42",{"_index":456,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:45",{"_index":463,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:48",{"_index":461,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:51",{"_index":470,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:52",{"_index":478,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:53",{"_index":473,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:54",{"_index":479,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:55",{"_index":471,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:56",{"_index":472,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:57",{"_index":474,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:58",{"_index":477,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:59",{"_index":476,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:60",{"_index":475,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:61",{"_index":469,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:62",{"_index":482,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:63",{"_index":481,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:64",{"_index":480,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:66",{"_index":504,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:67",{"_index":450,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:73",{"_index":491,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:91",{"_index":492,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.directive.ts:96",{"_index":485,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.getposition",{"_index":919,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["marker.service",{"_index":508,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["marker.service.ts",{"_index":1712,"title":{},"body":{"injectables/CircleMarkerService.html":{},"miscellaneous/variables.html":{}}}],["marker.service.ts:11",{"_index":1717,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["marker.service.ts:12",{"_index":1713,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["marker.service.ts:21",{"_index":1714,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["marker.service.ts:28",{"_index":1716,"title":{},"body":{"injectables/CircleMarkerService.html":{}}}],["marker.then(m",{"_index":2310,"title":{},"body":{"injectables/MarkerService.html":{}}}],["marker.ts",{"_index":1444,"title":{},"body":{"interfaces/CCircleMarker.html":{},"interfaces/CircleMarker.html":{}}}],["marker.ts:10",{"_index":1703,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:11",{"_index":1698,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:12",{"_index":1707,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:13",{"_index":1701,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:14",{"_index":1706,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:15",{"_index":1700,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:16",{"_index":1702,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:17",{"_index":1708,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:18",{"_index":1705,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:19",{"_index":1704,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker.ts:20",{"_index":1699,"title":{},"body":{"interfaces/CircleMarker.html":{}}}],["marker/amap",{"_index":409,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["marker/circle",{"_index":507,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/CircleMarkerService.html":{},"miscellaneous/variables.html":{}}}],["markerclusterer",{"_index":29,"title":{"interfaces/MarkerClusterer.html":{}},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{}}}],["markerclustereroptions",{"_index":1588,"title":{"interfaces/MarkerClustererOptions.html":{}},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/RenderObject.html":{}}}],["markerclustererservice",{"_index":2254,"title":{"injectables/MarkerClustererService.html":{}},"body":{"injectables/MarkerClustererService.html":{}}}],["markeroptions",{"_index":969,"title":{"interfaces/MarkerOptions.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMarker.html":{},"interfaces/CMouseTool.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"index.html":{}}}],["markers",{"_index":1590,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["markerservice",{"_index":2293,"title":{"injectables/MarkerService.html":{}},"body":{"injectables/MarkerService.html":{}}}],["markershape",{"_index":1584,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/MarkerOptions.html":{}}}],["marker在没有position",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["master",{"_index":2827,"title":{},"body":{"index.html":{}}}],["matching",{"_index":176,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1470,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["maxzoom",{"_index":2246,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["measurearea",{"_index":1021,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{},"interfaces/MouseTool.html":{}}}],["measurearea(options",{"_index":1004,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["merchantability",{"_index":2932,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2906,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":229,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["method",{"_index":1028,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["methods",{"_index":45,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"injectables/DocumentRef.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{},"injectables/WindowRef.html":{}}}],["minclustersize",{"_index":2247,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2960,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2884,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2905,"title":{},"body":{"license.html":{}}}],["module",{"_index":2321,"title":{"modules/NgxAmapModule.html":{}},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["modules",{"_index":2323,"title":{"modules.html":{}},"body":{"modules/NgxAmapModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":2340,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["mouse",{"_index":961,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["mousedown",{"_index":440,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["mouseout",{"_index":441,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["mouseover",{"_index":442,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["mousetool",{"_index":30,"title":{"interfaces/MouseTool.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["mouseup",{"_index":443,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["movealong",{"_index":2572,"title":{},"body":{"interfaces/Text.html":{}}}],["movealong(path",{"_index":1567,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["moveto",{"_index":2573,"title":{},"body":{"interfaces/Text.html":{}}}],["moveto(lnglat",{"_index":1573,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["name",{"_index":56,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CPlaceSearch.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"injectables/DebugLoggerService.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/IPoiObject.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Road.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/Walking.html":{}}}],["native",{"_index":374,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["neighborhood",{"_index":211,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["neighborhoodtype",{"_index":212,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["new",{"_index":314,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"interfaces/Geocoder.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"interfaces/LngLat.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["new(map",{"_index":1464,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["ngmodule",{"_index":2341,"title":{},"body":{"modules/NgxAmapModule.html":{},"index.html":{}}}],["ngonchanges",{"_index":237,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ngonchanges(changes",{"_index":278,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ngondestroy",{"_index":238,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ngoninit",{"_index":239,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ngx",{"_index":688,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"components/AmapInfoWindowComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["ngxamapapiloader",{"_index":2016,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["ngxamapcomponent",{"_index":936,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"overview.html":{}}}],["ngxamapmodule",{"_index":2322,"title":{"modules/NgxAmapModule.html":{}},"body":{"modules/NgxAmapModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxamapmodule.forroot",{"_index":2851,"title":{},"body":{"index.html":{}}}],["ngxamapmodule的forroot()方法设置ngx",{"_index":2855,"title":{},"body":{"index.html":{}}}],["nightflag",{"_index":2673,"title":{},"body":{"interfaces/TransferOptions.html":{}}}],["nightline",{"_index":2677,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["noiplocate",{"_index":1151,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":2936,"title":{},"body":{"license.html":{}}}],["noob9527",{"_index":2745,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["northeast",{"_index":1424,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["notempty",{"_index":1658,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["notempty(key",{"_index":1666,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["notice",{"_index":2920,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2822,"title":{},"body":{"index.html":{}}}],["null",{"_index":1011,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/ChangeFilter.html":{},"classes/EventBinder.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"classes/Utils.html":{}}}],["number",{"_index":458,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CHeatmap.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CTruckDriving.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Discount.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/EllipseOptions.html":{},"interfaces/GeocodeResult.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/InfoWindow.html":{},"classes/KeyMap.html":{},"interfaces/LngLat.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/WalkingResult.html":{}}}],["number[][]|lnglat",{"_index":1568,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["obj",{"_index":672,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Text.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["object",{"_index":2252,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["object.create(null",{"_index":1965,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["object.keys(queryparams",{"_index":2041,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["object.keys(this._map",{"_index":1975,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["object.keys(this._map).map(key",{"_index":1977,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["observable",{"_index":359,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["observable.create(observer",{"_index":1890,"title":{},"body":{"classes/EventBinder.html":{}}}],["observer.next(e",{"_index":1895,"title":{},"body":{"classes/EventBinder.html":{}}}],["obtaining",{"_index":2894,"title":{},"body":{"license.html":{}}}],["of()'方法可以得到promise",{"_index":684,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["of(changes",{"_index":1668,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["of(map",{"_index":965,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["of(opts",{"_index":355,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["of(value",{"_index":1674,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["off(eventname",{"_index":1365,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["offset",{"_index":830,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{},"interfaces/ILabel.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["offset(w",{"_index":1489,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["ok",{"_index":709,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["on(event",{"_index":377,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["on(eventname",{"_index":1367,"title":{},"body":{"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["onchanges",{"_index":226,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["ondestroy",{"_index":228,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["oninit",{"_index":227,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["opacity",{"_index":749,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/HeatmapOptions.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":821,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{}}}],["open').subscribe(e",{"_index":905,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["open(infowindow",{"_index":2101,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["open(map",{"_index":1483,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["open(position",{"_index":868,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["openingtime",{"_index":1679,"title":{},"body":{"interfaces/Cinema.html":{}}}],["opentime",{"_index":1774,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Scenic.html":{}}}],["opentime_gdf",{"_index":1680,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Scenic.html":{}}}],["opt",{"_index":500,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["optional",{"_index":58,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/ClusterStyle.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{}}}],["options",{"_index":323,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{}}}],["options).size",{"_index":2071,"title":{},"body":{"injectables/IconService.html":{}}}],["options.content",{"_index":2129,"title":{},"body":{"injectables/LabelService.html":{}}}],["options.height",{"_index":2569,"title":{},"body":{"injectables/SizeService.html":{}}}],["options.icon",{"_index":2303,"title":{},"body":{"injectables/MarkerService.html":{}}}],["options.input",{"_index":325,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["options.interface",{"_index":1330,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/IPoiObject.html":{},"interfaces/InfoWindow.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MouseTool.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["options.interface.ts",{"_index":1334,"title":{},"body":{"interfaces/AutocompleteOptions.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/InfoWindowOptions.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/RenderObject.html":{},"interfaces/RidingOptions.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{},"miscellaneous/typealiases.html":{}}}],["options.label",{"_index":2307,"title":{},"body":{"injectables/MarkerService.html":{}}}],["options.map",{"_index":1416,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{}}}],["options.offset",{"_index":2104,"title":{},"body":{"injectables/InfoWindowService.html":{},"injectables/MarkerService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["options.shadow",{"_index":2305,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["options.size",{"_index":2106,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["options.styles",{"_index":2268,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["options.styles.map(style",{"_index":2269,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["options.y",{"_index":2399,"title":{},"body":{"injectables/PixelService.html":{}}}],["options[key",{"_index":2696,"title":{},"body":{"classes/Utils.html":{}}}],["opts",{"_index":357,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"injectables/BezierCurveService.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Ellipse.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/IPoiObject.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Riding.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["ordering_app_url",{"_index":1775,"title":{},"body":{"interfaces/Dining.html":{}}}],["ordering_wap_url",{"_index":1776,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Scenic.html":{}}}],["ordering_web_url",{"_index":1777,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Scenic.html":{}}}],["orientation",{"_index":1822,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["origin",{"_index":670,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/DrivingResult.html":{},"interfaces/Riding.html":{},"interfaces/RidingResult.html":{},"interfaces/Transfer.html":{},"interfaces/TransferResult.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["original_price",{"_index":1916,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["otherwise",{"_index":2946,"title":{},"body":{"license.html":{}}}],["out",{"_index":2333,"title":{},"body":{"modules/NgxAmapModule.html":{},"license.html":{},"overview.html":{}}}],["outlinecolor",{"_index":1381,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/DrivingOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":299,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["outputs",{"_index":246,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["overlays/amap.bezier",{"_index":127,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.circle",{"_index":123,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.ellipse",{"_index":129,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.marker",{"_index":120,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["overlays/amap.polygon",{"_index":122,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/Editor.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["overlays/amap.polyline",{"_index":121,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.rectangle",{"_index":130,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{}}}],["overlays/amap.text",{"_index":124,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["override",{"_index":512,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{}}}],["overview",{"_index":2953,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":2465,"title":{},"body":{"injectables/PolygonService.html":{},"injectables/PolylineService.html":{}}}],["p.setdataset(data",{"_index":797,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["p.setoptions(opt",{"_index":796,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["package",{"_index":2790,"title":{"dependencies.html":{}},"body":{}}],["pageindex",{"_index":1103,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/PoiList.html":{}}}],["pagesize",{"_index":1104,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/PoiList.html":{}}}],["panby(x",{"_index":1531,"title":{},"body":{"interfaces/CMap.html":{}}}],["panel",{"_index":1847,"title":{},"body":{"interfaces/DrivingOptions.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/WalkingOptions.html":{}}}],["panto(position",{"_index":1530,"title":{},"body":{"interfaces/CMap.html":{}}}],["param",{"_index":376,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{}}}],["params",{"_index":2040,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["parking",{"_index":1681,"title":{},"body":{"interfaces/Cinema.html":{}}}],["particular",{"_index":2934,"title":{},"body":{"license.html":{}}}],["path",{"_index":674,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CTruckDriving.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TransferPlan.html":{},"interfaces/TruckDriving.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"miscellaneous/variables.html":{}}}],["pausemove",{"_index":1575,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["pcode",{"_index":2434,"title":{},"body":{"interfaces/Poi.html":{}}}],["permission",{"_index":2888,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2913,"title":{},"body":{"license.html":{}}}],["person",{"_index":2893,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2914,"title":{},"body":{"license.html":{}}}],["photo",{"_index":1684,"title":{"interfaces/Photo.html":{}},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Hotel.html":{},"interfaces/Photo.html":{},"interfaces/Scenic.html":{}}}],["photos",{"_index":1682,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/Hotel.html":{},"interfaces/Scenic.html":{}}}],["pitch",{"_index":2199,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["pitchenable",{"_index":2200,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["pixel",{"_index":31,"title":{"interfaces/Pixel.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPixel.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/ClusterStyle.html":{},"injectables/IconService.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{}}}],["pixel.interface",{"_index":1955,"title":{},"body":{"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{}}}],["pixel.x",{"_index":2400,"title":{},"body":{"injectables/PixelService.html":{}}}],["pixel.y",{"_index":2401,"title":{},"body":{"injectables/PixelService.html":{}}}],["pixel/pixel.service",{"_index":2068,"title":{},"body":{"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["pixels",{"_index":2649,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["pixelservice",{"_index":1159,"title":{"injectables/PixelService.html":{}},"body":{"directives/AmapToolBarDirective.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["pixeltolnglat(pixel",{"_index":1539,"title":{},"body":{"interfaces/CMap.html":{}}}],["place",{"_index":112,"title":{},"body":{"interfaces/AMapClass.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/DrivingResult.html":{},"modules/NgxAmapModule.html":{},"interfaces/RidingResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{},"miscellaneous/variables.html":{}}}],["placesearch",{"_index":32,"title":{"interfaces/PlaceSearch.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["placesearchoptions",{"_index":1043,"title":{"interfaces/PlaceSearchOptions.html":{}},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{}}}],["placesearch事件，返回可以被subscribe的observable",{"_index":1051,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["plan",{"_index":170,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/TransferResult.html":{}}}],["plan.ts",{"_index":2676,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["plans",{"_index":2683,"title":{},"body":{"interfaces/TransferResult.html":{}}}],["plugin",{"_index":46,"title":{},"body":{"interfaces/AMapClass.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{}}}],["plugin(name",{"_index":47,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMap.html":{}}}],["pluginloaderservice",{"_index":352,"title":{"injectables/PluginLoaderService.html":{}},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"modules/NgxAmapModule.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{}}}],["plugins",{"_index":354,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/ToolBarService.html":{}}}],["pname",{"_index":2435,"title":{},"body":{"interfaces/Poi.html":{}}}],["poi",{"_index":148,"title":{"interfaces/Poi.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"interfaces/DrivingResult.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/ReGeocode.html":{},"interfaces/RidingResult.html":{},"interfaces/SearchResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["poi.ts",{"_index":2506,"title":{},"body":{"interfaces/ReGeocodePoi.html":{}}}],["poiid",{"_index":1090,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["poilist",{"_index":2442,"title":{"interfaces/PoiList.html":{}},"body":{"interfaces/PoiList.html":{},"interfaces/SearchResult.html":{}}}],["point",{"_index":1432,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/Circle.html":{},"interfaces/Ellipse.html":{},"interfaces/Pixel.html":{},"interfaces/Polygon.html":{},"interfaces/Rectangle.html":{}}}],["points",{"_index":1452,"title":{},"body":{"interfaces/CDriving.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["poionamap",{"_index":1080,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["poionamap(obj",{"_index":1070,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["pois",{"_index":2444,"title":{},"body":{"interfaces/PoiList.html":{},"interfaces/ReGeocode.html":{}}}],["policy",{"_index":678,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/DriveRoute.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/RidingOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["polyeditor",{"_index":33,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"miscellaneous/typealiases.html":{}}}],["polygon",{"_index":34,"title":{"interfaces/Polygon.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/Editor.html":{},"interfaces/IPoiObject.html":{},"interfaces/MouseTool.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"changelog.html":{},"index.html":{}}}],["polygon'},{'name",{"_index":951,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["polygon(options",{"_index":994,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["polygon.directive",{"_index":2355,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["polygon.directive.ts",{"_index":2980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polygon.then(m",{"_index":2472,"title":{},"body":{"injectables/PolygonService.html":{}}}],["polygon/amap",{"_index":2354,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["polygonoptions",{"_index":970,"title":{"interfaces/PolygonOptions.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPolygon.html":{},"interfaces/MouseTool.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{}}}],["polygonpath",{"_index":1625,"title":{},"body":{"interfaces/CPolygon.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["polygonservice",{"_index":2459,"title":{"injectables/PolygonService.html":{}},"body":{"injectables/PolygonService.html":{}}}],["polyline",{"_index":35,"title":{"interfaces/Polyline.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CPolyline.html":{},"interfaces/Editor.html":{},"interfaces/MouseTool.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"changelog.html":{},"index.html":{}}}],["polyline'},{'name",{"_index":953,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["polyline(options",{"_index":992,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["polyline.directive",{"_index":2353,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["polyline.directive.ts",{"_index":2981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polyline.then(m",{"_index":2500,"title":{},"body":{"injectables/PolylineService.html":{}}}],["polyline/amap",{"_index":2352,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["polylineoptions",{"_index":971,"title":{"interfaces/PolylineOptions.html":{}},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPolyline.html":{},"interfaces/MouseTool.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{}}}],["polylineservice",{"_index":2489,"title":{"injectables/PolylineService.html":{}},"body":{"injectables/PolylineService.html":{}}}],["portions",{"_index":2924,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1484,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["position",{"_index":831,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["postcode",{"_index":2436,"title":{},"body":{"interfaces/Poi.html":{}}}],["price",{"_index":2548,"title":{},"body":{"interfaces/Scenic.html":{}}}],["private",{"_index":232,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["projects/.../amap",{"_index":2973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../amap.editor.ts",{"_index":2964,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../amap.heatmap.ts",{"_index":2966,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../amap.polygon.ts",{"_index":2969,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../bezier",{"_index":2965,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../callback.type.ts",{"_index":2963,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../circle",{"_index":2986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../circle.service.ts",{"_index":2985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ellipse.service.ts",{"_index":2987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../event",{"_index":2984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../heatmap.service.ts",{"_index":2988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../icon.service.ts",{"_index":2989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../info",{"_index":2990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../label.service.ts",{"_index":2991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../lng",{"_index":2967,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../map",{"_index":2992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../marker",{"_index":2995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../marker.service.ts",{"_index":2994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ngx",{"_index":2977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pixel.service.ts",{"_index":2996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../plugin",{"_index":2997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polygon.service.ts",{"_index":2998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polyline.service.ts",{"_index":2999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../rectangle.service.ts",{"_index":3000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../size.service.ts",{"_index":3001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../text.service.ts",{"_index":2993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../toolbar.service.ts",{"_index":3002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":291,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["promise((resolve",{"_index":2026,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["promise(resolve",{"_index":380,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/Cinema.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"injectables/IconService.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Photo.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDrivingOptions.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{}}}],["property",{"_index":511,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CMap.html":{}}}],["provide",{"_index":2381,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["provided",{"_index":2925,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1785,"title":{},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{}}}],["providers",{"_index":2327,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["province",{"_index":213,"title":{},"body":{"interfaces/AddressComponent.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["public",{"_index":563,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["publish",{"_index":2907,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2935,"title":{},"body":{"license.html":{}}}],["queryparams",{"_index":2036,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["queryparams[k",{"_index":2043,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["queryparams[k].length",{"_index":2047,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["r",{"_index":2527,"title":{},"body":{"injectables/RectangleService.html":{}}}],["radius",{"_index":430,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"miscellaneous/variables.html":{}}}],["railway_distance",{"_index":2678,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["raiseondrag",{"_index":2286,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["rating",{"_index":1683,"title":{},"body":{"interfaces/Cinema.html":{},"interfaces/Dining.html":{},"interfaces/Hotel.html":{},"interfaces/Scenic.html":{}}}],["raw",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":1461,"title":{},"body":{"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderResult.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodeResult.html":{}}}],["ready",{"_index":250,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["recommend",{"_index":1778,"title":{},"body":{"interfaces/Dining.html":{}}}],["recommened",{"_index":2549,"title":{},"body":{"interfaces/Scenic.html":{}}}],["rectangle",{"_index":36,"title":{"interfaces/Rectangle.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CRectangle.html":{},"interfaces/Editor.html":{},"interfaces/MouseTool.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"changelog.html":{},"index.html":{}}}],["rectangle'},{'name",{"_index":955,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["rectangle(options",{"_index":1000,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["rectangle.directive",{"_index":2375,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["rectangle.directive.ts",{"_index":2982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rectangle.then(m",{"_index":2534,"title":{},"body":{"injectables/RectangleService.html":{}}}],["rectangle/amap",{"_index":2374,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["rectangleeditor",{"_index":37,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/Editor.html":{},"injectables/RectangleService.html":{},"miscellaneous/typealiases.html":{}}}],["rectangleoptions",{"_index":1630,"title":{"interfaces/RectangleOptions.html":{}},"body":{"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{}}}],["rectangleservice",{"_index":2521,"title":{"injectables/RectangleService.html":{}},"body":{"injectables/RectangleService.html":{}}}],["rectzoomin",{"_index":1022,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{},"interfaces/MouseTool.html":{}}}],["rectzoomin(options",{"_index":1006,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["rectzoomout",{"_index":1023,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{},"interfaces/MouseTool.html":{}}}],["rectzoomout(options",{"_index":1008,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["regeocode",{"_index":1911,"title":{"interfaces/ReGeocode.html":{}},"body":{"interfaces/GeocoderResult.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodeResult.html":{}}}],["regeocodepoi",{"_index":2505,"title":{"interfaces/ReGeocodePoi.html":{}},"body":{"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{}}}],["regeocoderesult",{"_index":1460,"title":{"interfaces/ReGeocodeResult.html":{}},"body":{"interfaces/CGeocoder.html":{},"interfaces/Geocoder.html":{},"interfaces/ReGeocodeResult.html":{}}}],["reject",{"_index":2027,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["reject(error",{"_index":2030,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["related",{"_index":983,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["remove",{"_index":2044,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["remove(overlayers",{"_index":1518,"title":{},"body":{"interfaces/CMap.html":{}}}],["removecontrol(obj",{"_index":1537,"title":{},"body":{"interfaces/CMap.html":{}}}],["removelistener",{"_index":182,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["removelistener(listener",{"_index":196,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["removemarker",{"_index":2215,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["removemarker(marker",{"_index":1592,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["removemarkers",{"_index":2216,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["removemarkers(markers",{"_index":1606,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["renderclusermarker",{"_index":2248,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["renderobject",{"_index":2253,"title":{"interfaces/RenderObject.html":{}},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["renderstyle",{"_index":2417,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["repo",{"_index":2880,"title":{},"body":{"index.html":{}}}],["reset",{"_index":2332,"title":{},"body":{"modules/NgxAmapModule.html":{},"overview.html":{}}}],["resizeenable",{"_index":2201,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["resolve",{"_index":594,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["resolve(obj",{"_index":1017,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["resolve({status",{"_index":383,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["restriction",{"_index":1810,"title":{},"body":{"interfaces/DriveRoute.html":{},"license.html":{}}}],["result",{"_index":51,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.ts",{"_index":1336,"title":{},"body":{"interfaces/AutocompleteResult.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DrivingResult.html":{},"interfaces/GeocodeResult.html":{},"interfaces/GeocoderResult.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/RidingResult.html":{},"interfaces/SearchResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["resultnum",{"_index":1903,"title":{},"body":{"interfaces/GeocodeResult.html":{},"interfaces/GeocoderResult.html":{}}}],["results",{"_index":177,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resumemove",{"_index":1576,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["return",{"_index":342,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DocumentRef.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{},"injectables/WindowRef.html":{}}}],["returns",{"_index":60,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"classes/ChangeFilter.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/DistrictSearch.html":{},"injectables/DocumentRef.html":{},"interfaces/Driving.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocoder.html":{},"interfaces/Heatmap.html":{},"injectables/HeatmapService.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Polygon.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"injectables/PolylineService.html":{},"interfaces/Rectangle.html":{},"injectables/RectangleService.html":{},"interfaces/Riding.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{},"injectables/TextService.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"classes/Utils.html":{},"interfaces/Walking.html":{},"injectables/WindowRef.html":{}}}],["ride",{"_index":2540,"title":{},"body":{"interfaces/RideRoute.html":{},"interfaces/RidingResult.html":{}}}],["rideroute",{"_index":2537,"title":{"interfaces/RideRoute.html":{}},"body":{"interfaces/RideRoute.html":{},"interfaces/RidingResult.html":{}}}],["ridestep",{"_index":2539,"title":{"interfaces/RideStep.html":{}},"body":{"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{}}}],["riding",{"_index":38,"title":{"interfaces/Riding.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"interfaces/CRiding.html":{},"interfaces/Riding.html":{}}}],["riding.service",{"_index":2380,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["riding.service.ts",{"_index":1109,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"miscellaneous/variables.html":{}}}],["riding.service.ts:15",{"_index":1128,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:22",{"_index":1132,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:31",{"_index":1130,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:35",{"_index":1131,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:47",{"_index":1129,"title":{},"body":{"classes/AmapRidingWrapper.html":{}}}],["riding.service.ts:57",{"_index":1113,"title":{},"body":{"injectables/AmapRidingService.html":{}}}],["riding.service.ts:59",{"_index":1110,"title":{},"body":{"injectables/AmapRidingService.html":{}}}],["riding.service.ts:64",{"_index":1114,"title":{},"body":{"injectables/AmapRidingService.html":{}}}],["riding.service.ts:72",{"_index":1112,"title":{},"body":{"injectables/AmapRidingService.html":{}}}],["riding/amap",{"_index":1108,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["riding/amap.riding",{"_index":137,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["riding/ride",{"_index":174,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["riding/riding",{"_index":175,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["ridingoptions",{"_index":1111,"title":{"interfaces/RidingOptions.html":{}},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"interfaces/CRiding.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{}}}],["ridingresult",{"_index":1115,"title":{"interfaces/RidingResult.html":{}},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"interfaces/CRiding.html":{},"interfaces/Riding.html":{},"interfaces/RidingResult.html":{}}}],["riding事件，返回可以被subscribe的observable",{"_index":1122,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["rightclick",{"_index":444,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["rights",{"_index":2904,"title":{},"body":{"license.html":{}}}],["road",{"_index":676,"title":{"interfaces/Road.html":{}},"body":{"classes/AmapDrivingWrapper.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/ReGeocode.html":{},"interfaces/RideStep.html":{},"interfaces/Road.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["roads",{"_index":2504,"title":{},"body":{"interfaces/ReGeocode.html":{}}}],["rollup",{"_index":978,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["rotateenable",{"_index":2202,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":166,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/DrivingResult.html":{},"interfaces/RidingResult.html":{},"interfaces/WalkingResult.html":{}}}],["route.ts",{"_index":1809,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/RideRoute.html":{},"interfaces/WalkRoute.html":{}}}],["routes",{"_index":1851,"title":{},"body":{"interfaces/DrivingResult.html":{},"interfaces/RidingResult.html":{},"interfaces/WalkingResult.html":{}}}],["rule",{"_index":1024,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{},"interfaces/MouseTool.html":{}}}],["rule(options",{"_index":1002,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["ruler",{"_index":1152,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":2883,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":301,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"classes/EventBinder.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"dependencies.html":{}}}],["s",{"_index":1490,"title":{},"body":{"interfaces/CLngLat.html":{},"interfaces/LngLat.html":{}}}],["save",{"_index":2848,"title":{},"body":{"index.html":{}}}],["scenic",{"_index":2437,"title":{"interfaces/Scenic.html":{}},"body":{"interfaces/Poi.html":{},"interfaces/Scenic.html":{}}}],["script",{"_index":2017,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.async",{"_index":2021,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.defer",{"_index":2023,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.onerror",{"_index":2029,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.src",{"_index":2024,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["script.type",{"_index":2019,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["scrollwheel",{"_index":2203,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":114,"title":{},"body":{"interfaces/AMapClass.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CRiding.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/Driving.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/TruckDriving.html":{},"interfaces/Walking.html":{}}}],["search(address",{"_index":379,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["search(keyword",{"_index":1323,"title":{},"body":{"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["search(origin",{"_index":629,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["search(path",{"_index":1288,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/TruckDriving.html":{}}}],["search(points",{"_index":1836,"title":{},"body":{"interfaces/Driving.html":{},"interfaces/Riding.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["search.service",{"_index":2364,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["search.service.ts",{"_index":579,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"miscellaneous/variables.html":{}}}],["search.service.ts:104",{"_index":1045,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{}}}],["search.service.ts:106",{"_index":1042,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{}}}],["search.service.ts:110",{"_index":1044,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{}}}],["search.service.ts:14",{"_index":1086,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:15",{"_index":603,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:21",{"_index":1106,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:22",{"_index":609,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:30",{"_index":1092,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:31",{"_index":604,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:34",{"_index":1094,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:35",{"_index":605,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:40",{"_index":1097,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:41",{"_index":606,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:45",{"_index":608,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{}}}],["search.service.ts:46",{"_index":1095,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:52",{"_index":1089,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:55",{"_index":583,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{}}}],["search.service.ts:57",{"_index":580,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{}}}],["search.service.ts:58",{"_index":1102,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:62",{"_index":582,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:66",{"_index":1100,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:70",{"_index":1091,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:74",{"_index":1087,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:78",{"_index":1093,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:82",{"_index":1098,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:86",{"_index":1105,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:90",{"_index":1099,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.service.ts:94",{"_index":1088,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{}}}],["search.ts",{"_index":1446,"title":{},"body":{"interfaces/CDistrictSearch.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/DistrictSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["search.ts:10",{"_index":1792,"title":{},"body":{"interfaces/DistrictSearch.html":{}}}],["search.ts:13",{"_index":2407,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:14",{"_index":2408,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:15",{"_index":1793,"title":{},"body":{"interfaces/DistrictSearch.html":{},"interfaces/PlaceSearch.html":{}}}],["search.ts:16",{"_index":1794,"title":{},"body":{"interfaces/DistrictSearch.html":{},"interfaces/PlaceSearch.html":{}}}],["search.ts:17",{"_index":2414,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:18",{"_index":2410,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:19",{"_index":2412,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:20",{"_index":2413,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:21",{"_index":2409,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:22",{"_index":2411,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:23",{"_index":2405,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:24",{"_index":2403,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:25",{"_index":2406,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search.ts:26",{"_index":2404,"title":{},"body":{"interfaces/PlaceSearch.html":{}}}],["search/amap",{"_index":578,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["search/amap.district",{"_index":116,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["search/amap.place",{"_index":113,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["search/cinema",{"_index":152,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/cinema.ts",{"_index":1676,"title":{},"body":{"interfaces/Cinema.html":{}}}],["search/city",{"_index":153,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CityInfo.html":{}}}],["search/dining",{"_index":154,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/dining.ts",{"_index":1767,"title":{},"body":{"interfaces/Dining.html":{}}}],["search/discount",{"_index":155,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/discount.ts",{"_index":1782,"title":{},"body":{"interfaces/Discount.html":{}}}],["search/district",{"_index":163,"title":{},"body":{"interfaces/AMapClass.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["search/district.ts",{"_index":1789,"title":{},"body":{"interfaces/District.html":{}}}],["search/groupbuy",{"_index":156,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/groupbuy.ts",{"_index":1913,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["search/hotel",{"_index":157,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/hotel.ts",{"_index":1945,"title":{},"body":{"interfaces/Hotel.html":{}}}],["search/photo",{"_index":158,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/photo.ts",{"_index":2385,"title":{},"body":{"interfaces/Photo.html":{}}}],["search/poi",{"_index":159,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/DrivingResult.html":{},"interfaces/PoiList.html":{},"interfaces/RidingResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["search/poi.ts",{"_index":2425,"title":{},"body":{"interfaces/Poi.html":{}}}],["search/scenic",{"_index":161,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["search/scenic.ts",{"_index":2547,"title":{},"body":{"interfaces/Scenic.html":{}}}],["search/search",{"_index":162,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/SearchResult.html":{}}}],["searchinbounds",{"_index":1081,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["searchinbounds(keyword",{"_index":1056,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["searchnearby",{"_index":1082,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["searchnearby(keyword",{"_index":1054,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["searchonamap",{"_index":657,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["searchonamap(obj",{"_index":652,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTransfer.html":{},"interfaces/CWalking.html":{},"interfaces/Driving.html":{},"interfaces/Transfer.html":{},"interfaces/Walking.html":{}}}],["searchresult",{"_index":1621,"title":{"interfaces/SearchResult.html":{}},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/SearchResult.html":{}}}],["season",{"_index":2550,"title":{},"body":{"interfaces/Scenic.html":{}}}],["second_id",{"_index":1745,"title":{},"body":{"interfaces/Cross.html":{}}}],["second_name",{"_index":1746,"title":{},"body":{"interfaces/Cross.html":{}}}],["segment",{"_index":2554,"title":{"interfaces/Segment.html":{}},"body":{"interfaces/Segment.html":{},"interfaces/TransferPlan.html":{}}}],["segments",{"_index":2679,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["select",{"_index":251,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["selector",{"_index":230,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["sell",{"_index":2911,"title":{},"body":{"license.html":{}}}],["seperated",{"_index":2051,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["service",{"_index":1408,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"index.html":{}}}],["service_rating",{"_index":1779,"title":{},"body":{"interfaces/Dining.html":{},"interfaces/Hotel.html":{}}}],["services/amap",{"_index":304,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"modules/NgxAmapModule.html":{}}}],["services/circle",{"_index":506,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["services/heatmap/heatmap.service",{"_index":781,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["services/icon/icon.service",{"_index":2359,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/info",{"_index":883,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["services/label/label.service",{"_index":2360,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/logger/debug",{"_index":2343,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/logger/logger.service",{"_index":881,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{}}}],["services/map",{"_index":2342,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/pixel/pixel.service",{"_index":1201,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"modules/NgxAmapModule.html":{}}}],["services/plugin",{"_index":2362,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["services/size/size.service",{"_index":886,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{}}}],["services/toolbar/toolbar.service",{"_index":1200,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["service和wrapper",{"_index":686,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["service构造wrapper",{"_index":690,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["set",{"_index":2112,"title":{},"body":{"classes/KeyMap.html":{}}}],["set(key",{"_index":1969,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["setangle",{"_index":2574,"title":{},"body":{"interfaces/Text.html":{}}}],["setangle(angle",{"_index":1553,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setanimation",{"_index":2575,"title":{},"body":{"interfaces/Text.html":{}}}],["setanimation(animate",{"_index":1549,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setaveragecenter",{"_index":2217,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setaveragecenter(averagecenter",{"_index":1608,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setavoidpolygons",{"_index":658,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"interfaces/Driving.html":{}}}],["setavoidpolygons(path",{"_index":636,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["setavoidroad",{"_index":659,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"interfaces/Driving.html":{}}}],["setavoidroad(road",{"_index":638,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/Driving.html":{}}}],["setbounds",{"_index":2507,"title":{},"body":{"interfaces/Rectangle.html":{}}}],["setbounds(bound",{"_index":1522,"title":{},"body":{"interfaces/CMap.html":{}}}],["setbounds(bounds",{"_index":1632,"title":{},"body":{"interfaces/CRectangle.html":{},"interfaces/Rectangle.html":{}}}],["setcenter",{"_index":418,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{}}}],["setcenter(center",{"_index":1456,"title":{},"body":{"interfaces/CEllipse.html":{},"interfaces/Ellipse.html":{}}}],["setcenter(lnglat",{"_index":493,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{}}}],["setcenter(position",{"_index":1520,"title":{},"body":{"interfaces/CMap.html":{}}}],["setcity",{"_index":240,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/Geocoder.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Transfer.html":{}}}],["setcity(city",{"_index":284,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CGeocoder.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CTransfer.html":{},"interfaces/Geocoder.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{},"interfaces/Transfer.html":{}}}],["setcityd",{"_index":1266,"title":{},"body":{"classes/AmapTransferWrapper.html":{},"interfaces/Transfer.html":{}}}],["setcityd(city",{"_index":1257,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{}}}],["setcitylimit",{"_index":241,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/PlaceSearch.html":{}}}],["setcitylimit(limit",{"_index":286,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setclickable",{"_index":2576,"title":{},"body":{"interfaces/Text.html":{}}}],["setclickable(clickable",{"_index":1551,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setcontent",{"_index":822,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindow.html":{}}}],["setcontent(content",{"_index":870,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["setcontent(html",{"_index":1565,"title":{},"body":{"interfaces/CMarker.html":{}}}],["setcursor",{"_index":2577,"title":{},"body":{"interfaces/Text.html":{}}}],["setcursor(cursor",{"_index":1564,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setdataset",{"_index":745,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/Heatmap.html":{}}}],["setdataset(data",{"_index":774,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["setdataset(dataset",{"_index":1466,"title":{},"body":{"interfaces/CHeatmap.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{}}}],["setdefaultcursor(cursor",{"_index":1527,"title":{},"body":{"interfaces/CMap.html":{}}}],["setdraggable",{"_index":2578,"title":{},"body":{"interfaces/Text.html":{}}}],["setdraggable(draggable",{"_index":1562,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setextdata",{"_index":419,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["setextdata(ext",{"_index":495,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["setfeatures(feature",{"_index":1545,"title":{},"body":{"interfaces/CMap.html":{}}}],["setfitview(overlaylist",{"_index":1533,"title":{},"body":{"interfaces/CMap.html":{}}}],["setgridsize",{"_index":2218,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setgridsize(size",{"_index":1598,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["seticon(content",{"_index":1559,"title":{},"body":{"interfaces/CMarker.html":{}}}],["setimagesize",{"_index":2060,"title":{},"body":{"interfaces/Icon.html":{}}}],["setimagesize(size",{"_index":1479,"title":{},"body":{"interfaces/CIcon.html":{},"interfaces/Icon.html":{}}}],["setlabel(label",{"_index":1554,"title":{},"body":{"interfaces/CMarker.html":{}}}],["setlabelzindex(index",{"_index":1515,"title":{},"body":{"interfaces/CMap.html":{}}}],["setlang",{"_index":1083,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["setlang(lang",{"_index":1065,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CMap.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setlayers(layers",{"_index":1516,"title":{},"body":{"interfaces/CMap.html":{}}}],["setlevel",{"_index":601,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{},"interfaces/DistrictSearch.html":{}}}],["setlevel(level",{"_index":595,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["setlimitbounds(bound",{"_index":1523,"title":{},"body":{"interfaces/CMap.html":{}}}],["setmap",{"_index":1345,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["setmap(map",{"_index":1355,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{}}}],["setmapstyle(style",{"_index":1543,"title":{},"body":{"interfaces/CMap.html":{}}}],["setmarkers",{"_index":2219,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setmarkers(markers",{"_index":1603,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setmaxzoom",{"_index":2220,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setmaxzoom(zoom",{"_index":1599,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setminclustersize",{"_index":2221,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setminclustersize(size",{"_index":1600,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setoffset",{"_index":1142,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["setoffset(offset",{"_index":1191,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["setoptions",{"_index":420,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["setoptions(opt",{"_index":498,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{}}}],["setpageindex",{"_index":1084,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["setpageindex(pageindex",{"_index":1061,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setpagesize",{"_index":1085,"title":{},"body":{"classes/AmapPlaceSearchWrapper.html":{},"interfaces/PlaceSearch.html":{}}}],["setpagesize(pagesize",{"_index":1063,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["setpagesize(setpagesize",{"_index":1622,"title":{},"body":{"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setpath",{"_index":1346,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{}}}],["setpath(path",{"_index":1358,"title":{},"body":{"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{}}}],["setpolicy",{"_index":660,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/Driving.html":{},"interfaces/Transfer.html":{}}}],["setpolicy(policy",{"_index":634,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTransfer.html":{},"interfaces/Driving.html":{},"interfaces/Transfer.html":{}}}],["setposition",{"_index":823,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindow.html":{},"interfaces/Text.html":{}}}],["setposition(lnglat",{"_index":1485,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/InfoWindow.html":{},"interfaces/Text.html":{}}}],["setposition(position",{"_index":872,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["setprovinceandnumber",{"_index":661,"title":{},"body":{"classes/AmapDrivingWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/Driving.html":{},"interfaces/TruckDriving.html":{}}}],["setprovinceandnumber(province",{"_index":650,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CDriving.html":{},"interfaces/CTruckDriving.html":{},"interfaces/Driving.html":{},"interfaces/TruckDriving.html":{}}}],["setradius",{"_index":421,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{}}}],["setradius(radius",{"_index":501,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{}}}],["setrotation(rotation",{"_index":1525,"title":{},"body":{"interfaces/CMap.html":{}}}],["setshadow",{"_index":2579,"title":{},"body":{"interfaces/Text.html":{}}}],["setshadow(icon",{"_index":1581,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setshape(shape",{"_index":1583,"title":{},"body":{"interfaces/CMarker.html":{}}}],["setsize",{"_index":824,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindow.html":{}}}],["setsize(size",{"_index":874,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["setstatus(status",{"_index":1526,"title":{},"body":{"interfaces/CMap.html":{}}}],["setstyle",{"_index":2580,"title":{},"body":{"interfaces/Text.html":{}}}],["setstyle(obj",{"_index":1646,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setstyles",{"_index":2222,"title":{},"body":{"interfaces/MarkerClusterer.html":{}}}],["setstyles(styles",{"_index":1601,"title":{},"body":{"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{}}}],["setsubdistrict",{"_index":602,"title":{},"body":{"classes/AmapDistrictSearchWrapper.html":{},"interfaces/DistrictSearch.html":{}}}],["setsubdistrict(district",{"_index":597,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/DistrictSearch.html":{}}}],["setters",{"_index":341,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["settext",{"_index":2581,"title":{},"body":{"interfaces/Text.html":{}}}],["settext(text",{"_index":1645,"title":{},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["settimeout",{"_index":1894,"title":{},"body":{"classes/EventBinder.html":{}}}],["settitle",{"_index":2582,"title":{},"body":{"interfaces/Text.html":{}}}],["settitle(title",{"_index":1577,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["settop",{"_index":2583,"title":{},"body":{"interfaces/Text.html":{}}}],["settop(istop",{"_index":1579,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["settype",{"_index":242,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/PlaceSearch.html":{}}}],["settype(type",{"_index":289,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/IPoiObject.html":{},"interfaces/PlaceSearch.html":{}}}],["setzindex",{"_index":2584,"title":{},"body":{"interfaces/Text.html":{}}}],["setzindex(index",{"_index":1557,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["setzoom(level",{"_index":1514,"title":{},"body":{"interfaces/CMap.html":{}}}],["setzoomandcenter(zoomlevel",{"_index":1521,"title":{},"body":{"interfaces/CMap.html":{}}}],["shadow",{"_index":2287,"title":{},"body":{"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":2921,"title":{},"body":{"license.html":{}}}],["shape",{"_index":2288,"title":{},"body":{"interfaces/MarkerOptions.html":{},"miscellaneous/variables.html":{}}}],["show",{"_index":422,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/BezierCurve.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["showbiz",{"_index":1797,"title":{},"body":{"interfaces/DistrictSearchOptions.html":{}}}],["showbuildingblock",{"_index":2204,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["showcover",{"_index":2418,"title":{},"body":{"interfaces/PlaceSearchOptions.html":{}}}],["showdir",{"_index":1382,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/PolylineOptions.html":{},"miscellaneous/variables.html":{}}}],["showdirection",{"_index":1143,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["showindoormap",{"_index":2205,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["showlocation",{"_index":1144,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["showruler",{"_index":1145,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{}}}],["showshadow",{"_index":832,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/InfoWindowOptions.html":{},"miscellaneous/variables.html":{}}}],["showtraffic",{"_index":1848,"title":{},"body":{"interfaces/DrivingOptions.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["simplechanges",{"_index":279,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"classes/ChangeFilter.html":{}}}],["size",{"_index":39,"title":{"interfaces/Size.html":{}},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CSize.html":{},"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TruckDrivingOptions.html":{},"miscellaneous/variables.html":{}}}],["size.height",{"_index":2571,"title":{},"body":{"injectables/SizeService.html":{}}}],["size.interface",{"_index":1954,"title":{},"body":{"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{}}}],["size.width",{"_index":2570,"title":{},"body":{"injectables/SizeService.html":{}}}],["size/size.service",{"_index":2069,"title":{},"body":{"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{}}}],["sizes",{"_index":842,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["sizeservice",{"_index":843,"title":{"injectables/SizeService.html":{}},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerClustererService.html":{},"modules/NgxAmapModule.html":{},"injectables/SizeService.html":{}}}],["skycolor",{"_index":2206,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":2896,"title":{},"body":{"license.html":{}}}],["sold_num",{"_index":1786,"title":{},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/CMouseTool.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CRiding.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"interfaces/CWalking.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"injectables/DocumentRef.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"injectables/WindowRef.html":{}}}],["southwest",{"_index":1425,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{}}}],["speed",{"_index":1569,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["src/app/app.module.ts",{"_index":2881,"title":{},"body":{"index.html":{}}}],["star",{"_index":1949,"title":{},"body":{"interfaces/Hotel.html":{}}}],["start",{"_index":1852,"title":{},"body":{"interfaces/DrivingResult.html":{},"interfaces/RidingResult.html":{},"interfaces/TransferResult.html":{},"interfaces/WalkingResult.html":{}}}],["start_location",{"_index":1823,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["start_time",{"_index":1787,"title":{},"body":{"interfaces/Discount.html":{}}}],["started",{"_index":2709,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":1659,"title":{},"body":{"classes/ChangeFilter.html":{},"modules/NgxAmapModule.html":{},"classes/Utils.html":{}}}],["status",{"_index":382,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["step",{"_index":167,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/DriveRoute.html":{},"interfaces/RideRoute.html":{},"interfaces/WalkRoute.html":{}}}],["step.ts",{"_index":1816,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/RideStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{}}}],["steps",{"_index":1811,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/RideRoute.html":{},"interfaces/WalkRoute.html":{}}}],["stime",{"_index":1917,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["stopmove",{"_index":1574,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{}}}],["street",{"_index":214,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["streetnumber",{"_index":215,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["string",{"_index":48,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CAutocomplete.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CBounds.html":{},"interfaces/CDistrictSearch.html":{},"interfaces/CDriving.html":{},"interfaces/CEditor.html":{},"interfaces/CGeocoder.html":{},"interfaces/CHeatmap.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CLngLat.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPixel.html":{},"interfaces/CPlaceSearch.html":{},"interfaces/CSize.html":{},"interfaces/CText.html":{},"interfaces/CTransfer.html":{},"interfaces/CTruckDriving.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/IKeyMap.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPoiObject.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RideStep.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkStep.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"index.html":{}}}],["strings",{"_index":2052,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["string|array",{"_index":1535,"title":{},"body":{"interfaces/CMap.html":{}}}],["string|htmldivelement",{"_index":1500,"title":{},"body":{"interfaces/CMap.html":{}}}],["string|htmlelement",{"_index":1566,"title":{},"body":{"interfaces/CMarker.html":{},"interfaces/PlaceSearchOptions.html":{}}}],["string|icon",{"_index":1560,"title":{},"body":{"interfaces/CMarker.html":{},"injectables/IconService.html":{},"interfaces/MarkerOptions.html":{}}}],["string|icon|iicon",{"_index":2070,"title":{},"body":{"injectables/IconService.html":{}}}],["strokecolor",{"_index":431,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["strokedasharray",{"_index":1383,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["strokeopacity",{"_index":432,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["strokestyle",{"_index":1384,"title":{},"body":{"interfaces/BezierCurveOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["strokeweight",{"_index":433,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"miscellaneous/variables.html":{}}}],["stub",{"_index":2144,"title":{},"body":{"injectables/LoggerService.html":{}}}],["style",{"_index":109,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/CMarkerClusterer.html":{},"interfaces/MarkerClusterer.html":{},"injectables/MarkerClustererService.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["style.imageoffset",{"_index":2279,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["style.interface",{"_index":2251,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{}}}],["style.interface.ts",{"_index":1953,"title":{},"body":{"interfaces/IClusterStyle.html":{}}}],["style.offset",{"_index":2277,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["style.size",{"_index":2275,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["style.ts",{"_index":1735,"title":{},"body":{"interfaces/ClusterStyle.html":{}}}],["styles",{"_index":803,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["styleurls",{"_index":809,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["subdistrict",{"_index":1798,"title":{},"body":{"interfaces/DistrictSearchOptions.html":{}}}],["subject",{"_index":2916,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2909,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1016,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["subscription",{"_index":292,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{}}}],["substantial",{"_index":2923,"title":{},"body":{"license.html":{}}}],["super",{"_index":371,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["support",{"_index":2950,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":510,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["svg",{"_index":2951,"title":{},"body":{"modules.html":{}}}],["t",{"_index":402,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/Editor.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"classes/Utils.html":{}}}],["t.dolocation",{"_index":1232,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.getdataset",{"_index":798,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["t.getlocation",{"_index":1236,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.getmap",{"_index":799,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["t.getoffset",{"_index":1235,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.hide",{"_index":794,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["t.hidedirection",{"_index":1229,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.hidelocation",{"_index":1231,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.hideruler",{"_index":1227,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.setoffset(value",{"_index":1234,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.show",{"_index":793,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["t.showdirection",{"_index":1228,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.showlocation",{"_index":1230,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["t.showruler",{"_index":1226,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["tag",{"_index":235,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["target",{"_index":405,"title":{},"body":{"classes/AmapAutocompleteWrapper.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"classes/AmapGeocoderWrapper.html":{},"classes/AmapMouseToolWrapper.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"interfaces/Editor.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["target.then(m",{"_index":1892,"title":{},"body":{"classes/EventBinder.html":{}}}],["taste_rating",{"_index":1780,"title":{},"body":{"interfaces/Dining.html":{}}}],["taxi_cost",{"_index":1853,"title":{},"body":{"interfaces/DrivingResult.html":{},"interfaces/TransferResult.html":{}}}],["taxi_distance",{"_index":2680,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["tel",{"_index":2438,"title":{},"body":{"interfaces/Poi.html":{},"interfaces/ReGeocodePoi.html":{}}}],["template",{"_index":802,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["templateurl",{"_index":811,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["text",{"_index":40,"title":{"interfaces/Text.html":{}},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/CText.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text'},{'name",{"_index":957,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["text.directive",{"_index":2369,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["text.directive.ts",{"_index":2983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text.then(m",{"_index":2634,"title":{},"body":{"injectables/TextService.html":{}}}],["text/amap",{"_index":2368,"title":{},"body":{"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["text/javascript",{"_index":2020,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["textalign",{"_index":2624,"title":{},"body":{"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["textcolor",{"_index":1737,"title":{},"body":{"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{}}}],["textoptions",{"_index":1642,"title":{"interfaces/TextOptions.html":{}},"body":{"interfaces/CText.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{}}}],["textservice",{"_index":2626,"title":{"injectables/TextService.html":{}},"body":{"injectables/TextService.html":{}}}],["textsize",{"_index":1738,"title":{},"body":{"interfaces/ClusterStyle.html":{},"interfaces/IClusterStyle.html":{}}}],["theme",{"_index":2551,"title":{},"body":{"interfaces/Scenic.html":{}}}],["then(data",{"_index":700,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["then(map",{"_index":1940,"title":{},"body":{"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/ToolBarService.html":{}}}],["this._autocomplete",{"_index":372,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._autocomplete.search(address",{"_index":381,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._autocomplete.setcity(city",{"_index":384,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._autocomplete.setcitylimit(limit",{"_index":386,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._autocomplete.settype(type",{"_index":385,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this._changes[key",{"_index":1672,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["this._changes[key].currentvalue",{"_index":1673,"title":{},"body":{"classes/ChangeFilter.html":{}}}],["this._cm",{"_index":515,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._cm.then(c",{"_index":564,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._cm.then(p",{"_index":519,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._config",{"_index":2009,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._config.apikey",{"_index":2039,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._config.apiversion",{"_index":2037,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._config.urlpath",{"_index":2034,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._defaulturl",{"_index":2035,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._defaultversion",{"_index":2038,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._districtsearch",{"_index":589,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this._districtsearch.search(address",{"_index":593,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this._districtsearch.setlevel(level",{"_index":596,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this._districtsearch.setsubdistrict(district",{"_index":598,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this._documentref",{"_index":2011,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._documentref.getnativedocument().body.appendchild(script",{"_index":2031,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._documentref.getnativedocument().createelement('script",{"_index":2018,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._driving",{"_index":625,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this._driving.clear",{"_index":645,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this._driving.clearavoidpolygons",{"_index":643,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.clearavoidroad",{"_index":641,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.getavoidpolygons",{"_index":647,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.getavoidroad",{"_index":649,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.search(origin",{"_index":633,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.search(path",{"_index":1289,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this._driving.searchonamap(obj",{"_index":653,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.setavoidpolygons(path",{"_index":637,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.setavoidroad(road",{"_index":639,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.setpolicy(policy",{"_index":635,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this._driving.setprovinceandnumber(province",{"_index":651,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this._editorplugin",{"_index":1420,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{}}}],["this._exec('circle",{"_index":997,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('marker",{"_index":991,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('measurearea",{"_index":1005,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('polygon",{"_index":995,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('polyline",{"_index":993,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('rectangle",{"_index":1001,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('rectzoomin",{"_index":1007,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('rectzoomout",{"_index":1009,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._exec('rule",{"_index":1003,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._geocoder",{"_index":718,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this._geocoder.getaddress(location",{"_index":727,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this._geocoder.getlocation(address",{"_index":723,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this._geocoder.setcity(city",{"_index":724,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this._heatmap",{"_index":783,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this._heatmap.then(p",{"_index":795,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this._heatmap.then(t",{"_index":785,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this._infowindow",{"_index":890,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this._infowindow.then(infowindow",{"_index":915,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this._map",{"_index":1413,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["this._map.then(map",{"_index":1415,"title":{},"body":{"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/InfoWindowService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["this._map[key",{"_index":1970,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["this._maploaded",{"_index":2013,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._mappromise",{"_index":2173,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this._mappromise.then(map",{"_index":2179,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this._mapresolver",{"_index":2174,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this._mapresolver(this._map",{"_index":2177,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this._mousetool",{"_index":987,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._mousetool.close(clear",{"_index":1012,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._mousetool[method](opts",{"_index":1014,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._placesearch",{"_index":1049,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.clear",{"_index":1069,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.getdetails(poiid",{"_index":1060,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.getlang",{"_index":1068,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.poionamap(obj",{"_index":1071,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.search(address",{"_index":1053,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.searchinbounds(keyword",{"_index":1058,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.searchnearby(keyword",{"_index":1055,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setcity(city",{"_index":1072,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setcitylimit(limit",{"_index":1074,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setlang(lang",{"_index":1066,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setpageindex(pageindex",{"_index":1062,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.setpagesize(pagesize",{"_index":1064,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._placesearch.settype(type",{"_index":1073,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this._plugin",{"_index":315,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/ToolBarService.html":{}}}],["this._plugin.then",{"_index":389,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/HeatmapService.html":{},"injectables/MarkerClustererService.html":{},"injectables/ToolBarService.html":{}}}],["this._plugin.then(wrapper",{"_index":328,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this._riding",{"_index":1120,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this._riding.clear",{"_index":1125,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this._riding.search(origin",{"_index":1124,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this._size",{"_index":1968,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["this._subscription",{"_index":331,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._subscription.add(wrapper.on('choose').subscribe(e",{"_index":339,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this._subscription.add(wrapper.on('error').subscribe(e",{"_index":335,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this._subscription.add(wrapper.on('select').subscribe(e",{"_index":337,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this._subscription.unsubscribe",{"_index":332,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this._subscriptions",{"_index":535,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["this._subscriptions.add(this.bindevent('change').subscribe(e",{"_index":554,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('dblclick').subscribe(e",{"_index":538,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('hide').subscribe(e",{"_index":542,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('mousedown').subscribe(e",{"_index":546,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('mouseout').subscribe(e",{"_index":552,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('mouseover').subscribe(e",{"_index":550,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('mouseup').subscribe(e",{"_index":548,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('rightclick').subscribe(e",{"_index":540,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('show').subscribe(e",{"_index":544,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('touchend').subscribe(e",{"_index":560,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('touchmove').subscribe(e",{"_index":558,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindevent('touchstart').subscribe(e",{"_index":556,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this._subscriptions.add(this.bindtoolbarevent('hide').subscribe(e",{"_index":1223,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._subscriptions.add(this.bindtoolbarevent('location').subscribe(e",{"_index":1219,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._subscriptions.add(this.bindtoolbarevent('show').subscribe(e",{"_index":1221,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._subscriptions.add(this.infowindows.bindevent(this._infowindow",{"_index":904,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this._subscriptions.unsubscribe",{"_index":533,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["this._toolbar",{"_index":1202,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._toolbar.then(t",{"_index":1204,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this._transfer",{"_index":1250,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.clear",{"_index":1261,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.leaveat(time",{"_index":1260,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.search(origin",{"_index":1254,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.searchonamap(obj",{"_index":1262,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.setcity(city",{"_index":1256,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.setcityd(city",{"_index":1258,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._transfer.setpolicy(policy",{"_index":1255,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this._walking",{"_index":1307,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this._walking.clear",{"_index":1312,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this._walking.search(origin",{"_index":1311,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this._walking.searchonamap(obj",{"_index":1313,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this._windowref",{"_index":2010,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this._windowref.getnativewindow())[callbackname",{"_index":2028,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this.address",{"_index":703,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.autos.of(options",{"_index":327,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.bindevent('click').subscribe(e",{"_index":536,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.bindevent(this._autocomplete",{"_index":378,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this.bindevent(this._districtsearch",{"_index":592,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this.bindevent(this._driving",{"_index":628,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this.bindevent(this._geocoder",{"_index":721,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.bindevent(this._mappromise",{"_index":2182,"title":{},"body":{"injectables/MapAPIService.html":{}}}],["this.bindevent(this._mousetool",{"_index":989,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this.bindevent(this._placesearch",{"_index":1052,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this.bindevent(this._riding",{"_index":1123,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this.bindevent(this._transfer",{"_index":1253,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this.bindevent(this._walking",{"_index":1310,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this.bindevents",{"_index":518,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.bindevents(wrapper",{"_index":329,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.bindtoolbarevent('zoomchanged').subscribe(e",{"_index":1217,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.change.emit(e",{"_index":555,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.choose.emit(e",{"_index":340,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.circlemarkerclick.emit(e",{"_index":537,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.circlemarkerhide.emit(e",{"_index":543,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.circlemarkershow.emit(e",{"_index":545,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.close",{"_index":914,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this.cms.bindevent(this._cm",{"_index":562,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.cms.create(options",{"_index":517,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.cms.destroy(this._cm",{"_index":534,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.complete.emit(e",{"_index":334,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.content",{"_index":887,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.createstyle(style",{"_index":2270,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.dblclick.emit(e",{"_index":539,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.el.nativeelement",{"_index":326,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.el.nativeelement.queryselector('.amap",{"_index":888,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.error.emit(e",{"_index":336,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.geopromise",{"_index":692,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.geopromise.then(geocoder",{"_index":698,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.getsrcfromconfig(callbackname",{"_index":2025,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["this.hidden",{"_index":787,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.hide",{"_index":531,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.hidedirection",{"_index":1210,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.hidelocation",{"_index":1213,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.hideruler",{"_index":1207,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.hms.bindevent(this._heatmap",{"_index":792,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.hms.create(options",{"_index":784,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.hms.destroy(this._heatmap",{"_index":791,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.hostmarker",{"_index":916,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.hostmarker.then(marker",{"_index":917,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.icon.create(options.icon",{"_index":2304,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.icon.create(options.shadow",{"_index":2306,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["this.infowindows.bindevent(this._infowindow",{"_index":901,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.infowindows.create(options",{"_index":891,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.infowindows.destroy(this._infowindow",{"_index":900,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.infowindows.open(infowindow",{"_index":918,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.isopen",{"_index":907,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.isopenchange.emit(false",{"_index":911,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.isopenchange.emit(true",{"_index":908,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.label.create(options.label",{"_index":2308,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.loaded.then",{"_index":655,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this.loader.load().then",{"_index":2175,"title":{},"body":{"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["this.location.emit(e",{"_index":1220,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.logger.d(this.tag",{"_index":889,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/PluginLoaderService.html":{}}}],["this.logger.e(`${name",{"_index":2402,"title":{},"body":{"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["this.mousedown.emit(e",{"_index":547,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.mouseout.emit(e",{"_index":553,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.mouseover.emit(e",{"_index":551,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.mouseup.emit(e",{"_index":549,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.on('draw",{"_index":1015,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this.open",{"_index":913,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.options",{"_index":516,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{}}}],["this.pixel.create(iconoption.imageoffset",{"_index":2080,"title":{},"body":{"injectables/IconService.html":{}}}],["this.pixel.create(offset",{"_index":1233,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.pixel.create(options.offset",{"_index":2105,"title":{},"body":{"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MarkerService.html":{},"injectables/TextService.html":{}}}],["this.pixel.create(style.imageoffset",{"_index":2280,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.pixel.create(style.offset",{"_index":2278,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.pixels.create(options.offset",{"_index":2657,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["this.plugins.load('amap.autocomplete",{"_index":388,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{}}}],["this.plugins.load('amap.beziercurveeditor",{"_index":1421,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["this.plugins.load('amap.circleeditor",{"_index":1730,"title":{},"body":{"injectables/CircleService.html":{}}}],["this.plugins.load('amap.districtsearch",{"_index":599,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["this.plugins.load('amap.driving",{"_index":654,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{}}}],["this.plugins.load('amap.ellipseeditor",{"_index":1884,"title":{},"body":{"injectables/EllipseService.html":{}}}],["this.plugins.load('amap.geocoder",{"_index":728,"title":{},"body":{"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["this.plugins.load('amap.heatmap",{"_index":1939,"title":{},"body":{"injectables/HeatmapService.html":{}}}],["this.plugins.load('amap.markerclusterer",{"_index":2267,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.plugins.load('amap.mousetool",{"_index":1018,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{}}}],["this.plugins.load('amap.placesearch",{"_index":1076,"title":{},"body":{"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{}}}],["this.plugins.load('amap.polyeditor",{"_index":2473,"title":{},"body":{"injectables/PolygonService.html":{},"injectables/PolylineService.html":{}}}],["this.plugins.load('amap.rectangleeditor",{"_index":2535,"title":{},"body":{"injectables/RectangleService.html":{}}}],["this.plugins.load('amap.riding",{"_index":1126,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["this.plugins.load('amap.toolbar",{"_index":2656,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["this.plugins.load('amap.transfer",{"_index":1263,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["this.plugins.load('amap.truckdriving",{"_index":1290,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["this.plugins.load('amap.walking",{"_index":1314,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["this.position",{"_index":920,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.ready.emit(p",{"_index":520,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.ready.emit(t",{"_index":786,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.ready.emit(wrapper",{"_index":330,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.rightclick.emit(e",{"_index":541,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.select.emit(e",{"_index":338,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.setcenter(v",{"_index":528,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.setcity(v",{"_index":318,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.setcitylimit(v",{"_index":322,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.setcontent(v",{"_index":894,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.setdataset(v",{"_index":789,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.setextdata(v",{"_index":524,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.setoffset(v",{"_index":1215,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.setoptions(v",{"_index":522,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{}}}],["this.setposition(v",{"_index":897,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.setradius(v",{"_index":526,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.setsize(v",{"_index":899,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.settype(v",{"_index":320,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["this.show",{"_index":532,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{}}}],["this.showdirection",{"_index":1209,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.showlocation",{"_index":1212,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.showruler",{"_index":1206,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.size.create(iconoption.imagesize",{"_index":2077,"title":{},"body":{"injectables/IconService.html":{}}}],["this.size.create(iconoption.size",{"_index":2074,"title":{},"body":{"injectables/IconService.html":{}}}],["this.size.create(options.size",{"_index":2107,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["this.size.create(style.size",{"_index":2276,"title":{},"body":{"injectables/MarkerClustererService.html":{}}}],["this.sizes.create(size",{"_index":924,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.toggleopen",{"_index":892,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.toolbarhide.emit(e",{"_index":1224,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.toolbars.bindevent(this._toolbar",{"_index":1225,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.toolbars.create(options",{"_index":1203,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.toolbars.destroy(this._toolbar",{"_index":1216,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.toolbarshow.emit(e",{"_index":1222,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["this.touchend.emit(e",{"_index":561,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.touchmove.emit(e",{"_index":559,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.touchstart.emit(e",{"_index":557,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["this.unbindevents",{"_index":790,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["this.verify(options",{"_index":2397,"title":{},"body":{"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["this.windowchange.emit(e",{"_index":903,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.windowclose.emit(e",{"_index":910,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.windowopen.emit(e",{"_index":906,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["this.zoomchanged.emit(e",{"_index":1218,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["ticket_address",{"_index":1918,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["ticket_tel",{"_index":1919,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["tilelayer",{"_index":1503,"title":{},"body":{"interfaces/CMap.html":{},"interfaces/MapOptions.html":{}}}],["time",{"_index":1270,"title":{},"body":{"classes/AmapTransferWrapper.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Segment.html":{},"interfaces/TMC.html":{},"interfaces/Transfer.html":{},"interfaces/TransferPlan.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{}}}],["tip",{"_index":1339,"title":{"interfaces/Tip.html":{}},"body":{"interfaces/AutocompleteResult.html":{},"interfaces/Tip.html":{}}}],["tips",{"_index":1338,"title":{},"body":{"interfaces/AutocompleteResult.html":{}}}],["title",{"_index":1788,"title":{},"body":{"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Photo.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["tmc",{"_index":1827,"title":{"interfaces/TMC.html":{}},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["tmcs",{"_index":1824,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["todo",{"_index":998,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/Segment.html":{}}}],["toggle",{"_index":912,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["toggleopen",{"_index":825,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["toll_road",{"_index":1825,"title":{},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["tolls",{"_index":1812,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["tolls_distance",{"_index":1813,"title":{},"body":{"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["tool",{"_index":118,"title":{},"body":{"interfaces/AMapClass.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/ToolBarService.html":{},"index.html":{}}}],["tool.service",{"_index":2367,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["tool.service.ts",{"_index":963,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"miscellaneous/variables.html":{}}}],["tool.service.ts:100",{"_index":966,"title":{},"body":{"injectables/AmapMouseToolService.html":{}}}],["tool.service.ts:12",{"_index":1026,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:14",{"_index":1025,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:25",{"_index":1033,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:29",{"_index":1040,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:33",{"_index":1031,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:37",{"_index":1035,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:41",{"_index":1034,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:45",{"_index":1029,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:50",{"_index":1036,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:54",{"_index":1039,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:58",{"_index":1032,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:62",{"_index":1037,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:66",{"_index":1038,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:70",{"_index":1030,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:78",{"_index":1027,"title":{},"body":{"classes/AmapMouseToolWrapper.html":{}}}],["tool.service.ts:93",{"_index":967,"title":{},"body":{"injectables/AmapMouseToolService.html":{}}}],["tool.service.ts:95",{"_index":964,"title":{},"body":{"injectables/AmapMouseToolService.html":{}}}],["tool.ts",{"_index":1610,"title":{},"body":{"interfaces/CMouseTool.html":{},"interfaces/MouseTool.html":{}}}],["tool.ts:12",{"_index":2313,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:13",{"_index":2316,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:14",{"_index":2315,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:15",{"_index":2317,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:16",{"_index":2311,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:17",{"_index":2320,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:18",{"_index":2314,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:19",{"_index":2318,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:20",{"_index":2319,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool.ts:21",{"_index":2312,"title":{},"body":{"interfaces/MouseTool.html":{}}}],["tool/amap",{"_index":962,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":41,"title":{"interfaces/ToolBar.html":{}},"body":{"interfaces/AMapClass.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{}}}],["toolbar.directive",{"_index":2356,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["toolbar.directive.ts",{"_index":1134,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"miscellaneous/variables.html":{}}}],["toolbar.directive.ts:101",{"_index":1184,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:105",{"_index":1196,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:109",{"_index":1187,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:113",{"_index":1194,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:117",{"_index":1185,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:121",{"_index":1195,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:125",{"_index":1186,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:129",{"_index":1181,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:134",{"_index":1192,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:144",{"_index":1183,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:148",{"_index":1182,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:29",{"_index":1198,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:32",{"_index":1169,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:33",{"_index":1170,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:34",{"_index":1171,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:35",{"_index":1168,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:36",{"_index":1166,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:37",{"_index":1165,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:38",{"_index":1163,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:39",{"_index":1162,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:40",{"_index":1167,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:41",{"_index":1172,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:44",{"_index":1164,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:47",{"_index":1177,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:48",{"_index":1173,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:49",{"_index":1174,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:50",{"_index":1175,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:51",{"_index":1176,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:53",{"_index":1197,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:54",{"_index":1160,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:61",{"_index":1190,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:69",{"_index":1188,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:80",{"_index":1189,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:85",{"_index":1178,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:92",{"_index":1180,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.directive.ts:97",{"_index":1193,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbar.then(t",{"_index":2660,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["toolbar/amap",{"_index":1133,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["toolbarhide",{"_index":1154,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbaroptions",{"_index":1199,"title":{"interfaces/ToolbarOptions.html":{}},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/CToolBar.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{}}}],["toolbars",{"_index":1161,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["toolbarservice",{"_index":1158,"title":{"injectables/ToolBarService.html":{}},"body":{"directives/AmapToolBarDirective.html":{},"injectables/ToolBarService.html":{}}}],["toolbarshow",{"_index":1155,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["topwhenclick",{"_index":2289,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":2945,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1429,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/CBounds.html":{},"interfaces/CLngLat.html":{},"interfaces/CPixel.html":{},"interfaces/CSize.html":{},"interfaces/LngLat.html":{},"interfaces/Pixel.html":{},"interfaces/Size.html":{}}}],["touchend",{"_index":445,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["touchmove",{"_index":446,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["touchstart",{"_index":447,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{}}}],["touchzoom",{"_index":2207,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["township",{"_index":216,"title":{},"body":{"interfaces/AddressComponent.html":{}}}],["traffic",{"_index":1950,"title":{},"body":{"interfaces/Hotel.html":{}}}],["transfer",{"_index":42,"title":{"interfaces/Transfer.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{},"interfaces/TransferResult.html":{}}}],["transfer.service",{"_index":2378,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["transfer.service.ts",{"_index":1239,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"miscellaneous/variables.html":{}}}],["transfer.service.ts:15",{"_index":1267,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:22",{"_index":1277,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:31",{"_index":1271,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:35",{"_index":1272,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:47",{"_index":1276,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:51",{"_index":1274,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:55",{"_index":1275,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:59",{"_index":1269,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:63",{"_index":1268,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:67",{"_index":1273,"title":{},"body":{"classes/AmapTransferWrapper.html":{}}}],["transfer.service.ts:77",{"_index":1243,"title":{},"body":{"injectables/AmapTransferService.html":{}}}],["transfer.service.ts:79",{"_index":1240,"title":{},"body":{"injectables/AmapTransferService.html":{}}}],["transfer.service.ts:84",{"_index":1244,"title":{},"body":{"injectables/AmapTransferService.html":{}}}],["transfer.service.ts:92",{"_index":1242,"title":{},"body":{"injectables/AmapTransferService.html":{}}}],["transfer/amap",{"_index":1238,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["transfer/amap.transfer",{"_index":135,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["transfer/segment",{"_index":171,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["transfer/transfer",{"_index":169,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["transferoptions",{"_index":1241,"title":{"interfaces/TransferOptions.html":{}},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{}}}],["transferplan",{"_index":2674,"title":{"interfaces/TransferPlan.html":{}},"body":{"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{}}}],["transferresult",{"_index":1245,"title":{"interfaces/TransferResult.html":{}},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"interfaces/CTransfer.html":{},"interfaces/Transfer.html":{},"interfaces/TransferResult.html":{}}}],["transfer事件，返回可以被subscribe的observable",{"_index":1252,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["transit",{"_index":2556,"title":{},"body":{"interfaces/Segment.html":{}}}],["transit_distance",{"_index":2681,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["transit_mode",{"_index":2557,"title":{},"body":{"interfaces/Segment.html":{}}}],["transitdetail",{"_index":2558,"title":{},"body":{"interfaces/Segment.html":{}}}],["tree",{"_index":805,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["trigger",{"_index":183,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["trigger(instance",{"_index":199,"title":{},"body":{"interfaces/AMapEvent.html":{}}}],["truck",{"_index":1279,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["truckdriving",{"_index":43,"title":{"interfaces/TruckDriving.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{}}}],["truckdrivingoptions",{"_index":1281,"title":{"interfaces/TruckDrivingOptions.html":{}},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"interfaces/CTruckDriving.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["truckdriving事件，返回可以被subscribe的observable",{"_index":1287,"title":{},"body":{"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["true",{"_index":2022,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{}}}],["type",{"_index":57,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"interfaces/AddressComponent.html":{},"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/Autocomplete.html":{},"interfaces/AutocompleteOptions.html":{},"interfaces/AutocompleteResult.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/BezierCurveOptions.html":{},"injectables/BezierCurveService.html":{},"interfaces/Bounds.html":{},"interfaces/BusinessArea.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CEditor.html":{},"interfaces/CHeatmap.html":{},"interfaces/CPolygon.html":{},"classes/ChangeFilter.html":{},"interfaces/Cinema.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"interfaces/CircleMarkerOptions.html":{},"injectables/CircleMarkerService.html":{},"interfaces/CircleOptions.html":{},"injectables/CircleService.html":{},"interfaces/CityInfo.html":{},"interfaces/ClusterStyle.html":{},"interfaces/Cross.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Dining.html":{},"interfaces/Discount.html":{},"interfaces/District.html":{},"interfaces/DistrictSearch.html":{},"interfaces/DistrictSearchOptions.html":{},"interfaces/DistrictSearchResult.html":{},"interfaces/DriveRoute.html":{},"interfaces/DriveStep.html":{},"interfaces/Driving.html":{},"interfaces/DrivingOptions.html":{},"interfaces/DrivingResult.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/EllipseOptions.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"interfaces/Geocode.html":{},"interfaces/GeocodeResult.html":{},"interfaces/Geocoder.html":{},"interfaces/GeocoderOptions.html":{},"interfaces/GeocoderResult.html":{},"interfaces/Groupbuy.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/HeatmapOptions.html":{},"injectables/HeatmapService.html":{},"interfaces/Hotel.html":{},"interfaces/IClusterStyle.html":{},"interfaces/IIcon.html":{},"interfaces/ILabel.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/IPixel.html":{},"interfaces/IPoiObject.html":{},"interfaces/ISize.html":{},"interfaces/Icon.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"interfaces/MarkerClustererOptions.html":{},"injectables/MarkerClustererService.html":{},"interfaces/MarkerOptions.html":{},"injectables/MarkerService.html":{},"interfaces/MouseTool.html":{},"modules/NgxAmapModule.html":{},"interfaces/Photo.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{},"interfaces/PlaceSearch.html":{},"interfaces/PlaceSearchOptions.html":{},"injectables/PluginLoaderService.html":{},"interfaces/Poi.html":{},"interfaces/PoiList.html":{},"interfaces/Polygon.html":{},"interfaces/PolygonOptions.html":{},"injectables/PolygonService.html":{},"interfaces/Polyline.html":{},"interfaces/PolylineOptions.html":{},"injectables/PolylineService.html":{},"interfaces/ReGeocode.html":{},"interfaces/ReGeocodePoi.html":{},"interfaces/ReGeocodeResult.html":{},"interfaces/Rectangle.html":{},"interfaces/RectangleOptions.html":{},"injectables/RectangleService.html":{},"interfaces/RenderObject.html":{},"interfaces/RideRoute.html":{},"interfaces/RideStep.html":{},"interfaces/Riding.html":{},"interfaces/RidingOptions.html":{},"interfaces/RidingResult.html":{},"interfaces/Road.html":{},"interfaces/Scenic.html":{},"interfaces/SearchResult.html":{},"interfaces/Segment.html":{},"injectables/SizeService.html":{},"interfaces/TMC.html":{},"interfaces/Text.html":{},"interfaces/TextOptions.html":{},"injectables/TextService.html":{},"interfaces/Tip.html":{},"interfaces/ToolBar.html":{},"injectables/ToolBarService.html":{},"interfaces/ToolbarOptions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferOptions.html":{},"interfaces/TransferPlan.html":{},"interfaces/TransferResult.html":{},"interfaces/TruckDriving.html":{},"interfaces/TruckDrivingOptions.html":{},"classes/Utils.html":{},"interfaces/ViaCity.html":{},"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{},"interfaces/WalkingResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type_code",{"_index":1920,"title":{},"body":{"interfaces/Groupbuy.html":{}}}],["typealiases",{"_index":2961,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":631,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/IconService.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["types/class",{"_index":360,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"classes/EventBinder.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["types/class/amap.editor",{"_index":1412,"title":{},"body":{"injectables/BezierCurveService.html":{}}}],["types/class/district",{"_index":585,"title":{},"body":{"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{}}}],["types/class/driving/driving",{"_index":621,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{}}}],["types/class/riding/riding",{"_index":1116,"title":{},"body":{"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{}}}],["types/class/transfer/transfer",{"_index":1246,"title":{},"body":{"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{}}}],["types/class/walking/walking",{"_index":1303,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["types/interface",{"_index":303,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["unbindevents",{"_index":746,"title":{},"body":{"directives/AmapHeatmapDirective.html":{}}}],["undefined",{"_index":632,"title":{},"body":{"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"classes/ChangeFilter.html":{},"interfaces/IKeyMap.html":{},"injectables/IconService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{},"classes/Utils.html":{}}}],["url",{"_index":1739,"title":{},"body":{"interfaces/ClusterStyle.html":{},"interfaces/Discount.html":{},"interfaces/Groupbuy.html":{},"interfaces/IClusterStyle.html":{},"interfaces/Photo.html":{}}}],["urlbase",{"_index":2033,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["urlbase}?${params",{"_index":2057,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["urlpath",{"_index":1989,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"index.html":{}}}],["use",{"_index":975,"title":{},"body":{"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"license.html":{}}}],["useclass",{"_index":2383,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["usenative",{"_index":1153,"title":{},"body":{"directives/AmapToolBarDirective.html":{},"interfaces/ToolbarOptions.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":2382,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["utils",{"_index":306,"title":{"classes/Utils.html":{}},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{},"classes/Utils.html":{}}}],["utils.getoptionsfor(this",{"_index":324,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["utils/browser",{"_index":1992,"title":{},"body":{"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{}}}],["utils/change",{"_index":309,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["utils/event",{"_index":364,"title":{},"body":{"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"injectables/BezierCurveService.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"injectables/InfoWindowService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{}}}],["utils/utils",{"_index":307,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"directives/AmapToolBarDirective.html":{}}}],["v",{"_index":530,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"directives/AmapHeatmapDirective.html":{},"directives/AmapToolBarDirective.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{}}}],["v1.3.1",{"_index":2845,"title":{},"body":{"index.html":{}}}],["v1.3.2",{"_index":2843,"title":{},"body":{"index.html":{}}}],["v1.3.3",{"_index":2836,"title":{},"body":{"index.html":{}}}],["v1.4.0",{"_index":2833,"title":{},"body":{"index.html":{}}}],["v1.4.1",{"_index":2830,"title":{},"body":{"index.html":{}}}],["v1.4.3",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["v1.x",{"_index":2824,"title":{},"body":{"index.html":{}}}],["v2.0.0",{"_index":2841,"title":{},"body":{"index.html":{}}}],["v2.1.0",{"_index":2839,"title":{},"body":{"index.html":{}}}],["v2.1.1",{"_index":2835,"title":{},"body":{"index.html":{}}}],["v2.2.0",{"_index":2832,"title":{},"body":{"index.html":{}}}],["v2.2.1",{"_index":2829,"title":{},"body":{"index.html":{}}}],["v2.x",{"_index":2823,"title":{},"body":{"index.html":{}}}],["value",{"_index":295,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapAutocompleteService.html":{},"directives/AmapCircleMarkerDirective.html":{},"injectables/AmapDistrictSearchService.html":{},"injectables/AmapDrivingService.html":{},"injectables/AmapGeocoderService.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"injectables/AmapMouseToolService.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"injectables/AmapRidingService.html":{},"directives/AmapToolBarDirective.html":{},"injectables/AmapTransferService.html":{},"injectables/AmapTruckDrivingService.html":{},"injectables/AmapWalkingService.html":{},"injectables/BezierCurveService.html":{},"classes/ChangeFilter.html":{},"injectables/CircleMarkerService.html":{},"injectables/CircleService.html":{},"injectables/EllipseService.html":{},"injectables/HeatmapService.html":{},"interfaces/IKeyMap.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/IconService.html":{},"injectables/InfoWindowService.html":{},"classes/KeyMap.html":{},"injectables/LabelService.html":{},"injectables/MapAPILoaderService.html":{},"injectables/MapAPIService.html":{},"injectables/MarkerClustererService.html":{},"injectables/MarkerService.html":{},"injectables/PixelService.html":{},"injectables/PluginLoaderService.html":{},"injectables/PolygonService.html":{},"injectables/PolylineService.html":{},"injectables/RectangleService.html":{},"injectables/SizeService.html":{},"injectables/TextService.html":{},"injectables/ToolBarService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1976,"title":{},"body":{"interfaces/IKeyMap.html":{},"classes/KeyMap.html":{}}}],["var",{"_index":933,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["variables",{"_index":2972,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":2391,"title":{},"body":{"injectables/PixelService.html":{},"injectables/SizeService.html":{}}}],["verify(pixel",{"_index":2395,"title":{},"body":{"injectables/PixelService.html":{}}}],["verify(size",{"_index":2566,"title":{},"body":{"injectables/SizeService.html":{}}}],["verticalalign",{"_index":2625,"title":{},"body":{"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["viacity",{"_index":1826,"title":{"interfaces/ViaCity.html":{}},"body":{"interfaces/DriveStep.html":{},"interfaces/TMC.html":{},"interfaces/ViaCity.html":{}}}],["view",{"_index":2208,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["view2d",{"_index":2212,"title":{},"body":{"interfaces/MapOptions.html":{}}}],["viewmode",{"_index":2209,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":2290,"title":{},"body":{"interfaces/MarkerOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":52,"title":{},"body":{"interfaces/AMapClass.html":{},"interfaces/AMapEvent.html":{},"directives/AmapAutocompleteDirective.html":{},"classes/AmapAutocompleteWrapper.html":{},"directives/AmapCircleMarkerDirective.html":{},"classes/AmapDistrictSearchWrapper.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"directives/AmapHeatmapDirective.html":{},"components/AmapInfoWindowComponent.html":{},"classes/AmapPlaceSearchWrapper.html":{},"classes/AmapRidingWrapper.html":{},"directives/AmapToolBarDirective.html":{},"classes/AmapTransferWrapper.html":{},"classes/AmapTruckDrivingWrapper.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurve.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/BezierCurveEditorOptions.html":{},"interfaces/CBezierCurve.html":{},"interfaces/CBezierCurveEditor.html":{},"interfaces/CCircle.html":{},"interfaces/CCircleMarker.html":{},"interfaces/CEditor.html":{},"interfaces/CEllipse.html":{},"interfaces/CHeatmap.html":{},"interfaces/CIcon.html":{},"interfaces/CInfoWindow.html":{},"interfaces/CMap.html":{},"interfaces/CMarker.html":{},"interfaces/CPolygon.html":{},"interfaces/CPolyline.html":{},"interfaces/CRectangle.html":{},"interfaces/CText.html":{},"interfaces/CToolBar.html":{},"interfaces/Circle.html":{},"interfaces/CircleMarker.html":{},"injectables/DebugLoggerService.html":{},"interfaces/Editor.html":{},"interfaces/Ellipse.html":{},"interfaces/Heatmap.html":{},"interfaces/HeatmapDataSet.html":{},"interfaces/HeatmapDataUrl.html":{},"interfaces/HeatmapLngLatData.html":{},"interfaces/Icon.html":{},"interfaces/InfoWindow.html":{},"classes/KeyMap.html":{},"injectables/LoggerService.html":{},"injectables/MapAPIService.html":{},"interfaces/MarkerClustererOptions.html":{},"interfaces/Polygon.html":{},"interfaces/Polyline.html":{},"interfaces/Rectangle.html":{},"interfaces/RenderObject.html":{},"interfaces/Text.html":{},"interfaces/ToolBar.html":{}}}],["w",{"_index":1752,"title":{},"body":{"injectables/DebugLoggerService.html":{},"interfaces/IMapAPILoaderConfig.html":{},"interfaces/LngLat.html":{},"injectables/LoggerService.html":{},"injectables/MapAPILoaderService.html":{}}}],["w(tag",{"_index":1761,"title":{},"body":{"injectables/DebugLoggerService.html":{},"injectables/LoggerService.html":{}}}],["w.close",{"_index":2110,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["walk",{"_index":2700,"title":{},"body":{"interfaces/WalkRoute.html":{},"interfaces/WalkingResult.html":{}}}],["walkdetails",{"_index":2559,"title":{},"body":{"interfaces/Segment.html":{}}}],["walking",{"_index":44,"title":{"interfaces/Walking.html":{}},"body":{"interfaces/AMapClass.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CWalking.html":{},"interfaces/Walking.html":{}}}],["walking.service",{"_index":2379,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["walking.service.ts",{"_index":1296,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"miscellaneous/variables.html":{}}}],["walking.service.ts:15",{"_index":1316,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:22",{"_index":1321,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:31",{"_index":1318,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:35",{"_index":1319,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:47",{"_index":1317,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:51",{"_index":1320,"title":{},"body":{"classes/AmapWalkingWrapper.html":{}}}],["walking.service.ts:61",{"_index":1300,"title":{},"body":{"injectables/AmapWalkingService.html":{}}}],["walking.service.ts:63",{"_index":1297,"title":{},"body":{"injectables/AmapWalkingService.html":{}}}],["walking.service.ts:68",{"_index":1301,"title":{},"body":{"injectables/AmapWalkingService.html":{}}}],["walking.service.ts:76",{"_index":1299,"title":{},"body":{"injectables/AmapWalkingService.html":{}}}],["walking/amap",{"_index":1295,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["walking/amap.walking",{"_index":136,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["walking/walk",{"_index":172,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["walking/walking",{"_index":173,"title":{},"body":{"interfaces/AMapClass.html":{}}}],["walking_distance",{"_index":2682,"title":{},"body":{"interfaces/TransferPlan.html":{}}}],["walkingoptions",{"_index":1298,"title":{"interfaces/WalkingOptions.html":{}},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CWalking.html":{},"interfaces/Walking.html":{},"interfaces/WalkingOptions.html":{}}}],["walkingresult",{"_index":1302,"title":{"interfaces/WalkingResult.html":{}},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/CWalking.html":{},"interfaces/Walking.html":{},"interfaces/WalkingResult.html":{}}}],["walking事件，返回可以被subscribe的observable",{"_index":1309,"title":{},"body":{"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{}}}],["walkroute",{"_index":2697,"title":{"interfaces/WalkRoute.html":{}},"body":{"interfaces/WalkRoute.html":{},"interfaces/WalkingResult.html":{}}}],["walkstep",{"_index":2699,"title":{"interfaces/WalkStep.html":{}},"body":{"interfaces/WalkRoute.html":{},"interfaces/WalkStep.html":{}}}],["warranties",{"_index":2931,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2926,"title":{},"body":{"license.html":{}}}],["waypoints",{"_index":1854,"title":{},"body":{"interfaces/DrivingResult.html":{}}}],["website",{"_index":2439,"title":{},"body":{"interfaces/Poi.html":{}}}],["weight",{"_index":2689,"title":{},"body":{"interfaces/TruckDrivingOptions.html":{}}}],["whether",{"_index":2943,"title":{},"body":{"license.html":{}}}],["width",{"_index":1639,"title":{},"body":{"interfaces/CSize.html":{},"interfaces/ISize.html":{},"interfaces/Size.html":{},"injectables/SizeService.html":{},"interfaces/TruckDrivingOptions.html":{}}}],["window",{"_index":105,"title":{},"body":{"interfaces/AMapClass.html":{},"components/AmapInfoWindowComponent.html":{},"interfaces/CInfoWindow.html":{},"injectables/DocumentRef.html":{},"interfaces/InfoWindow.html":{},"interfaces/InfoWindowOptions.html":{},"injectables/InfoWindowService.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["window'},{'name",{"_index":935,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component",{"_index":2351,"title":{},"body":{"modules/NgxAmapModule.html":{}}}],["window.component.html",{"_index":812,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.scss",{"_index":810,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts",{"_index":808,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"miscellaneous/variables.html":{}}}],["window.component.ts:103",{"_index":876,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:108",{"_index":869,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:122",{"_index":860,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:127",{"_index":871,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:131",{"_index":873,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:135",{"_index":875,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:143",{"_index":862,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:147",{"_index":861,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:151",{"_index":863,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:155",{"_index":864,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:30",{"_index":880,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:33",{"_index":847,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:34",{"_index":845,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:35",{"_index":846,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:36",{"_index":854,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:37",{"_index":850,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:38",{"_index":851,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:39",{"_index":852,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:42",{"_index":848,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:45",{"_index":855,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:46",{"_index":858,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:47",{"_index":857,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:48",{"_index":856,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:50",{"_index":878,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:51",{"_index":879,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:52",{"_index":877,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:53",{"_index":844,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:62",{"_index":867,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:71",{"_index":865,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:81",{"_index":866,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.component.ts:86",{"_index":859,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.service",{"_index":885,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["window.service.ts",{"_index":2096,"title":{},"body":{"injectables/InfoWindowService.html":{},"miscellaneous/variables.html":{}}}],["window.service.ts:14",{"_index":2103,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.service.ts:15",{"_index":2097,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.service.ts:26",{"_index":2098,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.service.ts:40",{"_index":2100,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.service.ts:46",{"_index":2102,"title":{},"body":{"injectables/InfoWindowService.html":{}}}],["window.ts",{"_index":1481,"title":{},"body":{"interfaces/CInfoWindow.html":{},"interfaces/InfoWindow.html":{}}}],["window.ts:11",{"_index":2088,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:12",{"_index":2083,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:13",{"_index":2085,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:14",{"_index":2089,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:15",{"_index":2084,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:16",{"_index":2090,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:17",{"_index":2086,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:18",{"_index":2091,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window.ts:19",{"_index":2087,"title":{},"body":{"interfaces/InfoWindow.html":{}}}],["window/amap",{"_index":807,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"modules/NgxAmapModule.html":{},"miscellaneous/variables.html":{}}}],["window/info",{"_index":884,"title":{},"body":{"components/AmapInfoWindowComponent.html":{},"injectables/InfoWindowService.html":{},"miscellaneous/variables.html":{}}}],["windowchange",{"_index":834,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["windowclose",{"_index":835,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["windowopen",{"_index":836,"title":{},"body":{"components/AmapInfoWindowComponent.html":{}}}],["windowref",{"_index":1804,"title":{"injectables/WindowRef.html":{}},"body":{"injectables/DocumentRef.html":{},"interfaces/IMapAPILoaderConfig.html":{},"injectables/MapAPILoaderService.html":{},"modules/NgxAmapModule.html":{},"injectables/WindowRef.html":{}}}],["window现在会跟随它的hostmarker",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":2901,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":277,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{}}}],["wrapper.on('complete').subscribe(e",{"_index":333,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["wrapper.setcity(city",{"_index":343,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["wrapper.setcitylimit(limit",{"_index":345,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["wrapper.settype(type",{"_index":344,"title":{},"body":{"directives/AmapAutocompleteDirective.html":{}}}],["x",{"_index":1618,"title":{},"body":{"interfaces/CPixel.html":{},"interfaces/IPixel.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{}}}],["xie",{"_index":2886,"title":{},"body":{"license.html":{}}}],["y",{"_index":1532,"title":{},"body":{"interfaces/CMap.html":{},"interfaces/CPixel.html":{},"interfaces/IPixel.html":{},"interfaces/Pixel.html":{},"injectables/PixelService.html":{}}}],["yarn",{"_index":2849,"title":{},"body":{"index.html":{}}}],["yes",{"_index":190,"title":{},"body":{"interfaces/AMapEvent.html":{},"injectables/AmapAutocompleteService.html":{},"classes/AmapAutocompleteWrapper.html":{},"injectables/AmapDistrictSearchService.html":{},"classes/AmapDistrictSearchWrapper.html":{},"injectables/AmapDrivingService.html":{},"classes/AmapDrivingWrapper.html":{},"injectables/AmapGeocoderService.html":{},"classes/AmapGeocoderWrapper.html":{},"components/AmapInfoWindowComponent.html":{},"classes/AmapMouseToolWrapper.html":{},"injectables/AmapPlaceSearchService.html":{},"classes/AmapPlaceSearchWrapper.html":{},"injectables/AmapRidingService.html":{},"classes/AmapRidingWrapper.html":{},"injectables/AmapTransferService.html":{},"classes/AmapTransferWrapper.html":{},"injectables/AmapTruckDrivingService.html":{},"classes/AmapTruckDrivingWrapper.html":{},"injectables/AmapWalkingService.html":{},"classes/AmapWalkingWrapper.html":{},"interfaces/BezierCurveEditor.html":{},"interfaces/DistrictSearch.html":{},"interfaces/Editor.html":{},"interfaces/Heatmap.html":{},"injectables/IconService.html":{},"interfaces/InfoWindow.html":{},"injectables/InfoWindowService.html":{},"injectables/LabelService.html":{},"modules/NgxAmapModule.html":{},"injectables/PixelService.html":{},"injectables/SizeService.html":{},"interfaces/Text.html":{}}}],["zindex",{"_index":434,"title":{},"body":{"directives/AmapCircleMarkerDirective.html":{},"interfaces/BezierCurveOptions.html":{},"interfaces/CircleMarkerOptions.html":{},"interfaces/CircleOptions.html":{},"interfaces/EllipseOptions.html":{},"interfaces/MarkerOptions.html":{},"interfaces/PolygonOptions.html":{},"interfaces/PolylineOptions.html":{},"interfaces/RectangleOptions.html":{},"interfaces/TextOptions.html":{},"miscellaneous/variables.html":{}}}],["ziyu",{"_index":2887,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2210,"title":{},"body":{"interfaces/MapOptions.html":{},"interfaces/MarkerClusterer.html":{},"modules/NgxAmapModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["zoomchanged",{"_index":1156,"title":{},"body":{"directives/AmapToolBarDirective.html":{}}}],["zoomenable",{"_index":2211,"title":{},"body":{"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["zoomin",{"_index":1528,"title":{},"body":{"interfaces/CMap.html":{}}}],["zoomonclick",{"_index":2249,"title":{},"body":{"interfaces/MarkerClustererOptions.html":{},"interfaces/RenderObject.html":{},"miscellaneous/variables.html":{}}}],["zoomout",{"_index":1529,"title":{},"body":{"interfaces/CMap.html":{}}}],["zooms",{"_index":750,"title":{},"body":{"directives/AmapHeatmapDirective.html":{},"interfaces/HeatmapOptions.html":{},"interfaces/MapOptions.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AMapClass.html":{"url":"interfaces/AMapClass.html","title":"interface - AMapClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AMapClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Autocomplete\n                                \n                                \n                                        BezierCurve\n                                \n                                \n                                        BezierCurveEditor\n                                \n                                \n                                        Bounds\n                                \n                                \n                                        Circle\n                                \n                                \n                                        CircleEditor\n                                \n                                \n                                        CircleMarker\n                                \n                                \n                                        DistrictSearch\n                                \n                                \n                                        Driving\n                                \n                                \n                                        Ellipse\n                                \n                                \n                                        EllipseEditor\n                                \n                                \n                                        event\n                                \n                                \n                                        Geocoder\n                                \n                                \n                                        Heatmap\n                                \n                                \n                                        Icon\n                                \n                                \n                                        InfoWindow\n                                \n                                \n                                        LngLat\n                                \n                                \n                                        Map\n                                \n                                \n                                        Marker\n                                \n                                \n                                        MarkerClusterer\n                                \n                                \n                                        MouseTool\n                                \n                                \n                                        Pixel\n                                \n                                \n                                        PlaceSearch\n                                \n                                \n                                        PolyEditor\n                                \n                                \n                                        Polygon\n                                \n                                \n                                        Polyline\n                                \n                                \n                                        Rectangle\n                                \n                                \n                                        RectangleEditor\n                                \n                                \n                                        Riding\n                                \n                                \n                                        Size\n                                \n                                \n                                        Text\n                                \n                                \n                                        ToolBar\n                                \n                                \n                                        Transfer\n                                \n                                \n                                        TruckDriving\n                                \n                                \n                                        Walking\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugin\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \nplugin(name: string | string[], callback: (result: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/index.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Autocomplete\n                                    \n                                \n                                \n                                    \n                                        Autocomplete:         CAutocomplete\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CAutocomplete\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BezierCurve\n                                    \n                                \n                                \n                                    \n                                        BezierCurve:         CBezierCurve\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CBezierCurve\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BezierCurveEditor\n                                    \n                                \n                                \n                                    \n                                        BezierCurveEditor:         CBezierCurveEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CBezierCurveEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Bounds\n                                    \n                                \n                                \n                                    \n                                        Bounds:         CBounds\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CBounds\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Circle\n                                    \n                                \n                                \n                                    \n                                        Circle:         CCircle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CCircle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CircleEditor\n                                    \n                                \n                                \n                                    \n                                        CircleEditor:         CCircleEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CCircleEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CircleMarker\n                                    \n                                \n                                \n                                    \n                                        CircleMarker:         CCircleMarker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CCircleMarker\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DistrictSearch\n                                    \n                                \n                                \n                                    \n                                        DistrictSearch:         CDistrictSearch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CDistrictSearch\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Driving\n                                    \n                                \n                                \n                                    \n                                        Driving:         CDriving\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CDriving\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Ellipse\n                                    \n                                \n                                \n                                    \n                                        Ellipse:         CEllipse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CEllipse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EllipseEditor\n                                    \n                                \n                                \n                                    \n                                        EllipseEditor:         CEllipseEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CEllipseEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         AMapEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AMapEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Geocoder\n                                    \n                                \n                                \n                                    \n                                        Geocoder:         CGeocoder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CGeocoder\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Heatmap\n                                    \n                                \n                                \n                                    \n                                        Heatmap:         CHeatmap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CHeatmap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Icon\n                                    \n                                \n                                \n                                    \n                                        Icon:         CIcon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CIcon\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        InfoWindow\n                                    \n                                \n                                \n                                    \n                                        InfoWindow:         CInfoWindow\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CInfoWindow\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LngLat\n                                    \n                                \n                                \n                                    \n                                        LngLat:         CLngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CLngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Map\n                                    \n                                \n                                \n                                    \n                                        Map:         CMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Marker\n                                    \n                                \n                                \n                                    \n                                        Marker:         CMarker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CMarker\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MarkerClusterer\n                                    \n                                \n                                \n                                    \n                                        MarkerClusterer:         CMarkerClusterer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CMarkerClusterer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MouseTool\n                                    \n                                \n                                \n                                    \n                                        MouseTool:         CMouseTool\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CMouseTool\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Pixel\n                                    \n                                \n                                \n                                    \n                                        Pixel:         CPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPixel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PlaceSearch\n                                    \n                                \n                                \n                                    \n                                        PlaceSearch:         CPlaceSearch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPlaceSearch\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PolyEditor\n                                    \n                                \n                                \n                                    \n                                        PolyEditor:         CPolyEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPolyEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Polygon\n                                    \n                                \n                                \n                                    \n                                        Polygon:         CPolygon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPolygon\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Polyline\n                                    \n                                \n                                \n                                    \n                                        Polyline:         CPolyline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPolyline\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rectangle\n                                    \n                                \n                                \n                                    \n                                        Rectangle:         CRectangle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CRectangle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RectangleEditor\n                                    \n                                \n                                \n                                    \n                                        RectangleEditor:         CRectangleEditor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CRectangleEditor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Riding\n                                    \n                                \n                                \n                                    \n                                        Riding:         CRiding\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CRiding\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Size\n                                    \n                                \n                                \n                                    \n                                        Size:         CSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Text\n                                    \n                                \n                                \n                                    \n                                        Text:         CText\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CText\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ToolBar\n                                    \n                                \n                                \n                                    \n                                        ToolBar:         CToolBar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CToolBar\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Transfer\n                                    \n                                \n                                \n                                    \n                                        Transfer:         CTransfer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CTransfer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TruckDriving\n                                    \n                                \n                                \n                                    \n                                        TruckDriving:         CTruckDriving\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CTruckDriving\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Walking\n                                    \n                                \n                                \n                                    \n                                        Walking:         CWalking\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CWalking\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map, CMap } from './amap.map';\nimport { LngLat, CLngLat } from './amap.lng-lat';\nimport { Pixel, CPixel } from './amap.pixel';\nimport { Size, CSize } from './amap.size';\nimport { CIcon, Icon } from './amap.icon';\nimport { AMapEvent } from './amap.event';\nimport { CInfoWindow, InfoWindow } from './amap.info-window';\nimport { CToolBar, ToolBar } from './amap.toolbar';\nimport { ClusterStyle } from './cluster-style';\nimport { CGeocoder, Geocoder } from './geocoder/amap.geocoder';\nimport { CAutocomplete, Autocomplete } from './autocomplete/amap.autocomplete';\nimport { CPlaceSearch, PlaceSearch } from './place-search/amap.place-search';\nimport { CDistrictSearch, DistrictSearch } from './district-search/amap.district-search';\nimport { CMouseTool, MouseTool } from './amap.mouse-tool';\nimport { Bounds, CBounds } from './amap.bounds';\nimport { CMarker, Marker } from './overlays/amap.marker';\nimport { CPolyline, Polyline } from './overlays/amap.polyline';\nimport { CPolygon, Polygon } from './overlays/amap.polygon';\nimport { CCircle, Circle } from './overlays/amap.circle';\nimport { CCircleMarker, CircleMarker } from './overlays/amap.circle-marker';\nimport { Text, CText } from './overlays/amap.text';\nimport { CMarkerClusterer, MarkerClusterer } from './amap.marker-clusterer';\nimport { BezierCurve, CBezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse, CEllipse } from './overlays/amap.ellipse';\nimport { Rectangle, CRectangle } from './overlays/amap.rectangle';\nimport { CircleEditor, CCircleEditor } from './amap.editor';\nimport { PolyEditor, CPolyEditor } from './amap.editor';\nimport { BezierCurveEditor, CBezierCurveEditor } from './amap.editor';\nimport { EllipseEditor, CEllipseEditor } from './amap.editor';\nimport { RectangleEditor, CRectangleEditor } from './amap.editor';\nimport { Heatmap, CHeatmap } from './layers/amap.heatmap';\nimport { Driving, CDriving } from './driving/amap.driving';\nimport { TruckDriving, CTruckDriving } from './driving/amap.truck-driving';\nimport { Transfer, CTransfer } from './transfer/amap.transfer';\nimport { Walking, CWalking } from './walking/amap.walking';\nimport { Riding, CRiding } from './riding/amap.riding';\n\nexport interface AMapClass {\n  Map: CMap;\n  LngLat: CLngLat;\n  Pixel: CPixel;\n  Size: CSize;\n  Marker: CMarker;\n  Icon: CIcon;\n  event: AMapEvent;\n  InfoWindow: CInfoWindow;\n  Polyline: CPolyline;\n  Polygon: CPolygon;\n  ToolBar: CToolBar;\n  MarkerClusterer: CMarkerClusterer;\n  Geocoder: CGeocoder;\n  Autocomplete: CAutocomplete;\n  PlaceSearch: CPlaceSearch;\n  DistrictSearch: CDistrictSearch;\n  MouseTool: CMouseTool;\n  Circle: CCircle;\n  CircleMarker: CCircleMarker;\n  Bounds: CBounds;\n  Text: CText;\n  BezierCurve: CBezierCurve;\n  Ellipse: CEllipse;\n  Rectangle: CRectangle;\n  CircleEditor: CCircleEditor;\n  PolyEditor: CPolyEditor;\n  BezierCurveEditor: CBezierCurveEditor;\n  EllipseEditor: CEllipseEditor;\n  RectangleEditor: CRectangleEditor;\n  Heatmap: CHeatmap;\n  Driving: CDriving;\n  Transfer: CTransfer;\n  Walking: CWalking;\n  Riding: CRiding;\n  TruckDriving: CTruckDriving;\n\n  plugin(name: string | string[], callback: (result: any) => void): void;\n}\n\nexport {\n  Map, LngLat, Pixel, Size, Marker, Icon,\n  InfoWindow, Polyline, Polygon, ToolBar, MarkerClusterer,\n  ClusterStyle, Geocoder, Autocomplete, PlaceSearch, DistrictSearch,\n  Circle, CircleMarker, MouseTool, Bounds, Text, BezierCurve,\n  Ellipse, Rectangle, CircleEditor, PolyEditor, BezierCurveEditor,\n  EllipseEditor, RectangleEditor, Heatmap, Driving, Transfer, Walking,\n  Riding, TruckDriving\n};\n\n// Geocoder\nexport * from './geocoder/address-component';\nexport * from './geocoder/business-area';\nexport * from './geocoder/cross';\nexport * from './geocoder/geocode-result';\nexport * from './geocoder/geocode';\nexport * from './geocoder/geocoder-result';\nexport * from './geocoder/re-geocode-poi';\nexport * from './geocoder/re-geocode-result';\nexport * from './geocoder/re-geocode';\nexport * from './geocoder/road';\n\n// Autocomplete\nexport * from './autocomplete/autocomplete-result';\nexport * from './autocomplete/tip';\n\n// PlaceSearch\nexport * from './place-search/cinema';\nexport * from './place-search/city-info';\nexport * from './place-search/dining';\nexport * from './place-search/discount';\nexport * from './place-search/groupbuy';\nexport * from './place-search/hotel';\nexport * from './place-search/photo';\nexport * from './place-search/poi-list';\nexport * from './place-search/poi';\nexport * from './place-search/scenic';\nexport * from './place-search/search-result';\n\n// DistrictSearch\nexport * from './district-search/district-search-result';\nexport * from './district-search/district';\n\n// Layers\nexport * from './layers/amap.heatmap';\n\n// Driving\nexport * from './driving/amap.driving';\nexport * from './driving/amap.truck-driving';\nexport * from './driving/drive-route';\nexport * from './driving/drive-step';\nexport * from './driving/driving-result';\n\n// Transfer\nexport * from './transfer/amap.transfer';\nexport * from './transfer/transfer-result';\nexport * from './transfer/transfer-plan';\nexport * from './transfer/segment';\n\n// Walking\nexport * from './walking/amap.walking';\nexport * from './walking/walk-route';\nexport * from './walking/walk-step';\nexport * from './walking/walking-result';\n\n// Riding\nexport * from './riding/amap.riding';\nexport * from './riding/ride-route';\nexport * from './riding/ride-step';\nexport * from './riding/riding-result';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AMapEvent.html":{"url":"interfaces/AMapEvent.html","title":"interface - AMapEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AMapEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addDomListener\n                                \n                                \n                                    addListener\n                                \n                                \n                                    addListenerOnce\n                                \n                                \n                                    removeListener\n                                \n                                \n                                    trigger\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDomListener\n                        \n                        \n                    \n                \n            \n            \n                \naddDomListener(instance: any, eventName: string, handler: (event: any) => void, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EventListener\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addListener\n                        \n                        \n                    \n                \n            \n            \n                \naddListener(instance: any, eventName: string, handler: (event: any) => void, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EventListener\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addListenerOnce\n                        \n                        \n                    \n                \n            \n            \n                \naddListenerOnce(instance: any, eventName: string, handler: (event: any) => void, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EventListener\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeListener\n                        \n                        \n                    \n                \n            \n            \n                \nremoveListener(listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger(instance: any, eventName: string, extArgs)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.event.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    extArgs\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface AMapEvent {\n  addDomListener(instance: any, eventName: string, handler: (event?: any) => void, context?: any): EventListener;\n  addListener(instance: any, eventName: string, handler: (event?: any) => void, context?: any): EventListener;\n  addListenerOnce(instance: any, eventName: string, handler: (event?: any) => void, context?: any): EventListener;\n  removeListener(listener: EventListener): void;\n  trigger(instance: any, eventName: string, extArgs): void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddressComponent.html":{"url":"interfaces/AddressComponent.html","title":"interface - AddressComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/address-component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        building\n                                \n                                \n                                        buildingType\n                                \n                                \n                                        businessAreas\n                                \n                                \n                                        city\n                                \n                                \n                                        citycode\n                                \n                                \n                                        district\n                                \n                                \n                                        neighborhood\n                                \n                                \n                                        neighborhoodType\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                                \n                                        streetNumber\n                                \n                                \n                                        township\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        building\n                                    \n                                \n                                \n                                    \n                                        building:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buildingType\n                                    \n                                \n                                \n                                    \n                                        buildingType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        businessAreas\n                                    \n                                \n                                \n                                    \n                                        businessAreas:         BusinessArea[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BusinessArea[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        district\n                                    \n                                \n                                \n                                    \n                                        district:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighborhood\n                                    \n                                \n                                \n                                    \n                                        neighborhood:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighborhoodType\n                                    \n                                \n                                \n                                    \n                                        neighborhoodType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetNumber\n                                    \n                                \n                                \n                                    \n                                        streetNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        township\n                                    \n                                \n                                \n                                    \n                                        township:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BusinessArea } from './business-area';\n\nexport interface AddressComponent {\n  province: string;\n  city: string;\n  citycode: string;\n  district: string;\n  adcode: string;\n  township: string;\n  street: string;\n  streetNumber: string;\n  neighborhood: string;\n  neighborhoodType: string;\n  building: string;\n  buildingType: string;\n  businessAreas: BusinessArea[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AmapAutocompleteDirective.html":{"url":"directives/AmapAutocompleteDirective.html","title":"directive - AmapAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AmapAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[amapAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setCity\n                            \n                            \n                                setCityLimit\n                            \n                            \n                                setType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                citylimit\n                            \n                            \n                                datatype\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                choose\n                            \n                            \n                                complete\n                            \n                            \n                                error\n                            \n                            \n                                ready\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(autos: AmapAutocompleteService, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        autos\n                                                  \n                                                        \n                                                                        AmapAutocompleteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        city\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:27\n                            \n                        \n                \n                    \n                        输入提示时限定城市 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        citylimit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:31\n                            \n                        \n                \n                    \n                        是否强制限制在设置的城市内搜索 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        datatype\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:29\n                            \n                        \n                \n                    \n                        返回的数据类型 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:25\n                            \n                        \n                \n                    \n                        输入提示时限定POI类型，多个类型用“|”分隔，默认值：所有类别 \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        choose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:42\n                            \n                        \n                \n                    \n                        Autocomplete插件触发choose事件时触发 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        complete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:36\n                            \n                        \n                \n                    \n                        Autocomplete插件触发complete事件时触发 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:38\n                            \n                        \n                \n                    \n                        Autocomplete插件触发error事件时触发 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:34\n                            \n                        \n                \n                    \n                        插件载入完毕时触发 \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:40\n                            \n                        \n                \n                    \n                        Autocomplete插件触发select事件时触发 \n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents(wrapper: AmapAutocompleteWrapper)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    wrapper\n                                    \n                                                AmapAutocompleteWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-autocomplete'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive, Input, Output, OnDestroy, OnInit, ElementRef,\n  EventEmitter, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AutocompleteOptions } from '../../types/interface';\nimport { AmapAutocompleteService, AmapAutocompleteWrapper } from '../../services/amap-autocomplete/amap-autocomplete.service';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\n\nconst ALL_OPTIONS = [\n  'type',\n  'city',\n  'datatype',\n  'citylimit'\n];\n\n@Directive({\n  selector: 'input[amapAutocomplete]'\n})\nexport class AmapAutocompleteDirective implements OnChanges, OnInit, OnDestroy {\n  TAG = 'amap-autocomplete';\n\n  /** 输入提示时限定POI类型，多个类型用“|”分隔，默认值：所有类别 */\n  @Input() type: string;\n  /** 输入提示时限定城市 */\n  @Input() city: string;\n  /** 返回的数据类型 */\n  @Input() datatype: string;\n  /** 是否强制限制在设置的城市内搜索 */\n  @Input() citylimit: boolean;\n\n  /** 插件载入完毕时触发 */\n  @Output() ready = new EventEmitter();\n  /** Autocomplete插件触发complete事件时触发 */\n  @Output() complete = new EventEmitter();\n  /** Autocomplete插件触发error事件时触发 */\n  @Output() error = new EventEmitter();\n  /** Autocomplete插件触发select事件时触发 */\n  @Output() select = new EventEmitter();\n  /** Autocomplete插件触发choose事件时触发 */\n  @Output() choose = new EventEmitter();\n\n  private _subscription: Subscription;\n  private _plugin: Promise;\n\n  constructor(\n    private autos: AmapAutocompleteService,\n    private el: ElementRef\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._plugin) {\n      const filter = ChangeFilter.of(changes);\n      filter.has('city').subscribe(v => this.setCity(v));\n      filter.has('type').subscribe(v => this.setType(v));\n      filter.has('citylimit').subscribe(v => this.setCityLimit(v));\n    }\n  }\n\n  ngOnInit() {\n    const options = Utils.getOptionsFor(this, ALL_OPTIONS);\n    options.input = this.el.nativeElement;\n    this._plugin = this.autos.of(options);\n    this._plugin.then(wrapper => {\n      this.bindEvents(wrapper);\n      this.ready.emit(wrapper);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private bindEvents(wrapper: AmapAutocompleteWrapper) {\n    this._subscription = wrapper.on('complete').subscribe(e => this.complete.emit(e));\n    this._subscription.add(wrapper.on('error').subscribe(e => this.error.emit(e)));\n    this._subscription.add(wrapper.on('select').subscribe(e => this.select.emit(e)));\n    this._subscription.add(wrapper.on('choose').subscribe(e => this.choose.emit(e)));\n  }\n\n  // Setters\n  setCity(city: string) {\n    return this._plugin.then(wrapper => wrapper.setCity(city));\n  }\n\n  setType(type: string) {\n    return this._plugin.then(wrapper => wrapper.setType(type));\n  }\n\n  setCityLimit(limit: boolean) {\n    return this._plugin.then(wrapper => wrapper.setCityLimit(limit));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapAutocompleteService.html":{"url":"injectables/AmapAutocompleteService.html","title":"injectable - AmapAutocompleteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapAutocompleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts\n        \n\n            \n                Description\n            \n            \n                根据输入关键字提示匹配信息，可将Poi类型和城市作为输入提示的限制条件\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: AutocompleteOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                AutocompleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-autocomplete'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:57\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Autocomplete } from '../../types/class';\nimport { AutocompleteOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapAutocompleteWrapper对象将高德原生的Autocomplete对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapAutocompleteWrapper extends EventBinder {\n  private _autocomplete: Autocomplete;\n\n  constructor(opts?: AutocompleteOptions) {\n    super();\n    this._autocomplete = new AMap.Autocomplete(opts);\n  }\n\n  get native(): Autocomplete {\n    return this._autocomplete;\n  }\n\n  /**\n   * 用于侦听Autocomplete事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._autocomplete, event);\n  }\n\n  search(address: string): Promise {\n    return new Promise(resolve => this._autocomplete.search(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setCity(city: string) {\n    this._autocomplete.setCity(city);\n  }\n\n  setType(type: string) {\n    this._autocomplete.setType(type);\n  }\n\n  setCityLimit(limit: boolean) {\n    this._autocomplete.setCityLimit(limit);\n  }\n}\n/**\n * 根据输入关键字提示匹配信息，可将Poi类型和城市作为输入提示的限制条件\n */\n@Injectable()\nexport class AmapAutocompleteService {\n  TAG = 'amap-autocomplete';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {}\n\n  of(opts?: AutocompleteOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Autocomplete');\n    }\n\n    return this._plugin.then(() => new AmapAutocompleteWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapAutocompleteWrapper.html":{"url":"classes/AmapAutocompleteWrapper.html","title":"class - AmapAutocompleteWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapAutocompleteWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapAutocompleteWrapper对象将高德原生的Autocomplete对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _autocomplete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                setCity\n                            \n                            \n                                setCityLimit\n                            \n                            \n                                setType\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: AutocompleteOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        AutocompleteOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _autocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:30\n                \n            \n\n\n            \n                \n                    用于侦听Autocomplete事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Autocomplete } from '../../types/class';\nimport { AutocompleteOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapAutocompleteWrapper对象将高德原生的Autocomplete对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapAutocompleteWrapper extends EventBinder {\n  private _autocomplete: Autocomplete;\n\n  constructor(opts?: AutocompleteOptions) {\n    super();\n    this._autocomplete = new AMap.Autocomplete(opts);\n  }\n\n  get native(): Autocomplete {\n    return this._autocomplete;\n  }\n\n  /**\n   * 用于侦听Autocomplete事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._autocomplete, event);\n  }\n\n  search(address: string): Promise {\n    return new Promise(resolve => this._autocomplete.search(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setCity(city: string) {\n    this._autocomplete.setCity(city);\n  }\n\n  setType(type: string) {\n    this._autocomplete.setType(type);\n  }\n\n  setCityLimit(limit: boolean) {\n    this._autocomplete.setCityLimit(limit);\n  }\n}\n/**\n * 根据输入关键字提示匹配信息，可将Poi类型和城市作为输入提示的限制条件\n */\n@Injectable()\nexport class AmapAutocompleteService {\n  TAG = 'amap-autocomplete';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {}\n\n  of(opts?: AutocompleteOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Autocomplete');\n    }\n\n    return this._plugin.then(() => new AmapAutocompleteWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AmapCircleMarkerDirective.html":{"url":"directives/AmapCircleMarkerDirective.html","title":"directive - AmapCircleMarkerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AmapCircleMarkerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        amap-circle-marker\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cm\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvent\n                            \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                getCenter\n                            \n                            \n                                getExtData\n                            \n                            \n                                getOptions\n                            \n                            \n                                getRadius\n                            \n                            \n                                hide\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setCenter\n                            \n                            \n                                setExtData\n                            \n                            \n                                setOptions\n                            \n                            \n                                setRadius\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bubble\n                            \n                            \n                                center\n                            \n                            \n                                cursor\n                            \n                            \n                                extData\n                            \n                            \n                                fillColor\n                            \n                            \n                                fillOpacity\n                            \n                            \n                                hidden\n                            \n                            \n                                options\n                            \n                            \n                                radius\n                            \n                            \n                                strokeColor\n                            \n                            \n                                strokeOpacity\n                            \n                            \n                                strokeWeight\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                circleMarkerClick\n                            \n                            \n                                circleMarkerHide\n                            \n                            \n                                circleMarkerShow\n                            \n                            \n                                dblClick\n                            \n                            \n                                mouseDown\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                mouseUp\n                            \n                            \n                                ready\n                            \n                            \n                                rightClick\n                            \n                            \n                                touchEnd\n                            \n                            \n                                touchMove\n                            \n                            \n                                touchStart\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cms: CircleMarkerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cms\n                                                  \n                                                        \n                                                                        CircleMarkerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bubble\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :         ILngLat\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cursor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        extData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fillColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fillOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         CircleMarkerOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strokeWeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:32\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        circleMarkerClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        circleMarkerHide\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        circleMarkerShow\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dblClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOut\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseOver\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rightClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touchStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:62\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvent(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(lnglat: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: CircleMarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                CircleMarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(radius: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _cm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-circle-marker'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, Output, OnDestroy,\n  EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CircleMarker, Map, LngLat } from '../../types/class';\nimport { CircleMarkerOptions, ILngLat } from '../../types/interface';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\nimport { CircleMarkerService } from '../../services/circle-marker/circle-marker.service';\n\nconst ALL_OPTIONS = [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'extData'\n];\n\n@Directive({\n  selector: 'amap-circle-marker',\n  exportAs: 'circle-marker'\n})\nexport class AmapCircleMarkerDirective implements OnChanges, OnDestroy {\n  TAG = 'amap-circle-marker';\n\n  // These properties are supported in CircleMarkerOptions:\n  @Input() zIndex: number;\n  @Input() center: ILngLat;\n  @Input() bubble: boolean;\n  @Input() cursor: string;\n  @Input() radius: number;\n  @Input() strokeColor: string;\n  @Input() strokeOpacity: number;\n  @Input() strokeWeight: number;\n  @Input() fillColor: string;\n  @Input() fillOpacity: number;\n  @Input() extData: any;\n\n  // This options property will override other property:\n  @Input() options: CircleMarkerOptions;\n\n  // Extra property:\n  @Input() hidden = false;\n\n  // amap-circle events:\n  @Output() circleMarkerClick = new EventEmitter();\n  @Output() ready = new EventEmitter();\n  @Output() dblClick = new EventEmitter();\n  @Output() rightClick = new EventEmitter();\n  @Output() circleMarkerHide = new EventEmitter();\n  @Output() circleMarkerShow = new EventEmitter();\n  @Output() mouseDown = new EventEmitter();\n  @Output() mouseUp = new EventEmitter();\n  @Output() mouseOver = new EventEmitter();\n  @Output() mouseOut = new EventEmitter();\n  @Output() change = new EventEmitter();\n  @Output() touchStart = new EventEmitter();\n  @Output() touchMove = new EventEmitter();\n  @Output() touchEnd = new EventEmitter();\n\n  private _cm: Promise;\n  private _subscriptions: Subscription;\n\n  constructor(\n    private cms: CircleMarkerService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n\n    if (!this._cm) {\n      const options = this.options || Utils.getOptionsFor(this, ALL_OPTIONS);\n      this._cm = this.cms.create(options);\n      this.bindEvents();\n      this._cm.then(p => this.ready.emit(p));\n    } else {\n      filter.has('options').subscribe(v => this.setOptions(v || {}));\n      filter.has('extData').subscribe(v => this.setExtData(v));\n      filter.has('radius').subscribe(v => this.setRadius(v));\n      filter.notEmpty('center').subscribe(v => this.setCenter(v));\n    }\n\n    filter.has('hidden').subscribe(v => v ? this.hide() : this.show());\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this.cms.destroy(this._cm);\n  }\n\n  private bindEvents() {\n    this._subscriptions = this.bindEvent('click').subscribe(e => this.circleMarkerClick.emit(e));\n    this._subscriptions.add(this.bindEvent('dblclick').subscribe(e => this.dblClick.emit(e)));\n    this._subscriptions.add(this.bindEvent('rightclick').subscribe(e => this.rightClick.emit(e)));\n    this._subscriptions.add(this.bindEvent('hide').subscribe(e => this.circleMarkerHide.emit(e)));\n    this._subscriptions.add(this.bindEvent('show').subscribe(e => this.circleMarkerShow.emit(e)));\n    this._subscriptions.add(this.bindEvent('mousedown').subscribe(e => this.mouseDown.emit(e)));\n    this._subscriptions.add(this.bindEvent('mouseup').subscribe(e => this.mouseUp.emit(e)));\n    this._subscriptions.add(this.bindEvent('mouseover').subscribe(e => this.mouseOver.emit(e)));\n    this._subscriptions.add(this.bindEvent('mouseout').subscribe(e => this.mouseOut.emit(e)));\n    this._subscriptions.add(this.bindEvent('change').subscribe(e => this.change.emit(e)));\n    this._subscriptions.add(this.bindEvent('touchstart').subscribe(e => this.touchStart.emit(e)));\n    this._subscriptions.add(this.bindEvent('touchmove').subscribe(e => this.touchMove.emit(e)));\n    this._subscriptions.add(this.bindEvent('touchend').subscribe(e => this.touchEnd.emit(e)));\n  }\n\n  private bindEvent(event: string) {\n    return this.cms.bindEvent(this._cm, event);\n  }\n\n  // Public methods:\n  show(): Promise {\n    return this._cm.then(c => c.show());\n  }\n\n  hide(): Promise {\n    return this._cm.then(c => c.hide());\n  }\n\n  // Setters:\n  setCenter(lnglat: LngLat|ILngLat): Promise {\n    return this._cm.then(c => c.setCenter(lnglat));\n  }\n\n  setRadius(radius: number): Promise {\n    return this._cm.then(c => c.setRadius(radius));\n  }\n\n  setOptions(opt: CircleMarkerOptions): Promise {\n    return this._cm.then(c => c.setOptions(opt));\n  }\n\n  setExtData(ext: any): Promise {\n    return this._cm.then(c => c.setExtData(ext));\n  }\n\n  // Getters:\n  getCenter(): Promise {\n    return this._cm.then(c => c.getCenter());\n  }\n\n  getRadius(): Promise {\n    return this._cm.then(c => c.getRadius());\n  }\n\n  getOptions(): Promise {\n    return this._cm.then(c => c.getOptions());\n  }\n\n  getExtData(): Promise {\n    return this._cm.then(c => c.getExtData());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapDistrictSearchService.html":{"url":"injectables/AmapDistrictSearchService.html","title":"injectable - AmapDistrictSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapDistrictSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts\n        \n\n            \n                Description\n            \n            \n                行政区域搜索服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: DistrictSearchOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                DistrictSearchOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-district-search'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:55\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, DistrictSearch } from '../../types/class';\nimport { DistrictSearchOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DistrictSearchResult } from '../../types/class/district-search/district-search-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapDistrictSearchWrapper对象将高德原生的DistrictSearch对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapDistrictSearchWrapper extends EventBinder {\n  private _districtSearch: DistrictSearch;\n\n  constructor(opts?: DistrictSearchOptions) {\n    super();\n    this._districtSearch = new AMap.DistrictSearch(opts);\n  }\n\n  get native(): DistrictSearch {\n    return this._districtSearch;\n  }\n\n  /**\n   * 用于侦听DistrictSearch事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._districtSearch, event);\n  }\n\n  search(address: string, opts?: DistrictSearchOptions): Promise {\n    return new Promise(resolve => this._districtSearch.search(address, (status, result) => {\n      resolve({ status, result });\n    }, opts));\n  }\n\n  setLevel(level: string) {\n    this._districtSearch.setLevel(level);\n  }\n\n  setSubdistrict(district: number) {\n    this._districtSearch.setSubdistrict(district);\n  }\n}\n\n/**\n * 行政区域搜索服务\n */\n@Injectable()\nexport class AmapDistrictSearchService {\n  TAG = 'amap-district-search';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  of(opts?: DistrictSearchOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.DistrictSearch');\n    }\n\n    return this._plugin.then(() => new AmapDistrictSearchWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapDistrictSearchWrapper.html":{"url":"classes/AmapDistrictSearchWrapper.html","title":"class - AmapDistrictSearchWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapDistrictSearchWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapDistrictSearchWrapper对象将高德原生的DistrictSearch对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _districtSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                setLevel\n                            \n                            \n                                setSubdistrict\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: DistrictSearchOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        DistrictSearchOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _districtSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DistrictSearch\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:31\n                \n            \n\n\n            \n                \n                    用于侦听DistrictSearch事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(address: string, opts?: DistrictSearchOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                DistrictSearchOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLevel\n                        \n                        \n                    \n                \n            \n            \n                \nsetLevel(level: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubdistrict\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubdistrict(district: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    district\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, DistrictSearch } from '../../types/class';\nimport { DistrictSearchOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DistrictSearchResult } from '../../types/class/district-search/district-search-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapDistrictSearchWrapper对象将高德原生的DistrictSearch对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapDistrictSearchWrapper extends EventBinder {\n  private _districtSearch: DistrictSearch;\n\n  constructor(opts?: DistrictSearchOptions) {\n    super();\n    this._districtSearch = new AMap.DistrictSearch(opts);\n  }\n\n  get native(): DistrictSearch {\n    return this._districtSearch;\n  }\n\n  /**\n   * 用于侦听DistrictSearch事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._districtSearch, event);\n  }\n\n  search(address: string, opts?: DistrictSearchOptions): Promise {\n    return new Promise(resolve => this._districtSearch.search(address, (status, result) => {\n      resolve({ status, result });\n    }, opts));\n  }\n\n  setLevel(level: string) {\n    this._districtSearch.setLevel(level);\n  }\n\n  setSubdistrict(district: number) {\n    this._districtSearch.setSubdistrict(district);\n  }\n}\n\n/**\n * 行政区域搜索服务\n */\n@Injectable()\nexport class AmapDistrictSearchService {\n  TAG = 'amap-district-search';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  of(opts?: DistrictSearchOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.DistrictSearch');\n    }\n\n    return this._plugin.then(() => new AmapDistrictSearchWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapDrivingService.html":{"url":"injectables/AmapDrivingService.html","title":"injectable - AmapDrivingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapDrivingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts\n        \n\n            \n                Description\n            \n            \n                驾车路线规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: DrivingOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                DrivingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-driving'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:92\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:99\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Driving, LngLat } from '../../types/class';\nimport { DrivingOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DrivingResult } from '../../types/class/driving/driving-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapDrivingWrapper对象将高德原生的Driving对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapDrivingWrapper extends EventBinder {\n  private _driving: Driving;\n\n  constructor(opts?: DrivingOptions) {\n    super();\n    this._driving = new AMap.Driving(opts);\n  }\n\n  get native(): Driving {\n    return this._driving;\n  }\n\n  /**\n   * 用于侦听Driving事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._driving, event);\n  }\n\n  search(origin: any[], destination?: ILngLat, opts?: any): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._driving.search(origin, destination, opts, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._driving.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  setPolicy(policy: any) {\n    this._driving.setPolicy(policy);\n  }\n\n  setAvoidPolygons(path: ILngLat[]) {\n    this._driving.setAvoidPolygons(path);\n  }\n\n  setAvoidRoad(road: string) {\n    this._driving.setAvoidRoad(road);\n  }\n\n  clearAvoidRoad() {\n    this._driving.clearAvoidRoad();\n  }\n\n  clearAvoidPolygons() {\n    this._driving.clearAvoidPolygons();\n  }\n\n  clear() {\n    this._driving.clear();\n  }\n\n  getAvoidPolygons(): LngLat[] {\n    return this._driving.getAvoidPolygons();\n  }\n  getAvoidRoad(): string {\n    return this._driving.getAvoidRoad();\n  }\n\n  setProvinceAndNumber(province: string, number: string) {\n    this._driving.setProvinceAndNumber(province, number);\n  }\n\n  searchOnAMAP(obj: any) {\n    this._driving.searchOnAMAP(obj);\n  }\n}\n\n/**\n * 驾车路线规划服务\n */\n@Injectable()\nexport class AmapDrivingService {\n  TAG = 'amap-driving';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Driving');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: DrivingOptions): Promise {\n    return this.loaded.then(() => new AmapDrivingWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapDrivingWrapper.html":{"url":"classes/AmapDrivingWrapper.html","title":"class - AmapDrivingWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapDrivingWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapDrivingWrapper对象将高德原生的Driving对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _driving\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                clearAvoidPolygons\n                            \n                            \n                                clearAvoidRoad\n                            \n                            \n                                getAvoidPolygons\n                            \n                            \n                                getAvoidRoad\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                searchOnAMAP\n                            \n                            \n                                setAvoidPolygons\n                            \n                            \n                                setAvoidRoad\n                            \n                            \n                                setPolicy\n                            \n                            \n                                setProvinceAndNumber\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: DrivingOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        DrivingOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _driving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Driving\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \nclearAvoidPolygons()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \nclearAvoidRoad()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvoidPolygons()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvoidRoad()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:31\n                \n            \n\n\n            \n                \n                    用于侦听Driving事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: any[], destination?: ILngLat, opts?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \nsetAvoidPolygons(path: ILngLat[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                ILngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \nsetAvoidRoad(road: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    road\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolicy(policy: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    policy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvinceAndNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvinceAndNumber(province: string, number: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    province\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Driving, LngLat } from '../../types/class';\nimport { DrivingOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DrivingResult } from '../../types/class/driving/driving-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapDrivingWrapper对象将高德原生的Driving对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapDrivingWrapper extends EventBinder {\n  private _driving: Driving;\n\n  constructor(opts?: DrivingOptions) {\n    super();\n    this._driving = new AMap.Driving(opts);\n  }\n\n  get native(): Driving {\n    return this._driving;\n  }\n\n  /**\n   * 用于侦听Driving事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._driving, event);\n  }\n\n  search(origin: any[], destination?: ILngLat, opts?: any): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._driving.search(origin, destination, opts, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._driving.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  setPolicy(policy: any) {\n    this._driving.setPolicy(policy);\n  }\n\n  setAvoidPolygons(path: ILngLat[]) {\n    this._driving.setAvoidPolygons(path);\n  }\n\n  setAvoidRoad(road: string) {\n    this._driving.setAvoidRoad(road);\n  }\n\n  clearAvoidRoad() {\n    this._driving.clearAvoidRoad();\n  }\n\n  clearAvoidPolygons() {\n    this._driving.clearAvoidPolygons();\n  }\n\n  clear() {\n    this._driving.clear();\n  }\n\n  getAvoidPolygons(): LngLat[] {\n    return this._driving.getAvoidPolygons();\n  }\n  getAvoidRoad(): string {\n    return this._driving.getAvoidRoad();\n  }\n\n  setProvinceAndNumber(province: string, number: string) {\n    this._driving.setProvinceAndNumber(province, number);\n  }\n\n  searchOnAMAP(obj: any) {\n    this._driving.searchOnAMAP(obj);\n  }\n}\n\n/**\n * 驾车路线规划服务\n */\n@Injectable()\nexport class AmapDrivingService {\n  TAG = 'amap-driving';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Driving');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: DrivingOptions): Promise {\n    return this.loaded.then(() => new AmapDrivingWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapGeocoderService.html":{"url":"injectables/AmapGeocoderService.html","title":"injectable - AmapGeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapGeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts\n        \n\n            \n                Description\n            \n            \n                地理编码与逆地理编码服务，用于地址描述与坐标之间的转换。\n使用'of()'方法可以得到Promise对象。\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            // 引入service和wrapper类型声明\nimport { AmapGeocoderService, AmapGeocoderWrapper } from 'ngx-amap';\n\n// 定义wrapper的缓存：\nprivate geoPromise: Promise;\n\n// 使用service构造wrapper对象\nconstructor(private AmapGeocoder: AmapGeocoderService) {\n// 使用 AmapGeocoderService 创建 promise wrapper\nthis.geoPromise = AmapGeocoder.of({\ncity: \"010\", //城市，默认：“全国”\nradius: 1000 //范围，默认：500\n});\n}\n\n// 使用AMap.Geocoder的wrapper对象\nthis.geoPromise.then(geocoder => geocoder.getLocation(this.address))\n.then(data => {\nconsole.log('get location of address:', this.address);\nconsole.log('status:', data.status);\nconsole.log('result:', data.result);\n\nif (data.status === 'complete' && data.result.info === 'OK') {\nconsole.log(data.result.geocodes[0].location);\nconsole.log(data.result.geocodes[0].formattedAddress);\n}\n});\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: GeocoderOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                GeocoderOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-geocoder'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:86\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Geocoder } from '../../types/class';\nimport { GeocoderOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapGeocoderWrapper对象将高德原生的Geocoder对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapGeocoderWrapper extends EventBinder {\n  private _geocoder: Geocoder;\n\n  constructor(opts?: GeocoderOptions) {\n    super();\n    this._geocoder = new AMap.Geocoder(opts);\n  }\n\n  get native(): Geocoder {\n    return this._geocoder;\n  }\n\n  /**\n   * 用于侦听Geocoder事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._geocoder, event);\n  }\n\n  getLocation(address: string): Promise {\n    return new Promise(resolve => this._geocoder.getLocation(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setCity(city: string): void {\n    this._geocoder.setCity(city);\n  }\n\n  getAddress(location: ILngLat|ILngLat[]): Promise {\n    return new Promise(resolve => this._geocoder.getAddress(location, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n}\n\n/**\n * 地理编码与逆地理编码服务，用于地址描述与坐标之间的转换。\n * 使用'of()'方法可以得到Promise对象。\n *\n * @example\n * // 引入service和wrapper类型声明\n * import { AmapGeocoderService, AmapGeocoderWrapper } from 'ngx-amap';\n *\n * // 定义wrapper的缓存：\n * private geoPromise: Promise;\n *\n * // 使用service构造wrapper对象\n * constructor(private AmapGeocoder: AmapGeocoderService) {\n *   // 使用 AmapGeocoderService 创建 promise wrapper\n *   this.geoPromise = AmapGeocoder.of({\n *     city: \"010\", //城市，默认：“全国”\n *     radius: 1000 //范围，默认：500\n *   });\n * }\n *\n * // 使用AMap.Geocoder的wrapper对象\n * this.geoPromise.then(geocoder => geocoder.getLocation(this.address))\n *   .then(data => {\n *     console.log('get location of address:', this.address);\n *     console.log('status:', data.status);\n *     console.log('result:', data.result);\n *\n *     if (data.status === 'complete' && data.result.info === 'OK') {\n *       console.log(data.result.geocodes[0].location);\n *       console.log(data.result.geocodes[0].formattedAddress);\n *     }\n *  });\n */\n@Injectable()\nexport class AmapGeocoderService {\n  TAG = 'amap-geocoder';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {}\n\n  of(opts?: GeocoderOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Geocoder');\n    }\n\n    return this._plugin.then(() => new AmapGeocoderWrapper(opts));\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapGeocoderWrapper.html":{"url":"classes/AmapGeocoderWrapper.html","title":"class - AmapGeocoderWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapGeocoderWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapGeocoderWrapper对象将高德原生的Geocoder对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAddress\n                            \n                            \n                                getLocation\n                            \n                            \n                                on\n                            \n                            \n                                setCity\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: GeocoderOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        GeocoderOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _geocoder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddress\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddress(location: ILngLat | ILngLat[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                ILngLat | ILngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:30\n                \n            \n\n\n            \n                \n                    用于侦听Geocoder事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Geocoder } from '../../types/class';\nimport { GeocoderOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapGeocoderWrapper对象将高德原生的Geocoder对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapGeocoderWrapper extends EventBinder {\n  private _geocoder: Geocoder;\n\n  constructor(opts?: GeocoderOptions) {\n    super();\n    this._geocoder = new AMap.Geocoder(opts);\n  }\n\n  get native(): Geocoder {\n    return this._geocoder;\n  }\n\n  /**\n   * 用于侦听Geocoder事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._geocoder, event);\n  }\n\n  getLocation(address: string): Promise {\n    return new Promise(resolve => this._geocoder.getLocation(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setCity(city: string): void {\n    this._geocoder.setCity(city);\n  }\n\n  getAddress(location: ILngLat|ILngLat[]): Promise {\n    return new Promise(resolve => this._geocoder.getAddress(location, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n}\n\n/**\n * 地理编码与逆地理编码服务，用于地址描述与坐标之间的转换。\n * 使用'of()'方法可以得到Promise对象。\n *\n * @example\n * // 引入service和wrapper类型声明\n * import { AmapGeocoderService, AmapGeocoderWrapper } from 'ngx-amap';\n *\n * // 定义wrapper的缓存：\n * private geoPromise: Promise;\n *\n * // 使用service构造wrapper对象\n * constructor(private AmapGeocoder: AmapGeocoderService) {\n *   // 使用 AmapGeocoderService 创建 promise wrapper\n *   this.geoPromise = AmapGeocoder.of({\n *     city: \"010\", //城市，默认：“全国”\n *     radius: 1000 //范围，默认：500\n *   });\n * }\n *\n * // 使用AMap.Geocoder的wrapper对象\n * this.geoPromise.then(geocoder => geocoder.getLocation(this.address))\n *   .then(data => {\n *     console.log('get location of address:', this.address);\n *     console.log('status:', data.status);\n *     console.log('result:', data.result);\n *\n *     if (data.status === 'complete' && data.result.info === 'OK') {\n *       console.log(data.result.geocodes[0].location);\n *       console.log(data.result.geocodes[0].formattedAddress);\n *     }\n *  });\n */\n@Injectable()\nexport class AmapGeocoderService {\n  TAG = 'amap-geocoder';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {}\n\n  of(opts?: GeocoderOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Geocoder');\n    }\n\n    return this._plugin.then(() => new AmapGeocoderWrapper(opts));\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AmapHeatmapDirective.html":{"url":"directives/AmapHeatmapDirective.html","title":"directive - AmapHeatmapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AmapHeatmapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        amap-heatmap\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _heatmap\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                    Private\n                                bindHeatmapEvent\n                            \n                            \n                                getDataSet\n                            \n                            \n                                getMap\n                            \n                            \n                                hide\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDataSet\n                            \n                            \n                                setOptions\n                            \n                            \n                                show\n                            \n                            \n                                    Private\n                                unbindEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataset\n                            \n                            \n                                gradient\n                            \n                            \n                                hidden\n                            \n                            \n                                opacity\n                            \n                            \n                                options\n                            \n                            \n                                radius\n                            \n                            \n                                zooms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ready\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hms: HeatmapService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hms\n                                                  \n                                                        \n                                                                        HeatmapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataset\n                    \n                \n                \n                    \n                        Type :         HeatmapData\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gradient\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         HeatmapOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zooms\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:28\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:38\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindHeatmapEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindHeatmapEvent(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataSet\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataSet()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDataSet\n                        \n                        \n                    \n                \n            \n            \n                \nsetDataSet(data: HeatmapData)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                HeatmapData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: HeatmapOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                HeatmapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unbindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unbindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _heatmap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-heatmap'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, Output, OnDestroy, OnInit,\n  EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Heatmap, Map, HeatmapData } from '../../types/class';\nimport { HeatmapOptions } from '../../types/interface';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\nimport { HeatmapService } from '../../services/heatmap/heatmap.service';\n\nconst ALL_OPTIONS = [\n  'radius',\n  'gradient',\n  'opacity',\n  'zooms'\n];\n\n@Directive({\n  selector: 'amap-heatmap',\n  exportAs: 'heatmap'\n})\nexport class AmapHeatmapDirective implements OnChanges, OnInit, OnDestroy {\n  TAG = 'amap-heatmap';\n\n  // These properties are supported in HeatmapOptions:\n  @Input() radius: number;\n  @Input() gradient: any;\n  @Input() opacity: number[];\n  @Input() zooms: number[];\n\n  // This options property will override other property:\n  @Input() options: HeatmapOptions;\n  @Input() dataset: HeatmapData;\n\n  // Extra property:\n  @Input() hidden = false;\n\n  // amap-tool-bar events:\n  @Output() ready = new EventEmitter();\n\n  private _heatmap: Promise;\n\n  constructor(\n    private hms: HeatmapService\n  ) {}\n\n  ngOnInit() { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n\n    if (!this._heatmap) {\n      const options = this.options || Utils.getOptionsFor(this, ALL_OPTIONS);\n      this._heatmap = this.hms.create(options);\n      this.bindEvents();\n      this._heatmap.then(t => this.ready.emit(t));\n      this.hidden ? this.hide() : this.show();\n    } else {\n      filter.has('options').subscribe(v => this.setOptions(v || {}));\n    }\n\n    filter.notEmpty('dataset').subscribe(v => this.setDataSet(v));\n    filter.has('hidden').subscribe(v => v ? this.hide() : this.show());\n  }\n\n  ngOnDestroy() {\n    this.unbindEvents();\n    this.hms.destroy(this._heatmap);\n  }\n\n  private bindEvents() {\n  }\n\n  private bindHeatmapEvent(event: string) {\n    return this.hms.bindEvent(this._heatmap, event);\n  }\n\n  private unbindEvents() {\n  }\n\n  // Public methods:\n  show(): Promise {\n    return this._heatmap.then(t => t.show());\n  }\n\n  hide(): Promise {\n    return this._heatmap.then(t => t.hide());\n  }\n\n  // Setters:\n  setOptions(opt: HeatmapOptions): Promise {\n    return this._heatmap.then(p => p.setOptions(opt));\n  }\n\n  setDataSet(data: HeatmapData): Promise {\n    return this._heatmap.then(p => p.setDataSet(data));\n  }\n\n  // Getters:\n  getDataSet(): Promise {\n    return this._heatmap.then(t => t.getDataSet());\n  }\n\n  getMap(): Promise {\n    return this._heatmap.then(t => t.getMap());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmapInfoWindowComponent.html":{"url":"components/AmapInfoWindowComponent.html","title":"component - AmapInfoWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmapInfoWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n            \n                exportAs\n                info-window\n            \n\n\n\n\n\n\n\n            \n                selector\n                amap-info-window\n            \n\n            \n                styleUrls\n                amap-info-window.component.scss\n            \n\n\n\n            \n                templateUrl\n                amap-info-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _infoWindow\n                            \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                content\n                            \n                            \n                                hostMarker\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                close\n                            \n                            \n                                getContent\n                            \n                            \n                                getIsOpen\n                            \n                            \n                                getPosition\n                            \n                            \n                                getSize\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                setContent\n                            \n                            \n                                setPosition\n                            \n                            \n                                setSize\n                            \n                            \n                                toggleOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoMove\n                            \n                            \n                                closeWhenClickMap\n                            \n                            \n                                isCustom\n                            \n                            \n                                isOpen\n                            \n                            \n                                offset\n                            \n                            \n                                position\n                            \n                            \n                                showShadow\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpenChange\n                            \n                            \n                                windowChange\n                            \n                            \n                                windowClose\n                            \n                            \n                                windowOpen\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, logger: LoggerService, infoWindows: InfoWindowService, sizes: SizeService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        infoWindows\n                                                  \n                                                        \n                                                                        InfoWindowService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sizes\n                                                  \n                                                        \n                                                                        SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoMove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeWhenClickMap\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCustom\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Type :         IPixel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         ILngLat\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         ISize\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isOpenChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        windowChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        windowClose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        windowOpen\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:46\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsOpen\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsOpen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(position?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContent\n                        \n                        \n                    \n                \n            \n            \n                \nsetContent(content: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(position: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetSize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOpen\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOpen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _infoWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hostMarker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-info-window'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, Input,\n  OnDestroy, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoggerService } from '../../services/logger/logger.service';\nimport { LngLat, InfoWindow, Marker, Size, Text } from '../../types/class';\nimport { ILngLat, ISize, IPixel, InfoWindowOptions } from '../../types/interface';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\nimport { InfoWindowService } from '../../services/info-window/info-window.service';\nimport { SizeService } from '../../services/size/size.service';\n\nconst ALL_OPTIONS = [\n  'isCustom',\n  'autoMove',\n  'closeWhenClickMap',\n  'content',\n  'size',\n  'offset',\n  'position',\n  'showShadow'\n];\n\n@Component({\n  selector: 'amap-info-window',\n  templateUrl: 'amap-info-window.component.html',\n  styleUrls: ['amap-info-window.component.scss'],\n  exportAs: 'info-window'\n})\nexport class AmapInfoWindowComponent implements OnInit, OnDestroy, OnChanges {\n  TAG = 'amap-info-window';\n\n  // These properties are supported in InfoWindowOptions:\n  @Input() isCustom: boolean;\n  @Input() autoMove: boolean;\n  @Input() closeWhenClickMap: boolean;\n  @Input() size: ISize;\n  @Input() offset: IPixel;\n  @Input() position: ILngLat;\n  @Input() showShadow: boolean;\n\n  // Extra property:\n  @Input() isOpen = false;\n\n  // amap-info-window events:\n  @Output() isOpenChange = new EventEmitter();\n  @Output() windowOpen = new EventEmitter();\n  @Output() windowClose = new EventEmitter();\n  @Output() windowChange = new EventEmitter();\n\n  content: any;\n  hostMarker: Promise;\n  private _infoWindow: Promise;\n  private _subscriptions: Subscription;\n\n  constructor(\n    private el: ElementRef,\n    private logger: LoggerService,\n    private infoWindows: InfoWindowService,\n    private sizes: SizeService\n  ) {}\n\n  ngOnInit() {\n    this.content = this.el.nativeElement.querySelector('.amap-info-window-content');\n    const options = Utils.getOptionsFor(this, ALL_OPTIONS);\n    this.logger.d(this.TAG, 'info window options:', options);\n    this._infoWindow = this.infoWindows.create(options);\n    this.bindEvents();\n    this.toggleOpen();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._infoWindow) { return; }\n\n    const filter = ChangeFilter.of(changes);\n    filter.has('content').subscribe(v => this.setContent(v));\n    filter.has('isOpen').subscribe(v => this.toggleOpen());\n    filter.notEmpty('position').subscribe(v => this.setPosition(v));\n    filter.notEmpty('size').subscribe(v => this.setSize(v));\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this.infoWindows.destroy(this._infoWindow);\n  }\n\n  private bindEvents() {\n    this._subscriptions = this.infoWindows.bindEvent(this._infoWindow, 'change').subscribe(e => this.windowChange.emit(e));\n    this._subscriptions.add(this.infoWindows.bindEvent(this._infoWindow, 'open').subscribe(e => {\n      this.windowOpen.emit(e);\n      if (!this.isOpen) {\n        this.isOpenChange.emit(true);\n      }\n    }));\n    this._subscriptions.add(this.infoWindows.bindEvent(this._infoWindow, 'close').subscribe(e => {\n      this.windowClose.emit(e);\n      if (this.isOpen) {\n        this.isOpenChange.emit(false);\n      }\n    }));\n  }\n\n  // public methods:\n  toggleOpen() {\n    this.logger.d(this.TAG, 'toggle open');\n    this.isOpen ? this.open() : this.close();\n  }\n\n  open(position?: ILngLat): Promise {\n    return this._infoWindow.then(infoWindow => {\n      if (this.hostMarker) {\n        return this.hostMarker.then(marker => this.infoWindows.open(infoWindow, marker.getPosition()));\n      } else if (position) {\n        return this.infoWindows.open(infoWindow, position);\n      } else if (this.position) {\n        return this.infoWindows.open(infoWindow, this.position);\n      } else {\n        return this.infoWindows.open(infoWindow);\n      }\n    });\n  }\n\n  close(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.close());\n  }\n\n  // Setters:\n  setContent(content: any): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.setContent(content));\n  }\n\n  setPosition(position: ILngLat): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.setPosition(position));\n  }\n\n  setSize(size: ISize): Promise {\n    return this._infoWindow.then(infoWindow => {\n      const value = this.sizes.create(size, 'size');\n      infoWindow.setSize(value);\n    });\n  }\n\n  // Getters:\n  getIsOpen(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.getIsOpen());\n  }\n\n  getContent(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.getContent());\n  }\n\n  getPosition(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.getPosition());\n  }\n\n  getSize(): Promise {\n    return this._infoWindow.then(infoWindow => infoWindow.getSize());\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n    \n                \n                    amap-info-window.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmapInfoWindowComponent', 'selector': 'amap-info-window'},{'name': 'NgxAmapComponent', 'selector': 'ngx-amap'}];\n    var DIRECTIVES = [{'name': 'AmapAutocompleteDirective', 'selector': 'input[amapAutocomplete]'},{'name': 'AmapBezierCurveDirective', 'selector': 'amap-bezier-curve'},{'name': 'AmapCircleDirective', 'selector': 'amap-circle'},{'name': 'AmapCircleMarkerDirective', 'selector': 'amap-circle-marker'},{'name': 'AmapEllipseDirective', 'selector': 'amap-ellipse'},{'name': 'AmapHeatmapDirective', 'selector': 'amap-heatmap'},{'name': 'AmapMarkerClustererDirective', 'selector': 'amap-marker-clusterer'},{'name': 'AmapMarkerDirective', 'selector': 'amap-marker'},{'name': 'AmapPolygonDirective', 'selector': 'amap-polygon'},{'name': 'AmapPolylineDirective', 'selector': 'amap-polyline'},{'name': 'AmapRectangleDirective', 'selector': 'amap-rectangle'},{'name': 'AmapTextDirective', 'selector': 'amap-text'},{'name': 'AmapToolBarDirective', 'selector': 'amap-tool-bar'}];\n    var ACTUAL_COMPONENT = {'name': 'AmapInfoWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapMouseToolService.html":{"url":"injectables/AmapMouseToolService.html","title":"injectable - AmapMouseToolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapMouseToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:95\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-mouse-tool'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:93\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { AMapClass, Circle, Marker, MouseTool, Polyline, Polygon, Map } from '../../types/class';\nimport { Observable } from 'rxjs';\nimport { CircleOptions, MarkerOptions, PolygonOptions, PolylineOptions } from '../../types/interface';\nimport { Subscription } from 'rxjs';\n\ndeclare const AMap: AMapClass;\n\nexport class AmapMouseToolWrapper extends EventBinder {\n  private _mouseTool: MouseTool;\n\n  private _subscription: Subscription;\n\n  // I'm not able to use declared type 'Map' here, rollup complains:\n  // 'Map' is not exported by lib/.ng_pkg_build/ngx-amap/ts/types/class/amap.map.js\n  // it may be related to this issue\n  // https://github.com/rollup/rollup/issues/1048\n  constructor(map: any) {\n    super();\n    this._mouseTool = new AMap.MouseTool(map);\n  }\n\n  on(event: string): Observable {\n    return this.bindEvent(this._mouseTool, event);\n  }\n\n  get native(): MouseTool {\n    return this._mouseTool;\n  }\n\n  marker(options?: MarkerOptions): Promise {\n    return this._exec('marker', options);\n  }\n\n  polyline(options?: PolylineOptions): Promise {\n    return this._exec('polyline', options);\n  }\n\n  polygon(options?: PolygonOptions): Promise {\n    return this._exec('polygon', options);\n  }\n\n  circle(options?: CircleOptions): Promise {\n    return this._exec('circle', options);\n  }\n\n  // todo add rectangle class\n  rectangle(options?: PolygonOptions): Promise {\n    return this._exec('rectangle', options);\n  }\n\n  rule(options?: PolylineOptions) {\n    return this._exec('rule', options);\n  }\n\n  measureArea(options?: PolygonOptions) {\n    return this._exec('measureArea', options);\n  }\n\n  rectZoomIn(options?: PolygonOptions) {\n    return this._exec('rectZoomIn', options);\n  }\n\n  rectZoomOut(options?: PolygonOptions) {\n    return this._exec('rectZoomOut', options);\n  }\n\n  close(clear: boolean = false) {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n      this._subscription = null;\n    }\n    return this._mouseTool.close(clear);\n  }\n\n  private _exec(method: string, opts: any): Promise {\n    this._mouseTool[method](opts);\n    return new Promise(resolve => {\n      this._subscription = this.on('draw')\n        .subscribe(({ obj }) => {\n          this.close();\n          resolve(obj);\n        });\n    });\n  }\n\n}\n\n@Injectable()\nexport class AmapMouseToolService {\n  TAG = 'amap-mouse-tool';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  of(map: Map) {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.MouseTool');\n    }\n    return this._plugin.then(() => new AmapMouseToolWrapper(map));\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapMouseToolWrapper.html":{"url":"classes/AmapMouseToolWrapper.html","title":"class - AmapMouseToolWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapMouseToolWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mouseTool\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _exec\n                            \n                            \n                                circle\n                            \n                            \n                                close\n                            \n                            \n                                marker\n                            \n                            \n                                measureArea\n                            \n                            \n                                on\n                            \n                            \n                                polygon\n                            \n                            \n                                polyline\n                            \n                            \n                                rectangle\n                            \n                            \n                                rectZoomIn\n                            \n                            \n                                rectZoomOut\n                            \n                            \n                                rule\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mouseTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MouseTool\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _exec(method: string, opts: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:78\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            circle\n                        \n                        \n                    \n                \n            \n            \n                \ncircle(options?: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(clear: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    clear\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            marker\n                        \n                        \n                    \n                \n            \n            \n                \nmarker(options?: MarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            measureArea\n                        \n                        \n                    \n                \n            \n            \n                \nmeasureArea(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            polygon\n                        \n                        \n                    \n                \n            \n            \n                \npolygon(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            polyline\n                        \n                        \n                    \n                \n            \n            \n                \npolyline(options?: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectangle\n                        \n                        \n                    \n                \n            \n            \n                \nrectangle(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectZoomIn\n                        \n                        \n                    \n                \n            \n            \n                \nrectZoomIn(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectZoomOut\n                        \n                        \n                    \n                \n            \n            \n                \nrectZoomOut(options?: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rule\n                        \n                        \n                    \n                \n            \n            \n                \nrule(options?: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { AMapClass, Circle, Marker, MouseTool, Polyline, Polygon, Map } from '../../types/class';\nimport { Observable } from 'rxjs';\nimport { CircleOptions, MarkerOptions, PolygonOptions, PolylineOptions } from '../../types/interface';\nimport { Subscription } from 'rxjs';\n\ndeclare const AMap: AMapClass;\n\nexport class AmapMouseToolWrapper extends EventBinder {\n  private _mouseTool: MouseTool;\n\n  private _subscription: Subscription;\n\n  // I'm not able to use declared type 'Map' here, rollup complains:\n  // 'Map' is not exported by lib/.ng_pkg_build/ngx-amap/ts/types/class/amap.map.js\n  // it may be related to this issue\n  // https://github.com/rollup/rollup/issues/1048\n  constructor(map: any) {\n    super();\n    this._mouseTool = new AMap.MouseTool(map);\n  }\n\n  on(event: string): Observable {\n    return this.bindEvent(this._mouseTool, event);\n  }\n\n  get native(): MouseTool {\n    return this._mouseTool;\n  }\n\n  marker(options?: MarkerOptions): Promise {\n    return this._exec('marker', options);\n  }\n\n  polyline(options?: PolylineOptions): Promise {\n    return this._exec('polyline', options);\n  }\n\n  polygon(options?: PolygonOptions): Promise {\n    return this._exec('polygon', options);\n  }\n\n  circle(options?: CircleOptions): Promise {\n    return this._exec('circle', options);\n  }\n\n  // todo add rectangle class\n  rectangle(options?: PolygonOptions): Promise {\n    return this._exec('rectangle', options);\n  }\n\n  rule(options?: PolylineOptions) {\n    return this._exec('rule', options);\n  }\n\n  measureArea(options?: PolygonOptions) {\n    return this._exec('measureArea', options);\n  }\n\n  rectZoomIn(options?: PolygonOptions) {\n    return this._exec('rectZoomIn', options);\n  }\n\n  rectZoomOut(options?: PolygonOptions) {\n    return this._exec('rectZoomOut', options);\n  }\n\n  close(clear: boolean = false) {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n      this._subscription = null;\n    }\n    return this._mouseTool.close(clear);\n  }\n\n  private _exec(method: string, opts: any): Promise {\n    this._mouseTool[method](opts);\n    return new Promise(resolve => {\n      this._subscription = this.on('draw')\n        .subscribe(({ obj }) => {\n          this.close();\n          resolve(obj);\n        });\n    });\n  }\n\n}\n\n@Injectable()\nexport class AmapMouseToolService {\n  TAG = 'amap-mouse-tool';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  of(map: Map) {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.MouseTool');\n    }\n    return this._plugin.then(() => new AmapMouseToolWrapper(map));\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapPlaceSearchService.html":{"url":"injectables/AmapPlaceSearchService.html","title":"injectable - AmapPlaceSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapPlaceSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts\n        \n\n            \n                Description\n            \n            \n                地点搜索服务，提供某一特定地区的位置查询服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: PlaceSearchOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                PlaceSearchOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-place-search'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:104\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, PlaceSearch, Bounds, Polygon } from '../../types/class';\nimport { PlaceSearchOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapPlaceSearchWrapper对象将高德原生的PlaceSearch对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapPlaceSearchWrapper extends EventBinder {\n  private _placeSearch: PlaceSearch;\n\n  constructor(opts?: PlaceSearchOptions) {\n    super();\n    this._placeSearch = new AMap.PlaceSearch(opts);\n  }\n\n  get native(): PlaceSearch {\n    return this._placeSearch;\n  }\n\n  /**\n   * 用于侦听PlaceSearch事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._placeSearch, event);\n  }\n\n  search(address: string): Promise {\n    return new Promise(resolve => this._placeSearch.search(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  searchNearBy(keyword: string, center: ILngLat, radius: number): Promise {\n    return new Promise(resolve => this._placeSearch.searchNearBy(keyword, center, radius, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  searchInBounds(keyword: string, bounds: Bounds|Polygon): Promise {\n    return new Promise(resolve => this._placeSearch.searchInBounds(keyword, bounds, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  getDetails(POIID: string): Promise {\n    return new Promise(resolve => this._placeSearch.getDetails(POIID, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setPageIndex(pageIndex: number) {\n    this._placeSearch.setPageIndex(pageIndex);\n  }\n\n  setPageSize(pageSize: number) {\n    this._placeSearch.setPageSize(pageSize);\n  }\n\n  setLang(lang: string) {\n    this._placeSearch.setLang(lang);\n  }\n\n  getLang() {\n    return this._placeSearch.getLang();\n  }\n\n  clear() {\n    this._placeSearch.clear();\n  }\n\n  poiOnAMAP(obj: any) {\n    this._placeSearch.poiOnAMAP(obj);\n  }\n\n  setCity(city: string) {\n    this._placeSearch.setCity(city);\n  }\n\n  setType(type: string) {\n    this._placeSearch.setType(type);\n  }\n\n  setCityLimit(limit: boolean) {\n    this._placeSearch.setCityLimit(limit);\n  }\n\n  detailOnAMAP(obj: any) {\n    this._placeSearch.poiOnAMAP(obj);\n  }\n}\n\n/**\n * 地点搜索服务，提供某一特定地区的位置查询服务\n */\n@Injectable()\nexport class AmapPlaceSearchService {\n  TAG = 'amap-place-search';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {}\n\n  of(opts?: PlaceSearchOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.PlaceSearch');\n    }\n\n    return this._plugin.then(() => new AmapPlaceSearchWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapPlaceSearchWrapper.html":{"url":"classes/AmapPlaceSearchWrapper.html","title":"class - AmapPlaceSearchWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapPlaceSearchWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapPlaceSearchWrapper对象将高德原生的PlaceSearch对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _placeSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                detailOnAMAP\n                            \n                            \n                                getDetails\n                            \n                            \n                                getLang\n                            \n                            \n                                on\n                            \n                            \n                                poiOnAMAP\n                            \n                            \n                                search\n                            \n                            \n                                searchInBounds\n                            \n                            \n                                searchNearBy\n                            \n                            \n                                setCity\n                            \n                            \n                                setCityLimit\n                            \n                            \n                                setLang\n                            \n                            \n                                setPageIndex\n                            \n                            \n                                setPageSize\n                            \n                            \n                                setType\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: PlaceSearchOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        PlaceSearchOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _placeSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlaceSearch\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detailOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \ndetailOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetDetails(POIID: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    POIID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLang\n                        \n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:30\n                \n            \n\n\n            \n                \n                    用于侦听PlaceSearch事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            poiOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \npoiOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchInBounds\n                        \n                        \n                    \n                \n            \n            \n                \nsearchInBounds(keyword: string, bounds: Bounds | Polygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bounds\n                                    \n                                            Bounds | Polygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchNearBy\n                        \n                        \n                    \n                \n            \n            \n                \nsearchNearBy(keyword: string, center: ILngLat, radius: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    center\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLang\n                        \n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageIndex(pageIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageSize(pageSize: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, PlaceSearch, Bounds, Polygon } from '../../types/class';\nimport { PlaceSearchOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapPlaceSearchWrapper对象将高德原生的PlaceSearch对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapPlaceSearchWrapper extends EventBinder {\n  private _placeSearch: PlaceSearch;\n\n  constructor(opts?: PlaceSearchOptions) {\n    super();\n    this._placeSearch = new AMap.PlaceSearch(opts);\n  }\n\n  get native(): PlaceSearch {\n    return this._placeSearch;\n  }\n\n  /**\n   * 用于侦听PlaceSearch事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._placeSearch, event);\n  }\n\n  search(address: string): Promise {\n    return new Promise(resolve => this._placeSearch.search(address, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  searchNearBy(keyword: string, center: ILngLat, radius: number): Promise {\n    return new Promise(resolve => this._placeSearch.searchNearBy(keyword, center, radius, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  searchInBounds(keyword: string, bounds: Bounds|Polygon): Promise {\n    return new Promise(resolve => this._placeSearch.searchInBounds(keyword, bounds, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  getDetails(POIID: string): Promise {\n    return new Promise(resolve => this._placeSearch.getDetails(POIID, (status, result) => {\n      resolve({status, result});\n    }));\n  }\n\n  setPageIndex(pageIndex: number) {\n    this._placeSearch.setPageIndex(pageIndex);\n  }\n\n  setPageSize(pageSize: number) {\n    this._placeSearch.setPageSize(pageSize);\n  }\n\n  setLang(lang: string) {\n    this._placeSearch.setLang(lang);\n  }\n\n  getLang() {\n    return this._placeSearch.getLang();\n  }\n\n  clear() {\n    this._placeSearch.clear();\n  }\n\n  poiOnAMAP(obj: any) {\n    this._placeSearch.poiOnAMAP(obj);\n  }\n\n  setCity(city: string) {\n    this._placeSearch.setCity(city);\n  }\n\n  setType(type: string) {\n    this._placeSearch.setType(type);\n  }\n\n  setCityLimit(limit: boolean) {\n    this._placeSearch.setCityLimit(limit);\n  }\n\n  detailOnAMAP(obj: any) {\n    this._placeSearch.poiOnAMAP(obj);\n  }\n}\n\n/**\n * 地点搜索服务，提供某一特定地区的位置查询服务\n */\n@Injectable()\nexport class AmapPlaceSearchService {\n  TAG = 'amap-place-search';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {}\n\n  of(opts?: PlaceSearchOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.PlaceSearch');\n    }\n\n    return this._plugin.then(() => new AmapPlaceSearchWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapRidingService.html":{"url":"injectables/AmapRidingService.html","title":"injectable - AmapRidingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapRidingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts\n        \n\n            \n                Description\n            \n            \n                骑行路径规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: RidingOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                RidingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-riding'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:57\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:64\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Riding } from '../../types/class';\nimport { RidingOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { RidingResult } from '../../types/class/riding/riding-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapRidingWrapper对象将高德原生的Riding对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapRidingWrapper extends EventBinder {\n  private _riding: Riding;\n\n  constructor(opts?: RidingOptions) {\n    super();\n    this._riding = new AMap.Riding(opts);\n  }\n\n  get native(): Riding {\n    return this._riding;\n  }\n\n  /**\n   * 用于侦听Riding事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._riding, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._riding.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._riding.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  clear() {\n    this._riding.clear();\n  }\n}\n\n/**\n * 骑行路径规划服务\n */\n@Injectable()\nexport class AmapRidingService {\n  TAG = 'amap-riding';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Riding');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: RidingOptions): Promise {\n    return this.loaded.then(() => new AmapRidingWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapRidingWrapper.html":{"url":"classes/AmapRidingWrapper.html","title":"class - AmapRidingWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapRidingWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapRidingWrapper对象将高德原生的Riding对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _riding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: RidingOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        RidingOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _riding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Riding\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:31\n                \n            \n\n\n            \n                \n                    用于侦听Riding事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: any[], destination?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Riding } from '../../types/class';\nimport { RidingOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { RidingResult } from '../../types/class/riding/riding-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapRidingWrapper对象将高德原生的Riding对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapRidingWrapper extends EventBinder {\n  private _riding: Riding;\n\n  constructor(opts?: RidingOptions) {\n    super();\n    this._riding = new AMap.Riding(opts);\n  }\n\n  get native(): Riding {\n    return this._riding;\n  }\n\n  /**\n   * 用于侦听Riding事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._riding, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._riding.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._riding.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  clear() {\n    this._riding.clear();\n  }\n}\n\n/**\n * 骑行路径规划服务\n */\n@Injectable()\nexport class AmapRidingService {\n  TAG = 'amap-riding';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Riding');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: RidingOptions): Promise {\n    return this.loaded.then(() => new AmapRidingWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AmapToolBarDirective.html":{"url":"directives/AmapToolBarDirective.html","title":"directive - AmapToolBarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AmapToolBarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        amap-tool-bar\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                    Private\n                                _toolbar\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindEvents\n                            \n                            \n                                    Private\n                                bindToolBarEvent\n                            \n                            \n                                doLocation\n                            \n                            \n                                getLocation\n                            \n                            \n                                getOffset\n                            \n                            \n                                hide\n                            \n                            \n                                hideDirection\n                            \n                            \n                                hideLocation\n                            \n                            \n                                hideRuler\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setOffset\n                            \n                            \n                                show\n                            \n                            \n                                showDirection\n                            \n                            \n                                showLocation\n                            \n                            \n                                showRuler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoPosition\n                            \n                            \n                                direction\n                            \n                            \n                                hidden\n                            \n                            \n                                liteStyle\n                            \n                            \n                                locate\n                            \n                            \n                                locationMarker\n                            \n                            \n                                noIpLocate\n                            \n                            \n                                offset\n                            \n                            \n                                position\n                            \n                            \n                                ruler\n                            \n                            \n                                useNative\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                ready\n                            \n                            \n                                toolbarHide\n                            \n                            \n                                toolbarShow\n                            \n                            \n                                zoomchanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toolbars: ToolBarService, pixel: PixelService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolbars\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoPosition\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        liteStyle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        locate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        locationMarker\n                    \n                \n                \n                    \n                        Type :         Marker\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noIpLocate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Type :         IPixel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ruler\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useNative\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:41\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toolbarHide\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toolbarShow\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomchanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:47\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            bindToolBarEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bindToolBarEvent(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLocation\n                        \n                        \n                    \n                \n            \n            \n                \ndoLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetOffset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDirection\n                        \n                        \n                    \n                \n            \n            \n                \nhideDirection()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideLocation\n                        \n                        \n                    \n                \n            \n            \n                \nhideLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideRuler\n                        \n                        \n                    \n                \n            \n            \n                \nhideRuler()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOffset\n                        \n                        \n                    \n                \n            \n            \n                \nsetOffset(offset: IPixel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                IPixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDirection\n                        \n                        \n                    \n                \n            \n            \n                \nshowDirection()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocation\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showRuler\n                        \n                        \n                    \n                \n            \n            \n                \nshowRuler()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _toolbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-tool-bar'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, Output, OnDestroy, OnInit,\n  EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ToolBar, Marker, Pixel, LngLat } from '../../types/class';\nimport { ToolbarOptions, IPixel } from '../../types/interface';\nimport { Utils } from '../../utils/utils';\nimport { ChangeFilter } from '../../utils/change-filter';\nimport { ToolBarService } from '../../services/toolbar/toolbar.service';\nimport { PixelService } from '../../services/pixel/pixel.service';\n\nconst ALL_OPTIONS = [\n  'offset',\n  'position',\n  'ruler',\n  'noIpLocate',\n  'locate',\n  'liteStyle',\n  'direction',\n  'autoPosition',\n  'locationMarker',\n  'useNative'\n];\n\n@Directive({\n  selector: 'amap-tool-bar',\n  exportAs: 'toolbar'\n})\nexport class AmapToolBarDirective implements OnChanges, OnInit, OnDestroy {\n  TAG = 'amap-tool-bar';\n\n  // These properties are supported in ToolbarOptions:\n  @Input() offset: IPixel;\n  @Input() position: string;\n  @Input() ruler: boolean;\n  @Input() noIpLocate: boolean;\n  @Input() locate: boolean;\n  @Input() liteStyle: boolean;\n  @Input() direction: boolean;\n  @Input() autoPosition: boolean;\n  @Input() locationMarker: Marker;\n  @Input() useNative: boolean;\n\n  // Extra property:\n  @Input() hidden = false;\n\n  // amap-tool-bar events:\n  @Output() zoomchanged = new EventEmitter();\n  @Output() location = new EventEmitter();\n  @Output() ready = new EventEmitter();\n  @Output() toolbarHide = new EventEmitter();\n  @Output() toolbarShow = new EventEmitter();\n\n  private _toolbar: Promise;\n  private _subscriptions: Subscription;\n\n  constructor(\n    private toolbars: ToolBarService,\n    private pixel: PixelService\n  ) {}\n\n  ngOnInit() {\n    const options = Utils.getOptionsFor(this, ALL_OPTIONS);\n    this._toolbar = this.toolbars.create(options);\n    this.bindEvents();\n    this._toolbar.then(t => this.ready.emit(t));\n    this.hidden ? this.hide() : this.show();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._toolbar) { return; }\n\n    const filter = ChangeFilter.of(changes);\n    filter.has('ruler').subscribe(v => v ? this.showRuler() : this.hideRuler());\n    filter.has('direction').subscribe(v => v ? this.showDirection() : this.hideDirection());\n    filter.has('locate').subscribe(v => v ? this.showLocation() : this.hideLocation());\n    filter.notEmpty('offset').subscribe(v => this.setOffset(v));\n    filter.has('hidden').subscribe(v => v ? this.hide() : this.show());\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this.toolbars.destroy(this._toolbar);\n  }\n\n  private bindEvents() {\n    this._subscriptions = this.bindToolBarEvent('zoomchanged').subscribe(e => this.zoomchanged.emit(e));\n    this._subscriptions.add(this.bindToolBarEvent('location').subscribe(e => this.location.emit(e)));\n    this._subscriptions.add(this.bindToolBarEvent('show').subscribe(e => this.toolbarShow.emit(e)));\n    this._subscriptions.add(this.bindToolBarEvent('hide').subscribe(e => this.toolbarHide.emit(e)));\n  }\n\n  private bindToolBarEvent(event: string) {\n    return this.toolbars.bindEvent(this._toolbar, event);\n  }\n\n  // Public methods:\n  show(): Promise {\n    return this._toolbar.then(t => t.show());\n  }\n\n  hide(): Promise {\n    return this._toolbar.then(t => t.hide());\n  }\n\n  showRuler(): Promise {\n    return this._toolbar.then(t => t.showRuler());\n  }\n\n  hideRuler(): Promise {\n    return this._toolbar.then(t => t.hideRuler());\n  }\n\n  showDirection(): Promise {\n    return this._toolbar.then(t => t.showDirection());\n  }\n\n  hideDirection(): Promise {\n    return this._toolbar.then(t => t.hideDirection());\n  }\n\n  showLocation(): Promise {\n    return this._toolbar.then(t => t.showLocation());\n  }\n\n  hideLocation(): Promise {\n    return this._toolbar.then(t => t.hideLocation());\n  }\n\n  doLocation(): Promise {\n    return this._toolbar.then(t => t.doLocation());\n  }\n\n  // Setters:\n  setOffset(offset: IPixel): Promise {\n    return this._toolbar.then(t => {\n      const value = this.pixel.create(offset, 'offset');\n      if (value) {\n        t.setOffset(value);\n      }\n    });\n  }\n\n  // Getters:\n  getOffset(): Promise {\n    return this._toolbar.then(t => t.getOffset());\n  }\n\n  getLocation(): Promise {\n    return this._toolbar.then(t => t.getLocation());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapTransferService.html":{"url":"injectables/AmapTransferService.html","title":"injectable - AmapTransferService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapTransferService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts\n        \n\n            \n                Description\n            \n            \n                公交换乘路径规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: TransferOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                TransferOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-transfer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:77\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:84\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Transfer } from '../../types/class';\nimport { TransferOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { TransferResult } from '../../types/class/transfer/transfer-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapTransferWrapper对象将高德原生的Transfer对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapTransferWrapper extends EventBinder {\n  private _transfer: Transfer;\n\n  constructor(opts?: TransferOptions) {\n    super();\n    this._transfer = new AMap.Transfer(opts);\n  }\n\n  get native(): Transfer {\n    return this._transfer;\n  }\n\n  /**\n   * 用于侦听Transfer事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._transfer, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._transfer.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._transfer.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  setPolicy(policy: any) {\n    this._transfer.setPolicy(policy);\n  }\n\n  setCity(city: string) {\n    this._transfer.setCity(city);\n  }\n\n  setCityd(city: string) {\n    this._transfer.setCityd(city);\n  }\n\n  leaveAt(time: string, data: string) {\n    this._transfer.leaveAt(time, data);\n  }\n\n  clear() {\n    this._transfer.clear();\n  }\n\n  searchOnAMAP(obj: any) {\n    this._transfer.searchOnAMAP(obj);\n  }\n}\n\n/**\n * 公交换乘路径规划服务\n */\n@Injectable()\nexport class AmapTransferService {\n  TAG = 'amap-transfer';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Transfer');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: TransferOptions): Promise {\n    return this.loaded.then(() => new AmapTransferWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapTransferWrapper.html":{"url":"classes/AmapTransferWrapper.html","title":"class - AmapTransferWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapTransferWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapTransferWrapper对象将高德原生的Transfer对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _transfer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                leaveAt\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                searchOnAMAP\n                            \n                            \n                                setCity\n                            \n                            \n                                setCityd\n                            \n                            \n                                setPolicy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: TransferOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        TransferOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _transfer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transfer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            leaveAt\n                        \n                        \n                    \n                \n            \n            \n                \nleaveAt(time: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:31\n                \n            \n\n\n            \n                \n                    用于侦听Transfer事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: any[], destination?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityd\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityd(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolicy(policy: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    policy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Transfer } from '../../types/class';\nimport { TransferOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { TransferResult } from '../../types/class/transfer/transfer-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapTransferWrapper对象将高德原生的Transfer对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapTransferWrapper extends EventBinder {\n  private _transfer: Transfer;\n\n  constructor(opts?: TransferOptions) {\n    super();\n    this._transfer = new AMap.Transfer(opts);\n  }\n\n  get native(): Transfer {\n    return this._transfer;\n  }\n\n  /**\n   * 用于侦听Transfer事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._transfer, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._transfer.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._transfer.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  setPolicy(policy: any) {\n    this._transfer.setPolicy(policy);\n  }\n\n  setCity(city: string) {\n    this._transfer.setCity(city);\n  }\n\n  setCityd(city: string) {\n    this._transfer.setCityd(city);\n  }\n\n  leaveAt(time: string, data: string) {\n    this._transfer.leaveAt(time, data);\n  }\n\n  clear() {\n    this._transfer.clear();\n  }\n\n  searchOnAMAP(obj: any) {\n    this._transfer.searchOnAMAP(obj);\n  }\n}\n\n/**\n * 公交换乘路径规划服务\n */\n@Injectable()\nexport class AmapTransferService {\n  TAG = 'amap-transfer';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Transfer');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: TransferOptions): Promise {\n    return this.loaded.then(() => new AmapTransferWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapTruckDrivingService.html":{"url":"injectables/AmapTruckDrivingService.html","title":"injectable - AmapTruckDrivingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapTruckDrivingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts\n        \n\n            \n                Description\n            \n            \n                货车路线规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: TruckDrivingOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                TruckDrivingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-truck-driving'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:55\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:62\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, TruckDriving } from '../../types/class';\nimport { TruckDrivingOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DrivingResult } from '../../types/class/driving/driving-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapTruckDrivingWrapper对象将高德原生的TruckDriving对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapTruckDrivingWrapper extends EventBinder {\n  private _driving: TruckDriving;\n\n  constructor(opts?: TruckDrivingOptions) {\n    super();\n    this._driving = new AMap.TruckDriving(opts);\n  }\n\n  get native(): TruckDriving {\n    return this._driving;\n  }\n\n  /**\n   * 用于侦听TruckDriving事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._driving, event);\n  }\n\n  search(path: any[]): Promise {\n    return new Promise(resolve => this._driving.search(path, (status, result) => {\n      resolve({ status, result });\n    }));\n  }\n\n  clear() {\n    this._driving.clear();\n  }\n\n  setProvinceAndNumber(province: string, number: string) {\n    this._driving.setProvinceAndNumber(province, number);\n  }\n}\n\n/**\n * 货车路线规划服务\n */\n@Injectable()\nexport class AmapTruckDrivingService {\n  TAG = 'amap-truck-driving';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.TruckDriving');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: TruckDrivingOptions): Promise {\n    return this.loaded.then(() => new AmapTruckDrivingWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapTruckDrivingWrapper.html":{"url":"classes/AmapTruckDrivingWrapper.html","title":"class - AmapTruckDrivingWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapTruckDrivingWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapTruckDrivingWrapper对象将高德原生的TruckDriving对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _driving\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                setProvinceAndNumber\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: TruckDrivingOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        TruckDrivingOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _driving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TruckDriving\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:31\n                \n            \n\n\n            \n                \n                    用于侦听TruckDriving事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(path: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvinceAndNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvinceAndNumber(province: string, number: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    province\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, TruckDriving } from '../../types/class';\nimport { TruckDrivingOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { DrivingResult } from '../../types/class/driving/driving-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapTruckDrivingWrapper对象将高德原生的TruckDriving对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapTruckDrivingWrapper extends EventBinder {\n  private _driving: TruckDriving;\n\n  constructor(opts?: TruckDrivingOptions) {\n    super();\n    this._driving = new AMap.TruckDriving(opts);\n  }\n\n  get native(): TruckDriving {\n    return this._driving;\n  }\n\n  /**\n   * 用于侦听TruckDriving事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._driving, event);\n  }\n\n  search(path: any[]): Promise {\n    return new Promise(resolve => this._driving.search(path, (status, result) => {\n      resolve({ status, result });\n    }));\n  }\n\n  clear() {\n    this._driving.clear();\n  }\n\n  setProvinceAndNumber(province: string, number: string) {\n    this._driving.setProvinceAndNumber(province, number);\n  }\n}\n\n/**\n * 货车路线规划服务\n */\n@Injectable()\nexport class AmapTruckDrivingService {\n  TAG = 'amap-truck-driving';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.TruckDriving');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: TruckDrivingOptions): Promise {\n    return this.loaded.then(() => new AmapTruckDrivingWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmapWalkingService.html":{"url":"injectables/AmapWalkingService.html","title":"injectable - AmapWalkingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AmapWalkingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts\n        \n\n            \n                Description\n            \n            \n                步行路径规划服务\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loaded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            of\n                        \n                        \n                    \n                \n            \n            \n                \nof(opts?: WalkingOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                WalkingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amap-walking'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:61\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n\n                \n                    \n                        getloaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:68\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Walking } from '../../types/class';\nimport { WalkingOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { WalkingResult } from '../../types/class/walking/walking-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapWalkingWrapper对象将高德原生的Walking对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapWalkingWrapper extends EventBinder {\n  private _walking: Walking;\n\n  constructor(opts?: WalkingOptions) {\n    super();\n    this._walking = new AMap.Walking(opts);\n  }\n\n  get native(): Walking {\n    return this._walking;\n  }\n\n  /**\n   * 用于侦听Walking事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._walking, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._walking.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._walking.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  clear() {\n    this._walking.clear();\n  }\n\n  searchOnAMAP(obj: any) {\n    this._walking.searchOnAMAP(obj);\n  }\n}\n\n/**\n * 步行路径规划服务\n */\n@Injectable()\nexport class AmapWalkingService {\n  TAG = 'amap-walking';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Walking');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: WalkingOptions): Promise {\n    return this.loaded.then(() => new AmapWalkingWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmapWalkingWrapper.html":{"url":"classes/AmapWalkingWrapper.html","title":"class - AmapWalkingWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmapWalkingWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts\n        \n\n            \n                Description\n            \n            \n                AmapWalkingWrapper对象将高德原生的Walking对象提供的方法封装成Promise的实现，更方便回调\n\n            \n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _walking\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                on\n                            \n                            \n                                search\n                            \n                            \n                                searchOnAMAP\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    native\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts?: WalkingOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        WalkingOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _walking\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Walking\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:31\n                \n            \n\n\n            \n                \n                    用于侦听Walking事件，返回可以被subscribe的Observable对象\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: any[], destination?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        native\n                    \n                \n\n                \n                    \n                        getnative()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AMapClass, Walking } from '../../types/class';\nimport { WalkingOptions, ILngLat } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { WalkingResult } from '../../types/class/walking/walking-result';\n\ndeclare const AMap: AMapClass;\n\n/**\n * AmapWalkingWrapper对象将高德原生的Walking对象提供的方法封装成Promise的实现，更方便回调\n */\nexport class AmapWalkingWrapper extends EventBinder {\n  private _walking: Walking;\n\n  constructor(opts?: WalkingOptions) {\n    super();\n    this._walking = new AMap.Walking(opts);\n  }\n\n  get native(): Walking {\n    return this._walking;\n  }\n\n  /**\n   * 用于侦听Walking事件，返回可以被subscribe的Observable对象\n   * @param event\n   * @returns\n   */\n  on(event: string): Observable {\n    return this.bindEvent(this._walking, event);\n  }\n\n  search(origin: any[], destination?: ILngLat): Promise {\n    if (typeof destination !== 'undefined') {\n      return new Promise(resolve => this._walking.search(origin, destination, (status, result) => {\n        resolve({ status, result });\n      }));\n    } else {\n      return new Promise(resolve => this._walking.search(origin, (status, result) => {\n        resolve({ status, result });\n      }));\n    }\n  }\n\n  clear() {\n    this._walking.clear();\n  }\n\n  searchOnAMAP(obj: any) {\n    this._walking.searchOnAMAP(obj);\n  }\n}\n\n/**\n * 步行路径规划服务\n */\n@Injectable()\nexport class AmapWalkingService {\n  TAG = 'amap-walking';\n\n  private _plugin: Promise;\n\n  constructor(private plugins: PluginLoaderService) {\n  }\n\n  get loaded(): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Walking');\n    }\n\n    return this._plugin;\n  }\n\n  of(opts?: WalkingOptions): Promise {\n    return this.loaded.then(() => new AmapWalkingWrapper(opts));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Autocomplete.html":{"url":"interfaces/Autocomplete.html","title":"interface - Autocomplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Autocomplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    search\n                                \n                                \n                                    setCity\n                                \n                                \n                                    setCityLimit\n                                \n                                \n                                    setType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AutocompleteOptions } from '../../interface/autocomplete-options.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { AutocompleteResult } from './autocomplete-result';\n\nexport interface CAutocomplete {\n  new (opts?: AutocompleteOptions): Autocomplete;\n}\n\nexport interface Autocomplete {\n  search(keyword: string, callback: callbackFn);\n  setType(type: string);\n  setCity(city: string);\n  setCityLimit(limit: boolean);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutocompleteOptions.html":{"url":"interfaces/AutocompleteOptions.html","title":"interface - AutocompleteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AutocompleteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/autocomplete-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        citylimit\n                                \n                                \n                                            Optional\n                                        datatype\n                                \n                                \n                                            Optional\n                                        input\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citylimit\n                                    \n                                \n                                \n                                    \n                                        citylimit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datatype\n                                    \n                                \n                                \n                                    \n                                        datatype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutocompleteOptions {\n  type?: string;\n  city?: string;\n  datatype?: string;\n  citylimit?: boolean;\n  input?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutocompleteResult.html":{"url":"interfaces/AutocompleteResult.html","title":"interface - AutocompleteResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AutocompleteResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/autocomplete/autocomplete-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        info\n                                \n                                \n                                        tips\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tips\n                                    \n                                \n                                \n                                    \n                                        tips:         Tip[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tip[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Tip } from './tip';\n\nexport interface AutocompleteResult {\n  info: string;\n  count: number;\n  tips: Tip[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BezierCurve.html":{"url":"interfaces/BezierCurve.html","title":"interface - BezierCurve","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BezierCurve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getBounds\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getLength\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getPath\n                                \n                                \n                                    hide\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setPath\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetLength()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BezierCurveOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetPath()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: BezierCurveOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                BezierCurveOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(path: CurvePath)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                CurvePath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { Bounds } from '../amap.bounds';\nimport { BezierCurveOptions, CurvePath } from '../../interface/overlays/bezier-curve-options.interface';\n\nexport interface CBezierCurve {\n  new (opts: BezierCurveOptions): BezierCurve;\n}\n\nexport interface BezierCurve {\n  setPath(path: CurvePath);\n  getPath();\n  setOptions(opt: BezierCurveOptions);\n  getOptions(): BezierCurveOptions;\n  getLength(): number;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map);\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BezierCurveEditor.html":{"url":"interfaces/BezierCurveEditor.html","title":"interface - BezierCurveEditor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BezierCurveEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    close\n                                \n                                \n                                    off\n                                \n                                \n                                    on\n                                \n                                \n                                    open\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            off\n                        \n                        \n                    \n                \n            \n            \n                \noff(eventName: string, handler: any, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(eventName: string, handler: any, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BezierCurveEditorOptions.html":{"url":"interfaces/BezierCurveEditorOptions.html","title":"interface - BezierCurveEditorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BezierCurveEditorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        getCtrlLineOptions\n                                \n                                \n                                            Optional\n                                        getMarkerOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getCtrlLineOptions\n                                    \n                                \n                                \n                                    \n                                        getCtrlLineOptions:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getMarkerOptions\n                                    \n                                \n                                \n                                    \n                                        getMarkerOptions:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BezierCurveOptions.html":{"url":"interfaces/BezierCurveOptions.html","title":"interface - BezierCurveOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BezierCurveOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/bezier-curve-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        borderWeight\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        showDir\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        borderWeight\n                                    \n                                \n                                \n                                    \n                                        borderWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         CurvePath\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurvePath\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDir\n                                    \n                                \n                                \n                                    \n                                        showDir:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport type CurvePath = Array>|Array>>;\n\nexport interface BezierCurveOptions {\n  path?: CurvePath;\n  map?: Map;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  zIndex?: number;\n  showDir?: boolean;\n  bubble?: boolean;\n  cursor?: string;\n  isOutline?: boolean;\n  outlineColor?: string;\n  borderWeight?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BezierCurveService.html":{"url":"injectables/BezierCurveService.html","title":"injectable - BezierCurveService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BezierCurveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: BezierCurveOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                BezierCurveOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(c: BezierCurve, opts: BezierCurveEditorOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                BezierCurve\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                BezierCurveEditorOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(bezierCurve: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bezierCurve\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'bezier-curve-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, BezierCurve, Map } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { BezierCurveOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\nimport { BezierCurveEditor, BezierCurveEditorOptions } from '../../types/class/amap.editor';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class BezierCurveService extends EventBinder {\n  TAG = 'bezier-curve-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: BezierCurveOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.BezierCurve(options);\n    });\n  }\n\n  destroy(bezierCurve: Promise): Promise {\n    return bezierCurve.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.BezierCurveEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(c: BezierCurve, opts: BezierCurveEditorOptions): Promise {\n    return this._map.then(map => new AMap.BezierCurveEditor(map, c, opts));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bounds.html":{"url":"interfaces/Bounds.html","title":"interface - Bounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Bounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.bounds.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        northEast\n                                \n                                \n                                        southWest\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getCenter\n                                \n                                \n                                    getNorthEast\n                                \n                                \n                                    getSouthWest\n                                \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNorthEast\n                        \n                        \n                    \n                \n            \n            \n                \ngetNorthEast()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSouthWest\n                        \n                        \n                    \n                \n            \n            \n                \ngetSouthWest()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.bounds.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        northEast\n                                    \n                                \n                                \n                                    \n                                        northEast:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        southWest\n                                    \n                                \n                                \n                                    \n                                        southWest:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\n\n// AMap.Bounds\nexport interface Bounds {\n  southWest: LngLat;\n  northEast: LngLat;\n\n  contains(point: LngLat): boolean;\n  getCenter(): LngLat;\n  getSouthWest(): LngLat;\n  getNorthEast(): LngLat;\n  toString(): string;\n}\n\nexport interface CBounds {\n  new (southWest: LngLat, northEast: LngLat): Bounds;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BusinessArea.html":{"url":"interfaces/BusinessArea.html","title":"interface - BusinessArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BusinessArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/business-area.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BusinessArea {\n  id: string;\n  name: string;\n  location: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CAutocomplete.html":{"url":"interfaces/CAutocomplete.html","title":"interface - CAutocomplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CAutocomplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/autocomplete/amap.autocomplete.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { AutocompleteOptions } from '../../interface/autocomplete-options.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { AutocompleteResult } from './autocomplete-result';\n\nexport interface CAutocomplete {\n  new (opts?: AutocompleteOptions): Autocomplete;\n}\n\nexport interface Autocomplete {\n  search(keyword: string, callback: callbackFn);\n  setType(type: string);\n  setCity(city: string);\n  setCityLimit(limit: boolean);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CBezierCurve.html":{"url":"interfaces/CBezierCurve.html","title":"interface - CBezierCurve","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CBezierCurve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.bezier-curve.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { Bounds } from '../amap.bounds';\nimport { BezierCurveOptions, CurvePath } from '../../interface/overlays/bezier-curve-options.interface';\n\nexport interface CBezierCurve {\n  new (opts: BezierCurveOptions): BezierCurve;\n}\n\nexport interface BezierCurve {\n  setPath(path: CurvePath);\n  getPath();\n  setOptions(opt: BezierCurveOptions);\n  getOptions(): BezierCurveOptions;\n  getLength(): number;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map);\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CBezierCurveEditor.html":{"url":"interfaces/CBezierCurveEditor.html","title":"interface - CBezierCurveEditor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CBezierCurveEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CBounds.html":{"url":"interfaces/CBounds.html","title":"interface - CBounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CBounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.bounds.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\n\n// AMap.Bounds\nexport interface Bounds {\n  southWest: LngLat;\n  northEast: LngLat;\n\n  contains(point: LngLat): boolean;\n  getCenter(): LngLat;\n  getSouthWest(): LngLat;\n  getNorthEast(): LngLat;\n  toString(): string;\n}\n\nexport interface CBounds {\n  new (southWest: LngLat, northEast: LngLat): Bounds;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCircle.html":{"url":"interfaces/CCircle.html","title":"interface - CCircle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCircle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.circle.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { CircleOptions } from '../../interface/overlays/circle-options.interface';\n\nexport interface CCircle {\n  new (opts: CircleOptions): Circle;\n}\n\nexport interface Circle {\n  setCenter(lnglat: LngLat|number[]): void;\n  getCenter(): LngLat;\n  getBounds(): Bounds;\n  setRadius(radius: number): void;\n  getRadius(): number;\n  setOptions(opt: CircleOptions): void;\n  getOptions(): CircleOptions;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|number[]): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCircleMarker.html":{"url":"interfaces/CCircleMarker.html","title":"interface - CCircleMarker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCircleMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { CircleMarkerOptions } from '../../interface/overlays/circle-marker-options.interface';\n\nexport interface CCircleMarker {\n  new (opts: CircleMarkerOptions): CircleMarker;\n}\n\nexport interface CircleMarker {\n  setCenter(lnglat: LngLat|number[]): void;\n  getCenter(): LngLat;\n  setRadius(radius: number): void;\n  getRadius(): number;\n  setOptions(opt: CircleMarkerOptions): void;\n  getOptions(): CircleMarkerOptions;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CDistrictSearch.html":{"url":"interfaces/CDistrictSearch.html","title":"interface - CDistrictSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CDistrictSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/district-search/amap.district-search.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { DistrictSearchOptions } from '../../interface/district-search-options.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { DistrictSearchResult } from './district-search-result';\n\nexport interface CDistrictSearch {\n  new (opts?: DistrictSearchOptions): DistrictSearch;\n}\n\nexport interface DistrictSearch {\n  search(\n    keyword: string,\n    callback: callbackFn,\n    opts?: DistrictSearchOptions\n  );\n  setLevel(level: string);\n  setSubdistrict(district: number);\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CDriving.html":{"url":"interfaces/CDriving.html","title":"interface - CDriving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CDriving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/amap.driving.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { DrivingResult } from './driving-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { DrivingOptions } from '../../interface/driving/driving-options.interface';\n\nexport interface CDriving {\n  new (opts?: DrivingOptions): Driving;\n}\n\nexport interface Driving {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    opts: any,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  setPolicy(policy: any);\n  setAvoidPolygons(path: ILngLat[]);\n  setAvoidRoad(road: string);\n  clearAvoidRoad();\n  clearAvoidPolygons();\n  getAvoidPolygons(): LngLat[];\n  getAvoidRoad(): string;\n  clear();\n  searchOnAMAP(obj: any);\n  setProvinceAndNumber(province: string, number: string);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CEditor.html":{"url":"interfaces/CEditor.html","title":"interface - CEditor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CEllipse.html":{"url":"interfaces/CEllipse.html","title":"interface - CEllipse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CEllipse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { EllipseOptions } from '../../interface/overlays/ellipse-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\n\nexport interface CEllipse {\n  new (opts: EllipseOptions): Ellipse;\n}\n\nexport interface Ellipse {\n  setOptions(opt: EllipseOptions);\n  getOptions(): EllipseOptions;\n  getCenter(): LngLat;\n  setCenter(center: LngLat|ILngLat): void;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map);\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CGeocoder.html":{"url":"interfaces/CGeocoder.html","title":"interface - CGeocoder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CGeocoder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { GeocoderOptions } from '../../interface/geocoder-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { GeocodeResult } from './geocode-result';\nimport { ReGeocodeResult } from './re-geocode-result';\n\nexport interface CGeocoder {\n  new (opts?: GeocoderOptions): Geocoder;\n}\n\nexport interface Geocoder {\n  getLocation(address: string, callback: callbackFn);\n  setCity(city: string);\n  getAddress(location: ILngLat|ILngLat[], callback: callbackFn);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CHeatmap.html":{"url":"interfaces/CHeatmap.html","title":"interface - CHeatmap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CHeatmap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CIcon.html":{"url":"interfaces/CIcon.html","title":"interface - CIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.icon.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Size } from './amap.size';\nimport { IIcon } from '../interface/icon.interface';\n\n// AMap.Icon\nexport interface Icon {\n  getImageSize(): Size;\n  setImageSize(size: Size): void;\n}\n\nexport interface CIcon {\n  new (opts: IIcon): Icon;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CInfoWindow.html":{"url":"interfaces/CInfoWindow.html","title":"interface - CInfoWindow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CInfoWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.info-window.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\nimport { Map } from './amap.map';\nimport { Size } from './amap.size';\nimport { InfoWindowOptions } from '../interface/info-window-options.interface';\n\nexport interface CInfoWindow {\n  new (opts: InfoWindowOptions): InfoWindow;\n}\n\nexport interface InfoWindow {\n  open(map: Map, pos?: LngLat|number[]): void;\n  close(): void;\n  getIsOpen(): boolean;\n  setContent(content: any): void;\n  getContent(): string;\n  setPosition(lnglat: LngLat|number[]): void;\n  getPosition(): LngLat;\n  setSize(size: Size): void;\n  getSize(): Size;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CLngLat.html":{"url":"interfaces/CLngLat.html","title":"interface - CLngLat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CLngLat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.lng-lat.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface LngLat extends Array {\n  offset(w: number, s: number): LngLat;\n  distance(lnglat: LngLat|Array): number;\n  getLng(): number;\n  getLat(): number;\n  equals(lnglat: LngLat): boolean;\n  toString(): string;\n}\n\nexport interface CLngLat {\n  new (lng: number, lat: number): LngLat;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CMap.html":{"url":"interfaces/CMap.html","title":"interface - CMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.map.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\nimport { Pixel } from './amap.pixel';\nimport { Size } from './amap.size';\nimport { Bounds } from './amap.bounds';\nimport { MapOptions } from '../interface/map-options.interface';\n\nexport interface CMap {\n  new (container: string|HTMLDivElement, opts: MapOptions): Map;\n}\n\nexport interface Map {\n  getZoom(): number;\n  getLayers(): Array;  // TODO: TileLayer\n  getCenter(): LngLat;\n  getContainer(): HTMLDivElement;\n  getCity(callback: (result: any) => void): void; // TODO: city property\n  getBounds(): Bounds;\n  getlabelzIndex(): number;\n  getLimitBounds(): Bounds;\n  getLang(): string;\n  getSize(): Size;\n  getRotation(): number;\n  getStatus(): any;\n  getDefaultCursor(): string;\n  getResolution(point?: LngLat|number[]): number;\n  getScale(dpi: number): number;\n  setZoom(level: number): void;\n  setlabelzIndex(index: number): void;\n  setLayers(layers: Array): void;  // TODO: TileLayer\n  add(overlayers: Array): void;  // TODO: TileLayer\n  remove(overlayers: Array): void; // TODO: TileLayer\n  getAllOverlays(type?: string): any;\n  setCenter(position: LngLat|number[]): void;\n  setZoomAndCenter(zoomLevel: number, center: LngLat|number[]): void;\n  setCity(city: string, callback?: (result: any) => void): void;\n  setBounds(bound: Bounds): void;\n  setLimitBounds(bound: Bounds): void;\n  clearLimitBounds(): void;\n  setLang(lang: string): string;\n  setRotation(rotation: number): number;\n  setStatus(status: any): void;\n  setDefaultCursor(cursor: string): void;\n  zoomIn(): void;\n  zoomOut(): void;\n  panTo(position: LngLat|number[]): void;\n  panBy(x: number, y: number): void;\n  setFitView(overlayList?: Array): void;\n  clearMap(): void;\n  destroy(): void;\n  plugin(name: string|Array, callback: (result: any) => void): void;\n  addControl(obj: any): void;\n  removeControl(obj: any): void;\n  clearInfoWindow(): void;\n  pixelToLngLat(pixel: Pixel, level: number): LngLat;\n  lnglatToPixel(lngLat: LngLat|number[], level: number): Pixel;\n  containerToLngLat(pixel: Pixel): LngLat;\n  lngLatToContainer(lnglat: LngLat|number[]): Pixel;\n  setMapStyle(style: string): void;\n  getMapStyle(): string;\n  setFeatures(feature: Array): void;\n  getFeatures(): Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CMarker.html":{"url":"interfaces/CMarker.html","title":"interface - CMarker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.marker.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Map } from '../amap.map';\nimport { Pixel } from '../amap.pixel';\nimport { Icon } from '../amap.icon';\nimport { MarkerOptions } from '../../interface/overlays/marker-options.interface';\n\nexport interface CMarker {\n  new (opts: MarkerOptions): Marker;\n}\n\nexport interface Marker {\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  setAnimation(animate: string): void;\n  getAnimation(): string;\n  setClickable(clickable: boolean): void;\n  getClickable(): boolean;\n  getPosition(): LngLat;\n  setPosition(lnglat: LngLat|number[]): void;\n  setAngle(angle: number): void;\n  setLabel(label: any): void;\n  getLabel(): any;\n  getAngle(): number;\n  setzIndex(index: number): void;\n  getzIndex(): number;\n  setIcon(content: string|Icon): void;\n  getIcon(): string|Icon;\n  setDraggable(draggable: boolean): void;\n  getDraggable(): boolean;\n  hide(): void;\n  show(): void;\n  setCursor(cursor: string): void;\n  setContent(html: string|HTMLElement): void;\n  getContent(): string;\n  moveAlong(path: number[][]|LngLat[], speed: number, f?: (k: any) => any, circlable?: boolean): void;\n  moveTo(lnglat: LngLat|number[], speed: number, f?: (k: any) => any): void;\n  stopMove(): void;\n  pauseMove(): void;\n  resumeMove(): void;\n  setMap(map: Map): void;\n  getMap(): Map;\n  setTitle(title: string): void;\n  getTitle(): string;\n  setTop(isTop: boolean): void;\n  getTop(): boolean;\n  setShadow(icon: Icon): void;\n  getShadow(): Icon;\n  setShape(shape: any); // TODO: MarkerShape\n  getShape(): any; // TODO: MarkerShape\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CMarkerClusterer.html":{"url":"interfaces/CMarkerClusterer.html","title":"interface - CMarkerClusterer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CMarkerClusterer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.marker-clusterer.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { MarkerClustererOptions } from '../interface/marker-cluster-options.interface';\nimport { ClusterStyle } from './cluster-style';\nimport { Marker } from './overlays/amap.marker';\nimport { Map } from './amap.map';\n\nexport interface CMarkerClusterer {\n  new (map: Map, markers: Marker[], opts: MarkerClustererOptions): MarkerClusterer;\n}\n\nexport interface MarkerClusterer {\n  addMarker(marker: Marker);\n  removeMarker(marker: Marker);\n  getClustersCount(): number;\n  getGridSize(): number;\n  getMaxZoom(): number;\n  getMinClusterSize(): number;\n  getStyles(): ClusterStyle[];\n  setGridSize(size: number);\n  setMaxZoom(zoom: number);\n  setMinClusterSize(size: number);\n  setStyles(styles: ClusterStyle[]);\n  clearMarkers();\n  setMap(map: Map);\n  setMarkers(markers: Marker[]);\n  getMap(): Map;\n  getMarkers(): Marker[];\n  addMarkers(markers: Marker[]);\n  removeMarkers(markers: Marker[]);\n  isAverageCenter(): boolean;\n  setAverageCenter(averageCenter: boolean);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CMouseTool.html":{"url":"interfaces/CMouseTool.html","title":"interface - CMouseTool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CMouseTool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.mouse-tool.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { CircleOptions } from '../interface/overlays/circle-options.interface';\nimport { MarkerOptions } from '../interface/overlays/marker-options.interface';\nimport { PolygonOptions } from '../interface/overlays/polygon-options.interface';\nimport { PolylineOptions } from '../interface/overlays/polyline-options.interface';\n\nexport interface CMouseTool {\n  new (map: Map): MouseTool;\n}\n\nexport interface MouseTool {\n  marker(options: MarkerOptions);\n  polyline(options: PolylineOptions);\n  polygon(options: PolygonOptions);\n  rectangle(options: PolygonOptions);\n  circle(options: CircleOptions);\n  rule(options: PolylineOptions);\n  measureArea(options: PolygonOptions);\n  rectZoomIn(options: PolygonOptions);\n  rectZoomOut(options: PolygonOptions);\n  close(clear: boolean);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CPixel.html":{"url":"interfaces/CPixel.html","title":"interface - CPixel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CPixel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.pixel.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { IPixel } from '../interface/pixel.interface';\n\n// AMap.Pixel\nexport interface Pixel extends IPixel {\n  getX(): number;\n  getY(): number;\n  equals(point: Pixel): boolean;\n  toString(): string;\n}\n\nexport interface CPixel {\n  new (x: number, y: number): Pixel;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CPlaceSearch.html":{"url":"interfaces/CPlaceSearch.html","title":"interface - CPlaceSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CPlaceSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/amap.place-search.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { PlaceSearchOptions } from '../../interface/place-search-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { SearchResult } from './search-result';\nimport { Bounds } from '../amap.bounds';\nimport { Polygon } from '../overlays/amap.polygon';\n\nexport interface CPlaceSearch {\n  new (opts?: PlaceSearchOptions): PlaceSearch;\n}\n\nexport interface PlaceSearch {\n  search(keyword: string, callback: callbackFn);\n  searchNearBy(keyword: string, center: ILngLat, radius: number, callback: callbackFn);\n  searchInBounds(keyword: string, bounds: Bounds|Polygon, callback: callbackFn);\n  getDetails(POIID: string, callback: callbackFn);\n  setType(type: string);\n  setCityLimit(limit: boolean);\n  setPageIndex(pageIndex: number);\n  setPageSize(setPageSize: number);\n  setCity(city: string);\n  setLang(lang: string);\n  getLang(): string;\n  clear();\n  poiOnAMAP(obj: IPoiObject);\n  detailOnAMAP(obj: IPoiObject);\n}\n\nexport interface IPoiObject {\n  id: string;\n  name: string;\n  location: ILngLat;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CPolygon.html":{"url":"interfaces/CPolygon.html","title":"interface - CPolygon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CPolygon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.polygon.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { PolygonOptions, ILngLat } from '../../interface';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\n\nexport interface CPolygon {\n  new (opts: PolygonOptions): Polygon;\n}\n\nexport type PolygonPath = Array|Array>|Array|Array>;\n\nexport interface Polygon {\n  setPath(path: PolygonPath): void;\n  getPath(): number[][];\n  setOptions(opt: PolygonOptions): void;\n  getOptions(): PolygonOptions;\n  getBounds(): Bounds;\n  getArea(): number;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CPolyline.html":{"url":"interfaces/CPolyline.html","title":"interface - CPolyline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CPolyline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.polyline.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { Bounds } from '../amap.bounds';\nimport { PolylineOptions } from '../../interface/overlays/polyline-options.interface';\n\nexport interface CPolyline {\n  new (opts: PolylineOptions): Polyline;\n}\n\nexport interface Polyline {\n  setPath(path: number[][]): void;\n  getPath(): number[][];\n  setOptions(opt: PolylineOptions): void;\n  getOptions(): PolylineOptions;\n  getLength(): number;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CRectangle.html":{"url":"interfaces/CRectangle.html","title":"interface - CRectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CRectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { RectangleOptions } from '../../interface/overlays/rectangle-options.interface';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { ILngLat } from '../../interface/lng-lat.interface';\n\nexport interface CRectangle {\n  new (opts: RectangleOptions): Rectangle;\n}\n\nexport interface Rectangle {\n  setOptions(opt: RectangleOptions): void;\n  getOptions(): RectangleOptions;\n  getBounds(): Bounds;\n  setBounds(bounds: Bounds): void;\n  getArea(): number;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CRiding.html":{"url":"interfaces/CRiding.html","title":"interface - CRiding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CRiding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/amap.riding.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { RidingResult } from './riding-result';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { RidingOptions } from '../../interface/riding/riding-options.interface';\n\nexport interface CRiding {\n  new (opts?: RidingOptions): Riding;\n}\n\nexport interface Riding {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  clear();\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CSize.html":{"url":"interfaces/CSize.html","title":"interface - CSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.size.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { ISize } from '../interface/size.interface';\n\n// AMap.Size\nexport interface Size extends ISize {\n  getWidth(): number;\n  getHeight(): number;\n  toString(): string;\n}\n\nexport interface CSize {\n  new (width: number, height: number): Size;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CText.html":{"url":"interfaces/CText.html","title":"interface - CText","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CText\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.text.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Map } from '../amap.map';\nimport { Pixel } from '../amap.pixel';\nimport { Icon } from '../amap.icon';\nimport { TextOptions } from '../../interface/overlays/text-options.interface';\n\nexport interface CText {\n  new (opts: TextOptions): Text;\n}\n\nexport interface Text {\n  getText(): string;\n  setText(text: string): void;\n  setStyle(obj: any): void;\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  setAnimation(animate: string): void;\n  getAnimation(): string;\n  setClickable(clickable: boolean): void;\n  getClickable(): boolean;\n  getPosition(): LngLat;\n  setPosition(lnglat: LngLat|number[]): void;\n  setAngle(angle: number): void;\n  getAngle(): number;\n  setzIndex(index: number): void;\n  getzIndex(): number;\n  setDraggable(draggable: boolean): void;\n  getDraggable(): boolean;\n  hide(): void;\n  show(): void;\n  setCursor(cursor: string): void;\n  moveAlong(path: number[][]|LngLat[], speed: number, f?: (k: any) => any, circlable?: boolean): void;\n  moveTo(lnglat: LngLat|number[], speed: number, f?: (k: any) => any): void;\n  stopMove(): void;\n  pauseMove(): void;\n  resumeMove(): void;\n  setMap(map: Map): void;\n  getMap(): Map;\n  setTitle(title: string): void;\n  getTitle(): string;\n  setTop(isTop: boolean): void;\n  getTop(): boolean;\n  setShadow(icon: Icon): void;\n  getShadow(): Icon;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CToolBar.html":{"url":"interfaces/CToolBar.html","title":"interface - CToolBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CToolBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.toolbar.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolbarOptions } from '../interface/toolbar-options.interface';\nimport { Pixel } from './amap.pixel';\nimport { LngLat } from './amap.lng-lat';\n\nexport interface CToolBar {\n  new (opts?: ToolbarOptions): ToolBar;\n}\n\nexport interface ToolBar {\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  hideRuler(): void;\n  showRuler(): void;\n  hideDirection(): void;\n  showDirection(): void;\n  hideLocation(): void;\n  showLocation(): void;\n  doLocation(): void;\n  getLocation(): LngLat;\n  hide(): void;\n  show(): void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CTransfer.html":{"url":"interfaces/CTransfer.html","title":"interface - CTransfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CTransfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/amap.transfer.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { TransferOptions } from '../../interface/transfer/transfer-options.interface';\nimport { TransferResult } from './transfer-result';\n\nexport interface CTransfer {\n  new (opts?: TransferOptions): Transfer;\n}\n\nexport interface Transfer {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  setPolicy(policy: any);\n  setCity(city: string);\n  setCityd(city: string);\n  leaveAt(time: string, data: string);\n  clear();\n  searchOnAMAP(obj: any);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CTruckDriving.html":{"url":"interfaces/CTruckDriving.html","title":"interface - CTruckDriving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CTruckDriving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { DrivingResult } from './driving-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { TruckDrivingOptions } from '../../interface/driving/truck-driving-options.interface';\n\nexport interface CTruckDriving {\n  new (opts?: TruckDrivingOptions): TruckDriving;\n}\n\nexport interface TruckDriving {\n  search(\n    path: any[],\n    callback: callbackFn\n  );\n  clear();\n  setProvinceAndNumber(province: string, number: string);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CWalking.html":{"url":"interfaces/CWalking.html","title":"interface - CWalking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CWalking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/amap.walking.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { WalkingResult } from './walking-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { WalkingOptions } from '../../interface/walking/walking-options.interface';\n\nexport interface CWalking {\n  new (opts?: WalkingOptions): Walking;\n}\n\nexport interface Walking {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  clear();\n  searchOnAMAP(obj: any);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeFilter.html":{"url":"classes/ChangeFilter.html","title":"class - ChangeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/change-filter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                has\n                            \n                            \n                                notEmpty\n                            \n                            \n                                    Static\n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_changes: SimpleChanges)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/utils/change-filter.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _changes\n                                                  \n                                                        \n                                                                        SimpleChanges\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/change-filter.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            notEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nnotEmpty(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/change-filter.ts:11\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            of\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    of(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/change-filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ChangeFilter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SimpleChanges } from '@angular/core';\nimport { Observable, of, EMPTY } from 'rxjs';\n\nexport class ChangeFilter {\n  constructor(private _changes: SimpleChanges) { }\n\n  static of(changes: SimpleChanges) {\n    return new ChangeFilter(changes);\n  }\n\n  notEmpty(key: string): Observable {\n    if (this._changes[key]) {\n      const value: T = this._changes[key].currentValue;\n\n      if (value !== undefined && value !== null) {\n        return of(value);\n      }\n    }\n    return EMPTY;\n  }\n\n  has(key: string): Observable {\n    if (this._changes[key]) {\n      const value: T = this._changes[key].currentValue;\n      return of(value);\n    }\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cinema.html":{"url":"interfaces/Cinema.html","title":"interface - Cinema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cinema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/cinema.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deep_src\n                                \n                                \n                                        intro\n                                \n                                \n                                        openingtime\n                                \n                                \n                                        opentime_GDF\n                                \n                                \n                                        parking\n                                \n                                \n                                        photos\n                                \n                                \n                                        rating\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deep_src\n                                    \n                                \n                                \n                                    \n                                        deep_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        openingtime\n                                    \n                                \n                                \n                                    \n                                        openingtime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime_GDF\n                                    \n                                \n                                \n                                    \n                                        opentime_GDF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parking\n                                    \n                                \n                                \n                                    \n                                        parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Cinema {\n  intro: string;\n  rating: string;\n  deep_src: string;\n  parking: string;\n  opentime_GDF: string;\n  openingtime: string;\n  photos: Photo[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Circle.html":{"url":"interfaces/Circle.html","title":"interface - Circle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Circle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.circle.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getBounds\n                                \n                                \n                                    getCenter\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getRadius\n                                \n                                \n                                    hide\n                                \n                                \n                                    setCenter\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setRadius\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CircleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(lnglat: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(radius: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { CircleOptions } from '../../interface/overlays/circle-options.interface';\n\nexport interface CCircle {\n  new (opts: CircleOptions): Circle;\n}\n\nexport interface Circle {\n  setCenter(lnglat: LngLat|number[]): void;\n  getCenter(): LngLat;\n  getBounds(): Bounds;\n  setRadius(radius: number): void;\n  getRadius(): number;\n  setOptions(opt: CircleOptions): void;\n  getOptions(): CircleOptions;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|number[]): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleMarker.html":{"url":"interfaces/CircleMarker.html","title":"interface - CircleMarker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CircleMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCenter\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getRadius\n                                \n                                \n                                    hide\n                                \n                                \n                                    setCenter\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setRadius\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CircleMarkerOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRadius\n                        \n                        \n                    \n                \n            \n            \n                \ngetRadius()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(lnglat: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: CircleMarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                CircleMarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRadius\n                        \n                        \n                    \n                \n            \n            \n                \nsetRadius(radius: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.circle-marker.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { CircleMarkerOptions } from '../../interface/overlays/circle-marker-options.interface';\n\nexport interface CCircleMarker {\n  new (opts: CircleMarkerOptions): CircleMarker;\n}\n\nexport interface CircleMarker {\n  setCenter(lnglat: LngLat|number[]): void;\n  getCenter(): LngLat;\n  setRadius(radius: number): void;\n  getRadius(): number;\n  setOptions(opt: CircleMarkerOptions): void;\n  getOptions(): CircleMarkerOptions;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleMarkerOptions.html":{"url":"interfaces/CircleMarkerOptions.html","title":"interface - CircleMarkerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CircleMarkerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/circle-marker-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        center\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\n\nexport interface CircleMarkerOptions {\n  map?: Map;\n  zIndex?: number;\n  center?: LngLat;\n  bubble?: boolean;\n  cursor?: string;\n  radius?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  extData?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CircleMarkerService.html":{"url":"injectables/CircleMarkerService.html","title":"injectable - CircleMarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CircleMarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: CircleMarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CircleMarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(circle: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'circle-marker-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, CircleMarker, Map } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { CircleMarkerOptions } from '../../types/interface';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class CircleMarkerService extends EventBinder {\n  TAG = 'circle-marker-service';\n  private _map: Promise;\n\n  constructor(\n    private map: MapAPIService,\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: CircleMarkerOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.CircleMarker(options);\n    });\n  }\n\n  destroy(circle: Promise): Promise {\n    return circle.then(m => {\n      m.setMap(null);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CircleOptions.html":{"url":"interfaces/CircleOptions.html","title":"interface - CircleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CircleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/circle-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        center\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\n\nexport interface CircleOptions {\n  map?: Map;\n  zIndex?: number;\n  center?: LngLat;\n  bubble?: boolean;\n  cursor?: string;\n  radius?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  extData?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CircleService.html":{"url":"injectables/CircleService.html","title":"injectable - CircleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CircleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/circle/circle.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/circle/circle.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(c: Circle)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Circle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(circle: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    circle\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'circle-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/circle/circle.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Circle, Map, CircleEditor } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { CircleOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class CircleService extends EventBinder {\n  TAG = 'circle-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: CircleOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Circle(options);\n    });\n  }\n\n  destroy(circle: Promise): Promise {\n    return circle.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.CircleEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(c: Circle): Promise {\n    return this._map.then(map => new AMap.CircleEditor(map, c));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfo.html":{"url":"interfaces/CityInfo.html","title":"interface - CityInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/city-info.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        citycode\n                                \n                                \n                                        count\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfo {\n  name: string;\n  citycode: string;\n  adcode: string;\n  count: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterStyle.html":{"url":"interfaces/ClusterStyle.html","title":"interface - ClusterStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/cluster-style.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        imageOffset\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                        size\n                                \n                                \n                                            Optional\n                                        textColor\n                                \n                                \n                                            Optional\n                                        textSize\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageOffset\n                                    \n                                \n                                \n                                    \n                                        imageOffset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         Size\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Size\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textColor\n                                    \n                                \n                                \n                                    \n                                        textColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textSize\n                                    \n                                \n                                \n                                    \n                                        textSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Size } from './amap.size';\nimport { Pixel } from './amap.pixel';\n\nexport interface ClusterStyle {\n  url: string;\n  size: Size;\n  offset?: Pixel;\n  imageOffset?: Pixel;\n  textColor?: string;\n  textSize?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cross.html":{"url":"interfaces/Cross.html","title":"interface - Cross","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cross\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/cross.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        direction\n                                \n                                \n                                        distance\n                                \n                                \n                                        first_id\n                                \n                                \n                                        first_name\n                                \n                                \n                                        location\n                                \n                                \n                                        second_id\n                                \n                                \n                                        second_name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_id\n                                    \n                                \n                                \n                                    \n                                        first_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        second_id\n                                    \n                                \n                                \n                                    \n                                        second_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        second_name\n                                    \n                                \n                                \n                                    \n                                        second_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface Cross {\n  distance: number;\n  direction: string;\n  location: LngLat;\n  first_id: string;\n  first_name: string;\n  second_id: string;\n  second_name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DebugLoggerService.html":{"url":"injectables/DebugLoggerService.html","title":"injectable - DebugLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DebugLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/logger/debug-logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                d\n                            \n                            \n                                e\n                            \n                            \n                                i\n                            \n                            \n                                w\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            d\n                        \n                        \n                    \n                \n            \n            \n                \nd(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            e\n                        \n                        \n                    \n                \n            \n            \n                \ne(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            i\n                        \n                        \n                    \n                \n            \n            \n                \ni(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            w\n                        \n                        \n                    \n                \n            \n            \n                \nw(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/debug-logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DebugLoggerService {\n\n  constructor() { }\n\n  i(tag: string, ...args: any[]) {\n    console.log(`[${tag}]`, ...args);\n  }\n\n  e(tag: string, ...args: any[]) {\n    console.error(`[${tag}]`, ...args);\n  }\n\n  w(tag: string, ...args: any[]) {\n    console.warn(`[${tag}]`, ...args);\n  }\n\n  d(tag: string, ...args: any[]) {\n    console.log(`[${tag}]`, ...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dining.html":{"url":"interfaces/Dining.html","title":"interface - Dining","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dining\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/dining.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addition\n                                \n                                \n                                        atmosphere\n                                \n                                \n                                        cost\n                                \n                                \n                                        cp_rating\n                                \n                                \n                                        cuisines\n                                \n                                \n                                        deep_src\n                                \n                                \n                                        environment_rating\n                                \n                                \n                                        intro\n                                \n                                \n                                        opentime\n                                \n                                \n                                        opentime_GDF\n                                \n                                \n                                        ordering_app_url\n                                \n                                \n                                        ordering_wap_url\n                                \n                                \n                                        ordering_web_url\n                                \n                                \n                                        photos\n                                \n                                \n                                        rating\n                                \n                                \n                                        recommend\n                                \n                                \n                                        service_rating\n                                \n                                \n                                        tag\n                                \n                                \n                                        taste_rating\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addition\n                                    \n                                \n                                \n                                    \n                                        addition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        atmosphere\n                                    \n                                \n                                \n                                    \n                                        atmosphere:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cp_rating\n                                    \n                                \n                                \n                                    \n                                        cp_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cuisines\n                                    \n                                \n                                \n                                    \n                                        cuisines:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deep_src\n                                    \n                                \n                                \n                                    \n                                        deep_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment_rating\n                                    \n                                \n                                \n                                    \n                                        environment_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime\n                                    \n                                \n                                \n                                    \n                                        opentime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime_GDF\n                                    \n                                \n                                \n                                    \n                                        opentime_GDF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_app_url\n                                    \n                                \n                                \n                                    \n                                        ordering_app_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_wap_url\n                                    \n                                \n                                \n                                    \n                                        ordering_wap_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_web_url\n                                    \n                                \n                                \n                                    \n                                        ordering_web_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommend\n                                    \n                                \n                                \n                                    \n                                        recommend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_rating\n                                    \n                                \n                                \n                                    \n                                        service_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taste_rating\n                                    \n                                \n                                \n                                    \n                                        taste_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Dining {\n  cuisines: string;\n  tag: string;\n  intro: string;\n  rating: string;\n  cp_rating: string;\n  deep_src: string;\n  taste_rating: string;\n  environment_rating: string;\n  service_rating: string;\n  cost: string;\n  recommend: string;\n  atmosphere: string;\n  ordering_wap_url: string;\n  ordering_web_url: string;\n  ordering_app_url: string;\n  opentime_GDF: string;\n  opentime: string;\n  addition: string;\n  photos: Photo[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Discount.html":{"url":"interfaces/Discount.html","title":"interface - Discount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Discount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/discount.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        detail\n                                \n                                \n                                        end_time\n                                \n                                \n                                        photos\n                                \n                                \n                                        provider\n                                \n                                \n                                        sold_num\n                                \n                                \n                                        start_time\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_time\n                                    \n                                \n                                \n                                    \n                                        end_time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold_num\n                                    \n                                \n                                \n                                    \n                                        sold_num:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_time\n                                    \n                                \n                                \n                                    \n                                        start_time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Discount {\n  title: string;\n  detail: string;\n  start_time: string;\n  end_time: string;\n  sold_num: number;\n  photos: Photo[];\n  url: string;\n  provider: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/District.html":{"url":"interfaces/District.html","title":"interface - District","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  District\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/district-search/district.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        boundaries\n                                \n                                \n                                        center\n                                \n                                \n                                        citycode\n                                \n                                \n                                        districtList\n                                \n                                \n                                        level\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boundaries\n                                    \n                                \n                                \n                                    \n                                        boundaries:         LngLat[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[][]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        districtList\n                                    \n                                \n                                \n                                    \n                                        districtList:         District[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         District[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface District {\n  name: string;\n  center: LngLat;\n  citycode: string;\n  adcode: string;\n  level: string;\n  boundaries: LngLat[][];\n  districtList: District[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistrictSearch.html":{"url":"interfaces/DistrictSearch.html","title":"interface - DistrictSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DistrictSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/district-search/amap.district-search.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    search\n                                \n                                \n                                    setLevel\n                                \n                                \n                                    setSubdistrict\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, callback: callbackFn, opts?: DistrictSearchOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/district-search/amap.district-search.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                DistrictSearchOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLevel\n                        \n                        \n                    \n                \n            \n            \n                \nsetLevel(level: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/district-search/amap.district-search.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubdistrict\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubdistrict(district: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/district-search/amap.district-search.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    district\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DistrictSearchOptions } from '../../interface/district-search-options.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { DistrictSearchResult } from './district-search-result';\n\nexport interface CDistrictSearch {\n  new (opts?: DistrictSearchOptions): DistrictSearch;\n}\n\nexport interface DistrictSearch {\n  search(\n    keyword: string,\n    callback: callbackFn,\n    opts?: DistrictSearchOptions\n  );\n  setLevel(level: string);\n  setSubdistrict(district: number);\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistrictSearchOptions.html":{"url":"interfaces/DistrictSearchOptions.html","title":"interface - DistrictSearchOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DistrictSearchOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/district-search-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        level\n                                \n                                \n                                            Optional\n                                        showbiz\n                                \n                                \n                                            Optional\n                                        subdistrict\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showbiz\n                                    \n                                \n                                \n                                    \n                                        showbiz:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subdistrict\n                                    \n                                \n                                \n                                    \n                                        subdistrict:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DistrictSearchOptions {\n  level?: string;\n  showbiz?: boolean;\n  extensions?: string;\n  subdistrict?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistrictSearchResult.html":{"url":"interfaces/DistrictSearchResult.html","title":"interface - DistrictSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DistrictSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/district-search/district-search-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        districtList\n                                \n                                \n                                        info\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        districtList\n                                    \n                                \n                                \n                                    \n                                        districtList:         District[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         District[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { District } from './district';\n\nexport interface DistrictSearchResult {\n  info: string;\n  districtList: District[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentRef.html":{"url":"injectables/DocumentRef.html","title":"injectable - DocumentRef","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DocumentRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/browser-globals.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNativeDocument\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeDocument\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeDocument()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/browser-globals.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WindowRef {\n  getNativeWindow() {\n    return window;\n  }\n}\n\n@Injectable()\nexport class DocumentRef {\n  getNativeDocument() {\n    return document;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DriveRoute.html":{"url":"interfaces/DriveRoute.html","title":"interface - DriveRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DriveRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/drive-route.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        policy\n                                \n                                \n                                        restriction\n                                \n                                \n                                        steps\n                                \n                                \n                                        time\n                                \n                                \n                                        tolls\n                                \n                                \n                                        tolls_distance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restriction\n                                    \n                                \n                                \n                                    \n                                        restriction:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:         DriveStep[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DriveStep[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tolls\n                                    \n                                \n                                \n                                    \n                                        tolls:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tolls_distance\n                                    \n                                \n                                \n                                    \n                                        tolls_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveStep } from './drive-step';\n\nexport interface DriveRoute {\n  distance: number;\n  time: number;\n  policy: string;\n  tolls: number;\n  tolls_distance: number;\n  steps: DriveStep[];\n  restriction: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DriveStep.html":{"url":"interfaces/DriveStep.html","title":"interface - DriveStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DriveStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/drive-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        assist_action\n                                \n                                \n                                        cities\n                                \n                                \n                                        distance\n                                \n                                \n                                        end_location\n                                \n                                \n                                        instruction\n                                \n                                \n                                        orientation\n                                \n                                \n                                        path\n                                \n                                \n                                        road\n                                \n                                \n                                        start_location\n                                \n                                \n                                        time\n                                \n                                \n                                        tmcs\n                                \n                                \n                                        toll_road\n                                \n                                \n                                        tolls\n                                \n                                \n                                        tolls_distance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assist_action\n                                    \n                                \n                                \n                                    \n                                        assist_action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:         ViaCity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViaCity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_location\n                                    \n                                \n                                \n                                    \n                                        end_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instruction\n                                    \n                                \n                                \n                                    \n                                        instruction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         LngLat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_location\n                                    \n                                \n                                \n                                    \n                                        start_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tmcs\n                                    \n                                \n                                \n                                    \n                                        tmcs:         TMC[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TMC[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toll_road\n                                    \n                                \n                                \n                                    \n                                        toll_road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tolls\n                                    \n                                \n                                \n                                    \n                                        tolls:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tolls_distance\n                                    \n                                \n                                \n                                    \n                                        tolls_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { District } from '../district-search/district';\n\nexport interface DriveStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n  distance: number;\n  tolls: number;\n  tolls_distance: number;\n  toll_road: string;\n  time: number;\n  path: LngLat[];\n  cities: ViaCity[];\n  tmcs: TMC[];\n}\n\nexport interface ViaCity {\n  name: string;\n  citycode: string;\n  adcode: string;\n  districts: District[];\n}\n\nexport interface TMC {\n  lcode: string;\n  distance: number;\n  status: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Driving.html":{"url":"interfaces/Driving.html","title":"interface - Driving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Driving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/amap.driving.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    clearAvoidPolygons\n                                \n                                \n                                    clearAvoidRoad\n                                \n                                \n                                    getAvoidPolygons\n                                \n                                \n                                    getAvoidRoad\n                                \n                                \n                                    search\n                                \n                                \n                                    search\n                                \n                                \n                                    searchOnAMAP\n                                \n                                \n                                    setAvoidPolygons\n                                \n                                \n                                    setAvoidRoad\n                                \n                                \n                                    setPolicy\n                                \n                                \n                                    setProvinceAndNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \nclearAvoidPolygons()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \nclearAvoidRoad()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvoidPolygons()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvoidRoad()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: ILngLat, destination: ILngLat, opts: any, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(points: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAvoidPolygons\n                        \n                        \n                    \n                \n            \n            \n                \nsetAvoidPolygons(path: ILngLat[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                ILngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAvoidRoad\n                        \n                        \n                    \n                \n            \n            \n                \nsetAvoidRoad(road: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    road\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolicy(policy: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    policy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvinceAndNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvinceAndNumber(province: string, number: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.driving.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    province\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { DrivingResult } from './driving-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { DrivingOptions } from '../../interface/driving/driving-options.interface';\n\nexport interface CDriving {\n  new (opts?: DrivingOptions): Driving;\n}\n\nexport interface Driving {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    opts: any,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  setPolicy(policy: any);\n  setAvoidPolygons(path: ILngLat[]);\n  setAvoidRoad(road: string);\n  clearAvoidRoad();\n  clearAvoidPolygons();\n  getAvoidPolygons(): LngLat[];\n  getAvoidRoad(): string;\n  clear();\n  searchOnAMAP(obj: any);\n  setProvinceAndNumber(province: string, number: string);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrivingOptions.html":{"url":"interfaces/DrivingOptions.html","title":"interface - DrivingOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrivingOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/driving/driving-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        ferry\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        number\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        policy\n                                \n                                \n                                            Optional\n                                        province\n                                \n                                \n                                            Optional\n                                        showTraffic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ferry\n                                    \n                                \n                                \n                                    \n                                        ferry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTraffic\n                                    \n                                \n                                \n                                    \n                                        showTraffic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface DrivingOptions {\n  policy?: any;\n  extensions?: string;\n  ferry?: number;\n  map?: Map;\n  panel?: any;\n  hideMarkers?: boolean;\n  showTraffic?: boolean;\n  province?: string;\n  number?: string;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrivingResult.html":{"url":"interfaces/DrivingResult.html","title":"interface - DrivingResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrivingResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/driving-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        end\n                                \n                                \n                                        info\n                                \n                                \n                                        origin\n                                \n                                \n                                        routes\n                                \n                                \n                                        start\n                                \n                                \n                                        taxi_cost\n                                \n                                \n                                        waypoints\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:         DriveRoute[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DriveRoute[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxi_cost\n                                    \n                                \n                                \n                                    \n                                        taxi_cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waypoints\n                                    \n                                \n                                \n                                    \n                                        waypoints:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Poi } from '../place-search/poi';\nimport { DriveRoute } from './drive-route';\n\nexport interface DrivingResult {\n  info: string;\n  origin: LngLat;\n  destination: LngLat;\n  start: Poi;\n  end: Poi;\n  waypoints: Poi;\n  taxi_cost: number;\n  routes: DriveRoute[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Editor.html":{"url":"interfaces/Editor.html","title":"interface - Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Editor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.editor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    close\n                                \n                                \n                                    off\n                                \n                                \n                                    on\n                                \n                                \n                                    open\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            off\n                        \n                        \n                    \n                \n            \n            \n                \noff(eventName: string, handler: any, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(eventName: string, handler: any, context?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.editor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { Circle } from './overlays/amap.circle';\nimport { Polyline } from './overlays/amap.polyline';\nimport { Polygon } from './overlays/amap.polygon';\nimport { BezierCurve } from './overlays/amap.bezier-curve';\nimport { Ellipse } from './overlays/amap.ellipse';\nimport { Rectangle } from './overlays/amap.rectangle';\n\n// general editor class\nexport interface Editor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface CEditor {\n  new (map: Map, target: T): Editor;\n}\n\n// BezierCurve editor class\nexport interface BezierCurveEditor {\n  open(): void;\n  close(): void;\n  on(eventName: string, handler: any, context?: any): void;\n  off(eventName: string, handler: any, context?: any): void;\n}\n\nexport interface BezierCurveEditorOptions {\n  getMarkerOptions?: (type: string) => any;\n  getCtrlLineOptions?: () => any;\n}\n\nexport interface CBezierCurveEditor {\n  new (map: Map, target: BezierCurve, opt?: BezierCurveEditorOptions): BezierCurveEditor;\n}\n\n// Common editors\nexport type CircleEditor = Editor;\nexport type CCircleEditor = CEditor;\n\nexport type PolyEditor = Editor;\nexport type CPolyEditor = CEditor;\n\nexport type EllipseEditor = Editor;\nexport type CEllipseEditor = CEditor;\n\nexport type RectangleEditor = Editor;\nexport type CRectangleEditor = CEditor;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ellipse.html":{"url":"interfaces/Ellipse.html","title":"interface - Ellipse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Ellipse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getBounds\n                                \n                                \n                                    getCenter\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    hide\n                                \n                                \n                                    setCenter\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCenter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EllipseOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetCenter(center: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    center\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: EllipseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                EllipseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.ellipse.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { EllipseOptions } from '../../interface/overlays/ellipse-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\n\nexport interface CEllipse {\n  new (opts: EllipseOptions): Ellipse;\n}\n\nexport interface Ellipse {\n  setOptions(opt: EllipseOptions);\n  getOptions(): EllipseOptions;\n  getCenter(): LngLat;\n  setCenter(center: LngLat|ILngLat): void;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map);\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EllipseOptions.html":{"url":"interfaces/EllipseOptions.html","title":"interface - EllipseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EllipseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/ellipse-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        center\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\n\nexport interface EllipseOptions {\n  map?: Map;\n  zIndex?: number;\n  center?: LngLat;\n  radius?: number[];\n  bubble?: boolean;\n  cursor?: string;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number;\n  extData?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EllipseService.html":{"url":"injectables/EllipseService.html","title":"injectable - EllipseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EllipseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/ellipse/ellipse.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: EllipseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EllipseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(e: Ellipse)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Ellipse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(ellipse: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ellipse\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ellipse-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/ellipse/ellipse.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Ellipse, Map, EllipseEditor } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { EllipseOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class EllipseService extends EventBinder {\n  TAG = 'ellipse-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: EllipseOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Ellipse(options);\n    });\n  }\n\n  destroy(ellipse: Promise): Promise {\n    return ellipse.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.EllipseEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(e: Ellipse): Promise {\n    return this._map.then(map => new AMap.EllipseEditor(map, e));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventBinder.html":{"url":"classes/EventBinder.html","title":"class - EventBinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventBinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/event-binder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/event-binder.ts:7\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { AMapClass } from '../types/class';\ndeclare const AMap: AMapClass;\n\nexport class EventBinder {\n\n  bindEvent(target: Promise | T, event: string): Observable {\n    if (target instanceof Promise) {\n      return Observable.create(observer => {\n        let listenerPromise = target.then(m => {\n          return AMap.event.addListener(m, event, e => {\n            setTimeout(() => observer.next(e));\n          }, this);\n        });\n\n        return () => {\n          listenerPromise.then(listener => {\n            AMap.event.removeListener(listener);\n            listenerPromise = null;\n          });\n        };\n      });\n    } else {\n      return Observable.create(observer => {\n        let listener = AMap.event.addListener(target, event, e => {\n          setTimeout(() => observer.next(e));\n        }, this);\n\n        return () => {\n          AMap.event.removeListener(listener);\n          listener = null;\n        };\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Geocode.html":{"url":"interfaces/Geocode.html","title":"interface - Geocode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Geocode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/geocode.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        addressComponent\n                                \n                                \n                                        formattedAddress\n                                \n                                \n                                        level\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addressComponent\n                                    \n                                \n                                \n                                    \n                                        addressComponent:         AddressComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AddressComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedAddress\n                                    \n                                \n                                \n                                    \n                                        formattedAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { AddressComponent } from './address-component';\n\nexport interface Geocode {\n  addressComponent: AddressComponent;\n  formattedAddress: string;\n  location: LngLat;\n  adcode: string;\n  level: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeocodeResult.html":{"url":"interfaces/GeocodeResult.html","title":"interface - GeocodeResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeocodeResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/geocode-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geocodes\n                                \n                                \n                                        info\n                                \n                                \n                                        resultNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geocodes\n                                    \n                                \n                                \n                                    \n                                        geocodes:         Geocode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Geocode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultNum\n                                    \n                                \n                                \n                                    \n                                        resultNum:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Geocode } from './geocode';\n\nexport interface GeocodeResult {\n  info: string;\n  geocodes: Geocode[];\n  resultNum: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Geocoder.html":{"url":"interfaces/Geocoder.html","title":"interface - Geocoder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Geocoder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAddress\n                                \n                                \n                                    getLocation\n                                \n                                \n                                    setCity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddress\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddress(location: ILngLat | ILngLat[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                ILngLat | ILngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation(address: string, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/geocoder/amap.geocoder.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GeocoderOptions } from '../../interface/geocoder-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { GeocodeResult } from './geocode-result';\nimport { ReGeocodeResult } from './re-geocode-result';\n\nexport interface CGeocoder {\n  new (opts?: GeocoderOptions): Geocoder;\n}\n\nexport interface Geocoder {\n  getLocation(address: string, callback: callbackFn);\n  setCity(city: string);\n  getAddress(location: ILngLat|ILngLat[], callback: callbackFn);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeocoderOptions.html":{"url":"interfaces/GeocoderOptions.html","title":"interface - GeocoderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeocoderOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/geocoder-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        batch\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                        extensions\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        batch\n                                    \n                                \n                                \n                                    \n                                        batch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GeocoderOptions {\n  city?: string;\n  radius?: number;\n  batch?: boolean;\n  extensions: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeocoderResult.html":{"url":"interfaces/GeocoderResult.html","title":"interface - GeocoderResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeocoderResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/geocoder-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geocodes\n                                \n                                \n                                        info\n                                \n                                \n                                        regeocode\n                                \n                                \n                                        resultNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geocodes\n                                    \n                                \n                                \n                                    \n                                        geocodes:         Geocode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Geocode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        regeocode\n                                    \n                                \n                                \n                                    \n                                        regeocode:         ReGeocode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReGeocode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultNum\n                                    \n                                \n                                \n                                    \n                                        resultNum:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Geocode } from './geocode';\nimport { ReGeocode } from './re-geocode';\n\nexport interface GeocoderResult {\n  info: string;\n  geocodes: Geocode[];\n  resultNum: number;\n  regeocode: ReGeocode;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Groupbuy.html":{"url":"interfaces/Groupbuy.html","title":"interface - Groupbuy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Groupbuy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/groupbuy.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        detail\n                                \n                                \n                                        discount\n                                \n                                \n                                        etime\n                                \n                                \n                                        groupbuy_price\n                                \n                                \n                                        original_price\n                                \n                                \n                                        photos\n                                \n                                \n                                        provider\n                                \n                                \n                                        sold_num\n                                \n                                \n                                        stime\n                                \n                                \n                                        ticket_address\n                                \n                                \n                                        ticket_tel\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                                \n                                        type_code\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discount\n                                    \n                                \n                                \n                                    \n                                        discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etime\n                                    \n                                \n                                \n                                    \n                                        etime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupbuy_price\n                                    \n                                \n                                \n                                    \n                                        groupbuy_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_price\n                                    \n                                \n                                \n                                    \n                                        original_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold_num\n                                    \n                                \n                                \n                                    \n                                        sold_num:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stime\n                                    \n                                \n                                \n                                    \n                                        stime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket_address\n                                    \n                                \n                                \n                                    \n                                        ticket_address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket_tel\n                                    \n                                \n                                \n                                    \n                                        ticket_tel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type_code\n                                    \n                                \n                                \n                                    \n                                        type_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Groupbuy {\n  title: string;\n  type_code: string;\n  type: string;\n  detail: string;\n  stime: string;\n  etime: string;\n  count: number;\n  sold_num: number;\n  original_price: number;\n  groupbuy_price: number;\n  discount: number;\n  ticket_address: string;\n  ticket_tel: string;\n  photos: Photo[];\n  url: string;\n  provider: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Heatmap.html":{"url":"interfaces/Heatmap.html","title":"interface - Heatmap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Heatmap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addDataPoint\n                                \n                                \n                                    getDataSet\n                                \n                                \n                                    getMap\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    hide\n                                \n                                \n                                    setDataSet\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDataPoint\n                        \n                        \n                    \n                \n            \n            \n                \naddDataPoint(lng: number, lat: number, count?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lng\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lat\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataSet\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataSet()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HeatmapOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDataSet\n                        \n                        \n                    \n                \n            \n            \n                \nsetDataSet(dataset: HeatmapData)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataset\n                                    \n                                                HeatmapData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: HeatmapOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                HeatmapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/layers/amap.heatmap.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapDataSet.html":{"url":"interfaces/HeatmapDataSet.html","title":"interface - HeatmapDataSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeatmapDataSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        max\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     HeatmapLngLatData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HeatmapLngLatData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapDataUrl.html":{"url":"interfaces/HeatmapDataUrl.html","title":"interface - HeatmapDataUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeatmapDataUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        dataParser\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataParser\n                                    \n                                \n                                \n                                    \n                                        dataParser:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapLngLatData.html":{"url":"interfaces/HeatmapLngLatData.html","title":"interface - HeatmapLngLatData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeatmapLngLatData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        count\n                                \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { HeatmapOptions } from '../../interface/layers/heatmap-options.interface';\n\nexport interface CHeatmap {\n  new(map: Map, opts: HeatmapOptions): Heatmap;\n}\n\nexport interface Heatmap {\n  setMap(map: Map);\n  setOptions(opt: HeatmapOptions);\n  addDataPoint(lng: number, lat: number, count?: number);\n  setDataSet(dataset: HeatmapData);\n\n  hide(): void;\n  show(): void;\n\n  getMap(): Map;\n  getOptions(): HeatmapOptions;\n  getDataSet(): any;\n}\n\nexport interface HeatmapLngLatData {\n  lng: number;\n  lat: number;\n  count?: number;\n}\n\nexport interface HeatmapDataSet {\n  max?: number; // 权重的最大值, 不填则取数据集count最大值\n  data: HeatmapLngLatData[]; // 坐标数据集\n}\n\nexport interface HeatmapDataUrl {\n  data: string; // jsonp格式数据的服务地址URL;\n  dataParser: (data: any) => HeatmapLngLatData[]; // 数据格式转换function, 当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换；\n}\n\nexport type HeatmapData =\n  | HeatmapDataSet\n  | HeatmapDataUrl;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeatmapOptions.html":{"url":"interfaces/HeatmapOptions.html","title":"interface - HeatmapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeatmapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/layers/heatmap-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        gradient\n                                \n                                \n                                            Optional\n                                        opacity\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                                \n                                            Optional\n                                        zooms\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gradient\n                                    \n                                \n                                \n                                    \n                                        gradient:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                    \n                                \n                                \n                                    \n                                        opacity:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zooms\n                                    \n                                \n                                \n                                    \n                                        zooms:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HeatmapOptions {\n  radius?: number;\n  gradient?: any;\n  opacity?: number[];\n  zooms?: number[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeatmapService.html":{"url":"injectables/HeatmapService.html","title":"injectable - HeatmapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HeatmapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/heatmap/heatmap.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: HeatmapOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HeatmapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(heatmap: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    heatmap\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'heatmap-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/heatmap/heatmap.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Heatmap, Map } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { HeatmapOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class HeatmapService extends EventBinder {\n  TAG = 'heatmap-service';\n  private _map: Promise;\n  private _plugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: HeatmapOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.Heatmap');\n    }\n\n    return this._plugin.then(() => this._map)\n      .then(map => {\n        const heatmap = new AMap.Heatmap(map, options);\n        return heatmap;\n      });\n  }\n\n  destroy(heatmap: Promise): Promise {\n    return heatmap.then(hm => hm.setMap(null));\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotel.html":{"url":"interfaces/Hotel.html","title":"interface - Hotel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Hotel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/hotel.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addition\n                                \n                                \n                                        deep_src\n                                \n                                \n                                        environment_rating\n                                \n                                \n                                        faci_rating\n                                \n                                \n                                        health_rating\n                                \n                                \n                                        intro\n                                \n                                \n                                        lowest_price\n                                \n                                \n                                        photos\n                                \n                                \n                                        rating\n                                \n                                \n                                        service_rating\n                                \n                                \n                                        star\n                                \n                                \n                                        traffic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addition\n                                    \n                                \n                                \n                                    \n                                        addition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deep_src\n                                    \n                                \n                                \n                                    \n                                        deep_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment_rating\n                                    \n                                \n                                \n                                    \n                                        environment_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faci_rating\n                                    \n                                \n                                \n                                    \n                                        faci_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        health_rating\n                                    \n                                \n                                \n                                    \n                                        health_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lowest_price\n                                    \n                                \n                                \n                                    \n                                        lowest_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_rating\n                                    \n                                \n                                \n                                    \n                                        service_rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        star\n                                    \n                                \n                                \n                                    \n                                        star:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        traffic\n                                    \n                                \n                                \n                                    \n                                        traffic:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Hotel {\n  rating: string;\n  star: string;\n  intro: string;\n  lowest_price: string;\n  faci_rating: string;\n  health_rating: string;\n  environment_rating: string;\n  service_rating: string;\n  traffic: string;\n  addition: string;\n  deep_src: string;\n  photos: Photo[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClusterStyle.html":{"url":"interfaces/IClusterStyle.html","title":"interface - IClusterStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IClusterStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/cluster-style.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        imageOffset\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                        size\n                                \n                                \n                                            Optional\n                                        textColor\n                                \n                                \n                                            Optional\n                                        textSize\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageOffset\n                                    \n                                \n                                \n                                    \n                                        imageOffset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         ISize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textColor\n                                    \n                                \n                                \n                                    \n                                        textColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textSize\n                                    \n                                \n                                \n                                    \n                                        textSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISize } from './size.interface';\nimport { IPixel } from './pixel.interface';\n\nexport interface IClusterStyle {\n  url: string;\n  size: ISize;\n  offset?: IPixel;\n  imageOffset?: IPixel;\n  textColor?: string;\n  textSize?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIcon.html":{"url":"interfaces/IIcon.html","title":"interface - IIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/icon.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                            Optional\n                                        imageOffset\n                                \n                                \n                                            Optional\n                                        imageSize\n                                \n                                \n                                            Optional\n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageOffset\n                                    \n                                \n                                \n                                    \n                                        imageOffset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageSize\n                                    \n                                \n                                \n                                    \n                                        imageSize:         ISize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         ISize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISize } from './size.interface';\nimport { IPixel } from './pixel.interface';\n\nexport interface IIcon {\n  size?: ISize;\n  imageOffset?: IPixel;\n  image?: string;\n  imageSize?: ISize;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyMap.html":{"url":"interfaces/IKeyMap.html","title":"interface - IKeyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/key-map.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/utils/key-map.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface IKeyMap {\n  [key: string]: T;\n}\n\nexport class KeyMap {\n  private _map: IKeyMap = Object.create(null);\n  private _size = 0;\n\n  get size() { return this._size; }\n\n  set(key: string, value: T): KeyMap {\n    if (this._map[key] === undefined && value !== undefined) {\n      this._size++;\n    }\n\n    this._map[key] = value;\n    return this;\n  }\n\n  get(key: string) {\n    return this._map[key];\n  }\n\n  delete(key: string) {\n    const value = this._map[key];\n\n    if (value !== undefined) {\n      this._size--;\n    }\n\n    delete this._map[key];\n    return value;\n  }\n\n  has(key: string) {\n    return (this._map[key] !== undefined);\n  }\n\n  clear() {\n    this._map = Object.create(null);\n    this._size = 0;\n  }\n\n  keys() {\n    return Object.keys(this._map);\n  }\n\n  values() {\n    return Object.keys(this._map).map(key => this._map[key]);\n  }\n\n  entries() {\n    return Object.keys(this._map).map(key => [key, this._map[key]]);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabel.html":{"url":"interfaces/ILabel.html","title":"interface - ILabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/label.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        offset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPixel } from './pixel.interface';\n\nexport interface ILabel {\n  content: string;\n  offset: IPixel;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapAPILoaderConfig.html":{"url":"interfaces/IMapAPILoaderConfig.html","title":"interface - IMapAPILoaderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapAPILoaderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        apiVersion\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        urlPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiVersion\n                                    \n                                \n                                \n                                    \n                                        apiVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlPath\n                                    \n                                \n                                \n                                    \n                                        urlPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\nimport { LoggerService } from '../logger/logger.service';\n\nexport interface IMapAPILoaderConfig {\n  apiKey?: string;\n  apiVersion?: string;\n  urlPath?: string;\n  debug?: boolean;\n}\n\nexport const MAP_API_CONFIG = new InjectionToken('ngx-amap MAP_API_CONFIG');\n\n@Injectable()\nexport class MapAPILoaderService {\n  TAG = 'map-api-loader';\n\n  private _defaultUrl = 'https://webapi.amap.com/maps';\n  private _defaultVersion = '1.4.11';\n  private _config: IMapAPILoaderConfig;\n  private _documentRef: DocumentRef;\n  private _windowRef: WindowRef;\n  private _mapLoaded: Promise;\n\n  constructor(@Inject(MAP_API_CONFIG) config: any,\n              d: DocumentRef,\n              w: WindowRef,\n              private logger: LoggerService) {\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n\n  load() {\n    if (this._mapLoaded) {\n      return this._mapLoaded;\n    }\n    this.logger.d(this.TAG, 'loading AMap api...');\n\n    const callbackName = `ngxAMapAPILoader`;\n    const script = this._documentRef.getNativeDocument().createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.src = this.getSrcFromConfig(callbackName);\n\n    this._mapLoaded = new Promise((resolve: Function, reject: Function) => {\n      (this._windowRef.getNativeWindow())[callbackName] = () => {\n        this.logger.d(this.TAG, 'loading AMap api COMPLETE');\n        resolve();\n      };\n\n      script.onerror = (error: Event) => { reject(error); };\n    });\n\n    this._documentRef.getNativeDocument().body.appendChild(script);\n    return this._mapLoaded;\n  }\n\n  private getSrcFromConfig(callbackName: string) {\n    const urlBase = this._config.urlPath || this._defaultUrl;\n    const queryParams: {[key: string]: string | Array} = {\n      v: this._config.apiVersion || this._defaultVersion,\n      callback: callbackName,\n      key: this._config.apiKey\n    };\n    const params = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return !Array.isArray(queryParams[k]) ||\n            (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return {key: k, value: i.join(',')};\n        }\n        return {key: k, value: queryParams[k]};\n      })\n      .map((entry: {key: string, value: string}) => `${entry.key}=${entry.value}`)\n      .join('&');\n\n    return `${urlBase}?${params}`;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPixel.html":{"url":"interfaces/IPixel.html","title":"interface - IPixel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPixel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/pixel.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPixel {\n  x: number;\n  y: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPoiObject.html":{"url":"interfaces/IPoiObject.html","title":"interface - IPoiObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPoiObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/amap.place-search.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         ILngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlaceSearchOptions } from '../../interface/place-search-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { SearchResult } from './search-result';\nimport { Bounds } from '../amap.bounds';\nimport { Polygon } from '../overlays/amap.polygon';\n\nexport interface CPlaceSearch {\n  new (opts?: PlaceSearchOptions): PlaceSearch;\n}\n\nexport interface PlaceSearch {\n  search(keyword: string, callback: callbackFn);\n  searchNearBy(keyword: string, center: ILngLat, radius: number, callback: callbackFn);\n  searchInBounds(keyword: string, bounds: Bounds|Polygon, callback: callbackFn);\n  getDetails(POIID: string, callback: callbackFn);\n  setType(type: string);\n  setCityLimit(limit: boolean);\n  setPageIndex(pageIndex: number);\n  setPageSize(setPageSize: number);\n  setCity(city: string);\n  setLang(lang: string);\n  getLang(): string;\n  clear();\n  poiOnAMAP(obj: IPoiObject);\n  detailOnAMAP(obj: IPoiObject);\n}\n\nexport interface IPoiObject {\n  id: string;\n  name: string;\n  location: ILngLat;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISize.html":{"url":"interfaces/ISize.html","title":"interface - ISize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/size.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISize {\n  width: number;\n  height: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Icon.html":{"url":"interfaces/Icon.html","title":"interface - Icon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Icon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.icon.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getImageSize\n                                \n                                \n                                    setImageSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.icon.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Size\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setImageSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetImageSize(size: Size)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.icon.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                Size\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Size } from './amap.size';\nimport { IIcon } from '../interface/icon.interface';\n\n// AMap.Icon\nexport interface Icon {\n  getImageSize(): Size;\n  setImageSize(size: Size): void;\n}\n\nexport interface CIcon {\n  new (opts: IIcon): Icon;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/icon/icon.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pixel: PixelService, size: SizeService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/icon/icon.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: string | Icon | IIcon, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/icon/icon.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            string | Icon | IIcon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string | Icon\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'icon-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/icon/icon.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IIcon } from '../../types/interface';\nimport { AMapClass, Icon } from '../../types/class';\nimport { PixelService } from '../pixel/pixel.service';\nimport { SizeService } from '../size/size.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class IconService {\n  TAG = 'icon-service';\n\n  constructor(\n    private pixel: PixelService,\n    private size: SizeService\n  ) {}\n\n  create(options: string|Icon|IIcon, name?: string): string|Icon {\n    if (typeof options === 'string') {\n      return options;\n    }\n\n    if (!options) {\n      return undefined;\n    }\n\n    if (!(options).size) {\n      return options;\n    }\n\n    const iconOption = options;\n    if (iconOption.size) {\n      iconOption.size = this.size.create(iconOption.size, `${name || 'icon'}.size`);\n    }\n\n    if (iconOption.imageSize) {\n      iconOption.imageSize = this.size.create(iconOption.imageSize, `${name || 'icon'}.imageSize`);\n    }\n\n    if (iconOption.imageOffset) {\n      iconOption.imageOffset = this.pixel.create(iconOption.imageOffset, `${name || 'icon'}.imageOffset`);\n    }\n\n    if (!iconOption.size) {\n      delete iconOption.size;\n    }\n\n    if (!iconOption.imageSize) {\n      delete iconOption.imageSize;\n    }\n\n    if (!iconOption.imageOffset) {\n      delete iconOption.imageOffset;\n    }\n\n    return new AMap.Icon(iconOption);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoWindow.html":{"url":"interfaces/InfoWindow.html","title":"interface - InfoWindow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoWindow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.info-window.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    close\n                                \n                                \n                                    getContent\n                                \n                                \n                                    getIsOpen\n                                \n                                \n                                    getPosition\n                                \n                                \n                                    getSize\n                                \n                                \n                                    open\n                                \n                                \n                                    setContent\n                                \n                                \n                                    setPosition\n                                \n                                \n                                    setSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContent\n                        \n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsOpen\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsOpen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Size\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(map: Map, pos?: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContent\n                        \n                        \n                    \n                \n            \n            \n                \nsetContent(content: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(lnglat: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetSize(size: Size)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.info-window.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                Size\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LngLat } from './amap.lng-lat';\nimport { Map } from './amap.map';\nimport { Size } from './amap.size';\nimport { InfoWindowOptions } from '../interface/info-window-options.interface';\n\nexport interface CInfoWindow {\n  new (opts: InfoWindowOptions): InfoWindow;\n}\n\nexport interface InfoWindow {\n  open(map: Map, pos?: LngLat|number[]): void;\n  close(): void;\n  getIsOpen(): boolean;\n  setContent(content: any): void;\n  getContent(): string;\n  setPosition(lnglat: LngLat|number[]): void;\n  getPosition(): LngLat;\n  setSize(size: Size): void;\n  getSize(): Size;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoWindowOptions.html":{"url":"interfaces/InfoWindowOptions.html","title":"interface - InfoWindowOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InfoWindowOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/info-window-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoMove\n                                \n                                \n                                            Optional\n                                        closeWhenClickMap\n                                \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                            Optional\n                                        isCustom\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        showShadow\n                                \n                                \n                                            Optional\n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoMove\n                                    \n                                \n                                \n                                    \n                                        autoMove:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeWhenClickMap\n                                    \n                                \n                                \n                                    \n                                        closeWhenClickMap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCustom\n                                    \n                                \n                                \n                                    \n                                        isCustom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showShadow\n                                    \n                                \n                                \n                                    \n                                        showShadow:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         Size\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Size\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../class/amap.lng-lat';\nimport { Pixel } from '../class/amap.pixel';\nimport { Size } from '../class/amap.size';\n\nexport interface InfoWindowOptions {\n  isCustom?: boolean;\n  autoMove?: boolean;\n  closeWhenClickMap?: boolean;\n  content?: any;\n  size?: Size;\n  offset?: Pixel;\n  position?: LngLat;\n  showShadow?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoWindowService.html":{"url":"injectables/InfoWindowService.html","title":"injectable - InfoWindowService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoWindowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/info-window/info-window.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                open\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, pixel: PixelService, size: SizeService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: InfoWindowOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InfoWindowOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(infoWindow: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(infoWindow: InfoWindow, position?: ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoWindow\n                                    \n                                                InfoWindow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'info-window-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/info-window/info-window.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InfoWindowOptions, IPixel, ILngLat } from '../../types/interface';\nimport { AMapClass, InfoWindow, Map, Icon, LngLat } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { SizeService } from '../size/size.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class InfoWindowService extends EventBinder {\n  TAG = 'info-window-service';\n  private _map: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private pixel: PixelService,\n    private size: SizeService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: InfoWindowOptions): Promise {\n    return this._map.then(map => {\n      if (options.offset) {\n        options.offset = this.pixel.create(options.offset, 'offset');\n      }\n\n      if (options.size) {\n        options.size = this.size.create(options.size, 'size');\n      }\n\n      return new AMap.InfoWindow(options);\n    });\n  }\n\n  destroy(infoWindow: Promise): Promise {\n    return infoWindow.then(w => {\n      w.close();\n    });\n  }\n\n  open(infoWindow: InfoWindow, position?: ILngLat): Promise {\n    return this._map.then(map => {\n      infoWindow.open(map, position);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyMap.html":{"url":"classes/KeyMap.html","title":"class - KeyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/key-map.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                delete\n                            \n                            \n                                entries\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                keys\n                            \n                            \n                                set\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyMap\n\n                        \n                    \n                    \n                        \n                            Default value : Object.create(null)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/utils/key-map.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/utils/key-map.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entries\n                        \n                        \n                    \n                \n            \n            \n                \nentries()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(key: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            values\n                        \n                        \n                    \n                \n            \n            \n                \nvalues()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/key-map.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/utils/key-map.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        interface IKeyMap {\n  [key: string]: T;\n}\n\nexport class KeyMap {\n  private _map: IKeyMap = Object.create(null);\n  private _size = 0;\n\n  get size() { return this._size; }\n\n  set(key: string, value: T): KeyMap {\n    if (this._map[key] === undefined && value !== undefined) {\n      this._size++;\n    }\n\n    this._map[key] = value;\n    return this;\n  }\n\n  get(key: string) {\n    return this._map[key];\n  }\n\n  delete(key: string) {\n    const value = this._map[key];\n\n    if (value !== undefined) {\n      this._size--;\n    }\n\n    delete this._map[key];\n    return value;\n  }\n\n  has(key: string) {\n    return (this._map[key] !== undefined);\n  }\n\n  clear() {\n    this._map = Object.create(null);\n    this._size = 0;\n  }\n\n  keys() {\n    return Object.keys(this._map);\n  }\n\n  values() {\n    return Object.keys(this._map).map(key => this._map[key]);\n  }\n\n  entries() {\n    return Object.keys(this._map).map(key => [key, this._map[key]]);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelService.html":{"url":"injectables/LabelService.html","title":"injectable - LabelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LabelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/label/label.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pixel: PixelService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/label/label.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: ILabel, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/label/label.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ILabel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ILabel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'label-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/label/label.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ILabel } from '../../types/interface';\nimport { AMapClass } from '../../types/class';\nimport { PixelService } from '../pixel/pixel.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class LabelService {\n  TAG = 'label-service';\n\n  constructor(private pixel: PixelService) {}\n\n  create(options: ILabel, name?: string): ILabel {\n    if (options) {\n      return {\n        content: options.content,\n        offset: this.pixel.create(options.offset, `${name || 'label'}.offset`)\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LngLat.html":{"url":"interfaces/LngLat.html","title":"interface - LngLat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LngLat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.lng-lat.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Array\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    distance\n                                \n                                \n                                    equals\n                                \n                                \n                                    getLat\n                                \n                                \n                                    getLng\n                                \n                                \n                                    offset\n                                \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            distance\n                        \n                        \n                    \n                \n            \n            \n                \ndistance(lnglat: LngLat | Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \nequals(lnglat: LngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLat\n                        \n                        \n                    \n                \n            \n            \n                \ngetLat()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLng\n                        \n                        \n                    \n                \n            \n            \n                \ngetLng()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            offset\n                        \n                        \n                    \n                \n            \n            \n                \noffset(w: number, s: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    w\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LngLat\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.lng-lat.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface LngLat extends Array {\n  offset(w: number, s: number): LngLat;\n  distance(lnglat: LngLat|Array): number;\n  getLng(): number;\n  getLat(): number;\n  equals(lnglat: LngLat): boolean;\n  toString(): string;\n}\n\nexport interface CLngLat {\n  new (lng: number, lat: number): LngLat;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/logger/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                d\n                            \n                            \n                                e\n                            \n                            \n                                i\n                            \n                            \n                                w\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/logger/logger.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            d\n                        \n                        \n                    \n                \n            \n            \n                \nd(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/logger.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            e\n                        \n                        \n                    \n                \n            \n            \n                \ne(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/logger.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            i\n                        \n                        \n                    \n                \n            \n            \n                \ni(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/logger.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            w\n                        \n                        \n                    \n                \n            \n            \n                \nw(tag: string, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/logger/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoggerService {\n\n  constructor() { }\n\n  i(tag: string, ...args: any[]) {\n    console.log(`[${tag}]`, ...args);\n  }\n\n  e(tag: string, ...args: any[]) {\n    console.error(`[${tag}]`, ...args);\n  }\n\n  w(tag: string, ...args: any[]) {\n    console.warn(`[${tag}]`, ...args);\n  }\n\n  d(tag: string, ...args: any[]) {\n    // only stub;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapAPILoaderService.html":{"url":"injectables/MapAPILoaderService.html","title":"injectable - MapAPILoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapAPILoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Private\n                                _defaultUrl\n                            \n                            \n                                    Private\n                                _defaultVersion\n                            \n                            \n                                    Private\n                                _documentRef\n                            \n                            \n                                    Private\n                                _mapLoaded\n                            \n                            \n                                    Private\n                                _windowRef\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSrcFromConfig\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: any, d: DocumentRef, w: WindowRef, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        d\n                                                  \n                                                        \n                                                                        DocumentRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        w\n                                                  \n                                                        \n                                                                        WindowRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSrcFromConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSrcFromConfig(callbackName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IMapAPILoaderConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://webapi.amap.com/maps'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.4.11'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _documentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mapLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _windowRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WindowRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'map-api-loader'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\nimport { LoggerService } from '../logger/logger.service';\n\nexport interface IMapAPILoaderConfig {\n  apiKey?: string;\n  apiVersion?: string;\n  urlPath?: string;\n  debug?: boolean;\n}\n\nexport const MAP_API_CONFIG = new InjectionToken('ngx-amap MAP_API_CONFIG');\n\n@Injectable()\nexport class MapAPILoaderService {\n  TAG = 'map-api-loader';\n\n  private _defaultUrl = 'https://webapi.amap.com/maps';\n  private _defaultVersion = '1.4.11';\n  private _config: IMapAPILoaderConfig;\n  private _documentRef: DocumentRef;\n  private _windowRef: WindowRef;\n  private _mapLoaded: Promise;\n\n  constructor(@Inject(MAP_API_CONFIG) config: any,\n              d: DocumentRef,\n              w: WindowRef,\n              private logger: LoggerService) {\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n\n  load() {\n    if (this._mapLoaded) {\n      return this._mapLoaded;\n    }\n    this.logger.d(this.TAG, 'loading AMap api...');\n\n    const callbackName = `ngxAMapAPILoader`;\n    const script = this._documentRef.getNativeDocument().createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.src = this.getSrcFromConfig(callbackName);\n\n    this._mapLoaded = new Promise((resolve: Function, reject: Function) => {\n      (this._windowRef.getNativeWindow())[callbackName] = () => {\n        this.logger.d(this.TAG, 'loading AMap api COMPLETE');\n        resolve();\n      };\n\n      script.onerror = (error: Event) => { reject(error); };\n    });\n\n    this._documentRef.getNativeDocument().body.appendChild(script);\n    return this._mapLoaded;\n  }\n\n  private getSrcFromConfig(callbackName: string) {\n    const urlBase = this._config.urlPath || this._defaultUrl;\n    const queryParams: {[key: string]: string | Array} = {\n      v: this._config.apiVersion || this._defaultVersion,\n      callback: callbackName,\n      key: this._config.apiKey\n    };\n    const params = Object.keys(queryParams)\n      .filter((k: string) => queryParams[k] != null)\n      .filter((k: string) => {\n        // remove empty arrays\n        return !Array.isArray(queryParams[k]) ||\n            (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n      })\n      .map((k: string) => {\n        // join arrays as comma seperated strings\n        const i = queryParams[k];\n        if (Array.isArray(i)) {\n          return {key: k, value: i.join(',')};\n        }\n        return {key: k, value: queryParams[k]};\n      })\n      .map((entry: {key: string, value: string}) => `${entry.key}=${entry.value}`)\n      .join('&');\n\n    return `${urlBase}?${params}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapAPIService.html":{"url":"injectables/MapAPIService.html","title":"injectable - MapAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/map-api/map-api.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _mapPromise\n                            \n                            \n                                    Private\n                                _mapResolver\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindMapEvents\n                            \n                            \n                                createMap\n                            \n                            \n                                destroyMap\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    map\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapAPILoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapAPILoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindMapEvents\n                        \n                        \n                    \n                \n            \n            \n                \nbindMapEvents(event: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap(el: HTMLDivElement, options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLDivElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyMap\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mapPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mapResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'map-api'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        map\n                    \n                \n\n                \n                    \n                        getmap()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-amap/src/services/map-api/map-api.service.ts:39\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MapAPILoaderService } from '../map-api-loader/map-api-loader.service';\nimport { MapOptions } from '../../types/interface';\nimport { AMapClass, Map } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class MapAPIService extends EventBinder {\n  TAG = 'map-api';\n  private _map: Map;\n  private _mapPromise: Promise;\n  private _mapResolver: (map?: Map) => void;\n\n  constructor(private loader: MapAPILoaderService, private logger: LoggerService) {\n    super();\n    this._mapPromise = new Promise(resolve => this._mapResolver = resolve);\n  }\n\n  createMap(el: HTMLDivElement, options: MapOptions): Promise {\n    return this.loader.load().then(() => {\n      this._map = new AMap.Map(el, options);\n      this._mapResolver(this._map);\n      this.logger.d(this.TAG, 'new map created');\n      return this._map;\n    });\n  }\n\n  destroyMap() {\n    this._mapPromise.then(map => {\n      map.clearMap();\n      map.destroy();\n    });\n  }\n\n  get map(): Promise {\n    return this._mapPromise;\n  }\n\n  bindMapEvents(event: string): Observable {\n    return this.bindEvent(this._mapPromise, event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapOptions.html":{"url":"interfaces/MapOptions.html","title":"interface - MapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/map-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        animateEnable\n                                \n                                \n                                            Optional\n                                        buildingAnimation\n                                \n                                \n                                            Optional\n                                        center\n                                \n                                \n                                            Optional\n                                        crs\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        defaultLayer\n                                \n                                \n                                            Optional\n                                        doubleClickZoom\n                                \n                                \n                                            Optional\n                                        dragEnable\n                                \n                                \n                                            Optional\n                                        expandZoomRange\n                                \n                                \n                                            Optional\n                                        features\n                                \n                                \n                                            Optional\n                                        gridMapForeign\n                                \n                                \n                                            Optional\n                                        indoorMap\n                                \n                                \n                                            Optional\n                                        isHotspot\n                                \n                                \n                                            Optional\n                                        jogEnable\n                                \n                                \n                                            Optional\n                                        keyboardEnable\n                                \n                                \n                                            Optional\n                                        labelzIndex\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                            Optional\n                                        layers\n                                \n                                \n                                            Optional\n                                        mapStyle\n                                \n                                \n                                            Optional\n                                        pitch\n                                \n                                \n                                            Optional\n                                        pitchEnable\n                                \n                                \n                                            Optional\n                                        resizeEnable\n                                \n                                \n                                            Optional\n                                        rotateEnable\n                                \n                                \n                                            Optional\n                                        scrollWheel\n                                \n                                \n                                            Optional\n                                        showBuildingBlock\n                                \n                                \n                                            Optional\n                                        showIndoorMap\n                                \n                                \n                                            Optional\n                                        skyColor\n                                \n                                \n                                            Optional\n                                        touchZoom\n                                \n                                \n                                            Optional\n                                        view\n                                \n                                \n                                            Optional\n                                        viewMode\n                                \n                                \n                                            Optional\n                                        zoom\n                                \n                                \n                                            Optional\n                                        zoomEnable\n                                \n                                \n                                            Optional\n                                        zooms\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animateEnable\n                                    \n                                \n                                \n                                    \n                                        animateEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buildingAnimation\n                                    \n                                \n                                \n                                    \n                                        buildingAnimation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crs\n                                    \n                                \n                                \n                                    \n                                        crs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultLayer\n                                    \n                                \n                                \n                                    \n                                        defaultLayer:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        doubleClickZoom\n                                    \n                                \n                                \n                                    \n                                        doubleClickZoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dragEnable\n                                    \n                                \n                                \n                                    \n                                        dragEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expandZoomRange\n                                    \n                                \n                                \n                                    \n                                        expandZoomRange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gridMapForeign\n                                    \n                                \n                                \n                                    \n                                        gridMapForeign:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indoorMap\n                                    \n                                \n                                \n                                    \n                                        indoorMap:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isHotspot\n                                    \n                                \n                                \n                                    \n                                        isHotspot:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jogEnable\n                                    \n                                \n                                \n                                    \n                                        jogEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyboardEnable\n                                    \n                                \n                                \n                                    \n                                        keyboardEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelzIndex\n                                    \n                                \n                                \n                                    \n                                        labelzIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapStyle\n                                    \n                                \n                                \n                                    \n                                        mapStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitchEnable\n                                    \n                                \n                                \n                                    \n                                        pitchEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeEnable\n                                    \n                                \n                                \n                                    \n                                        resizeEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotateEnable\n                                    \n                                \n                                \n                                    \n                                        rotateEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollWheel\n                                    \n                                \n                                \n                                    \n                                        scrollWheel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showBuildingBlock\n                                    \n                                \n                                \n                                    \n                                        showBuildingBlock:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showIndoorMap\n                                    \n                                \n                                \n                                    \n                                        showIndoorMap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skyColor\n                                    \n                                \n                                \n                                    \n                                        skyColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touchZoom\n                                    \n                                \n                                \n                                    \n                                        touchZoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                    \n                                \n                                \n                                    \n                                        view:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewMode\n                                    \n                                \n                                \n                                    \n                                        viewMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomEnable\n                                    \n                                \n                                \n                                    \n                                        zoomEnable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zooms\n                                    \n                                \n                                \n                                    \n                                        zooms:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../class/amap.lng-lat';\n\nexport interface MapOptions {\n  view?: any; // TODO: View2D\n  layers?: any[]; // TODO: TileLayer\n  zoom?: number;\n  center?: LngLat;\n  labelzIndex?: number;\n  zooms?: number[];\n  lang?: string;\n  cursor?: string;\n  crs?: string;\n  animateEnable?: boolean;\n  isHotspot?: boolean;\n  defaultLayer?: any; // TODO: TileLayer\n  rotateEnable?: boolean;\n  resizeEnable?: boolean;\n  showIndoorMap?: boolean;\n  indoorMap?: any; // TODO: IndoorMap\n  expandZoomRange?: boolean;\n  dragEnable?: boolean;\n  zoomEnable?: boolean;\n  doubleClickZoom?: boolean;\n  keyboardEnable?: boolean;\n  jogEnable?: boolean;\n  scrollWheel?: boolean;\n  touchZoom?: boolean;\n  mapStyle?: string;\n  features?: string[];\n  showBuildingBlock?: boolean;\n  viewMode?: string;\n  pitch?: number;\n  pitchEnable?: boolean;\n  buildingAnimation?: boolean;\n  skyColor?: string;\n  gridMapForeign?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerClusterer.html":{"url":"interfaces/MarkerClusterer.html","title":"interface - MarkerClusterer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerClusterer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.marker-clusterer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addMarker\n                                \n                                \n                                    addMarkers\n                                \n                                \n                                    clearMarkers\n                                \n                                \n                                    getClustersCount\n                                \n                                \n                                    getGridSize\n                                \n                                \n                                    getMap\n                                \n                                \n                                    getMarkers\n                                \n                                \n                                    getMaxZoom\n                                \n                                \n                                    getMinClusterSize\n                                \n                                \n                                    getStyles\n                                \n                                \n                                    isAverageCenter\n                                \n                                \n                                    removeMarker\n                                \n                                \n                                    removeMarkers\n                                \n                                \n                                    setAverageCenter\n                                \n                                \n                                    setGridSize\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setMarkers\n                                \n                                \n                                    setMaxZoom\n                                \n                                \n                                    setMinClusterSize\n                                \n                                \n                                    setStyles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \naddMarker(marker: Marker)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMarkers\n                        \n                        \n                    \n                \n            \n            \n                \naddMarkers(markers: Marker[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    markers\n                                    \n                                                Marker[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearMarkers\n                        \n                        \n                    \n                \n            \n            \n                \nclearMarkers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClustersCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetClustersCount()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGridSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetGridSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMarkers\n                        \n                        \n                    \n                \n            \n            \n                \ngetMarkers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Marker[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMaxZoom\n                        \n                        \n                    \n                \n            \n            \n                \ngetMaxZoom()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMinClusterSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetMinClusterSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStyles\n                        \n                        \n                    \n                \n            \n            \n                \ngetStyles()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ClusterStyle[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAverageCenter\n                        \n                        \n                    \n                \n            \n            \n                \nisAverageCenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMarker\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMarker(marker: Marker)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMarkers\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMarkers(markers: Marker[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    markers\n                                    \n                                                Marker[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAverageCenter\n                        \n                        \n                    \n                \n            \n            \n                \nsetAverageCenter(averageCenter: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    averageCenter\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGridSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetGridSize(size: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMarkers\n                        \n                        \n                    \n                \n            \n            \n                \nsetMarkers(markers: Marker[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    markers\n                                    \n                                                Marker[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMaxZoom\n                        \n                        \n                    \n                \n            \n            \n                \nsetMaxZoom(zoom: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zoom\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMinClusterSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetMinClusterSize(size: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStyles\n                        \n                        \n                    \n                \n            \n            \n                \nsetStyles(styles: ClusterStyle[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.marker-clusterer.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    styles\n                                    \n                                                ClusterStyle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MarkerClustererOptions } from '../interface/marker-cluster-options.interface';\nimport { ClusterStyle } from './cluster-style';\nimport { Marker } from './overlays/amap.marker';\nimport { Map } from './amap.map';\n\nexport interface CMarkerClusterer {\n  new (map: Map, markers: Marker[], opts: MarkerClustererOptions): MarkerClusterer;\n}\n\nexport interface MarkerClusterer {\n  addMarker(marker: Marker);\n  removeMarker(marker: Marker);\n  getClustersCount(): number;\n  getGridSize(): number;\n  getMaxZoom(): number;\n  getMinClusterSize(): number;\n  getStyles(): ClusterStyle[];\n  setGridSize(size: number);\n  setMaxZoom(zoom: number);\n  setMinClusterSize(size: number);\n  setStyles(styles: ClusterStyle[]);\n  clearMarkers();\n  setMap(map: Map);\n  setMarkers(markers: Marker[]);\n  getMap(): Map;\n  getMarkers(): Marker[];\n  addMarkers(markers: Marker[]);\n  removeMarkers(markers: Marker[]);\n  isAverageCenter(): boolean;\n  setAverageCenter(averageCenter: boolean);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerClustererOptions.html":{"url":"interfaces/MarkerClustererOptions.html","title":"interface - MarkerClustererOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerClustererOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/marker-cluster-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        averageCenter\n                                \n                                \n                                            Optional\n                                        gridSize\n                                \n                                \n                                            Optional\n                                        maxZoom\n                                \n                                \n                                            Optional\n                                        minClusterSize\n                                \n                                \n                                            Optional\n                                        renderCluserMarker\n                                \n                                \n                                            Optional\n                                        styles\n                                \n                                \n                                        zoomOnClick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        averageCenter\n                                    \n                                \n                                \n                                    \n                                        averageCenter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gridSize\n                                    \n                                \n                                \n                                    \n                                        gridSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxZoom\n                                    \n                                \n                                \n                                    \n                                        maxZoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minClusterSize\n                                    \n                                \n                                \n                                    \n                                        minClusterSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderCluserMarker\n                                    \n                                \n                                \n                                    \n                                        renderCluserMarker:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                    \n                                \n                                \n                                    \n                                        styles:     IClusterStyle[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IClusterStyle[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomOnClick\n                                    \n                                \n                                \n                                    \n                                        zoomOnClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Marker } from '../class/overlays/amap.marker';\nimport { IClusterStyle } from './cluster-style.interface';\n\nexport interface MarkerClustererOptions {\n  gridSize?: number;\n  minClusterSize?: number;\n  maxZoom?: number;\n  averageCenter?: boolean;\n  styles?: IClusterStyle[];\n  renderCluserMarker?: (object: RenderObject) => void;\n  zoomOnClick: boolean;\n}\n\nexport interface RenderObject {\n  count: number;\n  markers: Marker[];\n  marker: Marker;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerClustererService.html":{"url":"injectables/MarkerClustererService.html","title":"injectable - MarkerClustererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerClustererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createStyle\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, pixel: PixelService, size: SizeService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        SizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: MarkerClustererOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MarkerClustererOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStyle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStyle(style: IClusterStyle)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    style\n                                    \n                                                IClusterStyle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ClusterStyle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(cluster: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cluster\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'marker-clusterer-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MarkerClustererOptions, IPixel, ISize, IClusterStyle } from '../../types/interface';\nimport { AMapClass, MarkerClusterer, Map, ClusterStyle } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { SizeService } from '../size/size.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class MarkerClustererService extends EventBinder {\n  TAG = 'marker-clusterer-service';\n  private _map: Promise;\n  private _plugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private pixel: PixelService,\n    private size: SizeService,\n    private plugins: PluginLoaderService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: MarkerClustererOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.MarkerClusterer');\n    }\n\n    return this._plugin.then(() => this._map)\n      .then(map => {\n        if (options.styles) {\n          options.styles = options.styles.map(style => this.createStyle(style));\n        }\n        return new AMap.MarkerClusterer(map, [], options);\n      });\n  }\n\n  destroy(cluster: Promise) {\n    return cluster.then(c => {\n      c.clearMarkers();\n      c.setMap(null);\n    });\n  }\n\n  createStyle(style: IClusterStyle): ClusterStyle {\n    if (style.size) {\n      style.size = this.size.create(style.size, 'size');\n    }\n\n    if (style.offset) {\n      style.offset = this.pixel.create(style.offset, 'offset');\n      if (!style.offset) { delete style.offset; }\n    }\n\n    if (style.imageOffset) {\n      style.imageOffset = this.pixel.create(style.imageOffset, 'imageOffset');\n      if (!style.imageOffset) { delete style.imageOffset; }\n    }\n\n    return style;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkerOptions.html":{"url":"interfaces/MarkerOptions.html","title":"interface - MarkerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/marker-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        angle\n                                \n                                \n                                            Optional\n                                        autoRotation\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        clickable\n                                \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        raiseOnDrag\n                                \n                                \n                                            Optional\n                                        shadow\n                                \n                                \n                                            Optional\n                                        shape\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        topWhenClick\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angle\n                                    \n                                \n                                \n                                    \n                                        angle:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoRotation\n                                    \n                                \n                                \n                                    \n                                        autoRotation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string | Icon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | Icon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         ILabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        raiseOnDrag\n                                    \n                                \n                                \n                                    \n                                        raiseOnDrag:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shadow\n                                    \n                                \n                                \n                                    \n                                        shadow:         Icon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Icon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shape\n                                    \n                                \n                                \n                                    \n                                        shape:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topWhenClick\n                                    \n                                \n                                \n                                    \n                                        topWhenClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ILabel } from '../label.interface';\nimport { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\nimport { Icon } from '../../class/amap.icon';\nimport { Pixel } from '../../class/amap.pixel';\n\nexport interface MarkerOptions {\n  map?: Map;\n  position?: LngLat;\n  offset?: Pixel;\n  icon?: string|Icon;\n  content?: any;\n  topWhenClick?: boolean;\n  bubble?: boolean;\n  draggable?: boolean;\n  raiseOnDrag?: boolean;\n  cursor?: string;\n  visible?: boolean;\n  zIndex?: number;\n  angle?: number;\n  autoRotation?: boolean;\n  shadow?: Icon;\n  title?: string;\n  clickable?: boolean;\n  shape?: any;  // TODO: MarkerShape\n  extData?: any;\n  label?: ILabel;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerService.html":{"url":"injectables/MarkerService.html","title":"injectable - MarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/marker/marker.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, pixel: PixelService, icon: IconService, label: LabelService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/marker/marker.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        LabelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: MarkerOptions, addToMap)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker/marker.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    addToMap\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(marker: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/marker/marker.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    marker\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker/marker.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'marker-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/marker/marker.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MarkerOptions, IPixel } from '../../types/interface';\nimport { AMapClass, Marker, Map, Icon } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { IconService } from '../icon/icon.service';\nimport { LabelService } from '../label/label.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class MarkerService extends EventBinder {\n  TAG = 'marker-service';\n  private _map: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private pixel: PixelService,\n    private icon: IconService,\n    private label: LabelService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: MarkerOptions, addToMap = true): Promise {\n    return this._map.then(map => {\n      if (options.offset) {\n        options.offset = this.pixel.create(options.offset, 'offset');\n      }\n\n      if (options.icon) {\n        options.icon = this.icon.create(options.icon);\n      }\n\n      if (options.shadow) {\n        options.shadow = this.icon.create(options.shadow, 'shadow');\n      }\n\n      if (options.label) {\n        options.label = this.label.create(options.label);\n      }\n\n      if (!options.offset)  { delete options.offset; }\n      if (!options.icon)    { delete options.icon; }\n      if (!options.shadow)  { delete options.shadow; }\n      if (!options.label)   { delete options.label; }\n\n      if (addToMap) {\n        options.map = map;\n      }\n      return new AMap.Marker(options);\n    });\n  }\n\n  destroy(marker: Promise): Promise {\n    return marker.then(m => {\n      m.setMap(null);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseTool.html":{"url":"interfaces/MouseTool.html","title":"interface - MouseTool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseTool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.mouse-tool.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    circle\n                                \n                                \n                                    close\n                                \n                                \n                                    marker\n                                \n                                \n                                    measureArea\n                                \n                                \n                                    polygon\n                                \n                                \n                                    polyline\n                                \n                                \n                                    rectangle\n                                \n                                \n                                    rectZoomIn\n                                \n                                \n                                    rectZoomOut\n                                \n                                \n                                    rule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            circle\n                        \n                        \n                    \n                \n            \n            \n                \ncircle(options: CircleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CircleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(clear: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clear\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            marker\n                        \n                        \n                    \n                \n            \n            \n                \nmarker(options: MarkerOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MarkerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            measureArea\n                        \n                        \n                    \n                \n            \n            \n                \nmeasureArea(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            polygon\n                        \n                        \n                    \n                \n            \n            \n                \npolygon(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            polyline\n                        \n                        \n                    \n                \n            \n            \n                \npolyline(options: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectangle\n                        \n                        \n                    \n                \n            \n            \n                \nrectangle(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectZoomIn\n                        \n                        \n                    \n                \n            \n            \n                \nrectZoomIn(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rectZoomOut\n                        \n                        \n                    \n                \n            \n            \n                \nrectZoomOut(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rule\n                        \n                        \n                    \n                \n            \n            \n                \nrule(options: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.mouse-tool.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from './amap.map';\nimport { CircleOptions } from '../interface/overlays/circle-options.interface';\nimport { MarkerOptions } from '../interface/overlays/marker-options.interface';\nimport { PolygonOptions } from '../interface/overlays/polygon-options.interface';\nimport { PolylineOptions } from '../interface/overlays/polyline-options.interface';\n\nexport interface CMouseTool {\n  new (map: Map): MouseTool;\n}\n\nexport interface MouseTool {\n  marker(options: MarkerOptions);\n  polyline(options: PolylineOptions);\n  polygon(options: PolygonOptions);\n  rectangle(options: PolygonOptions);\n  circle(options: CircleOptions);\n  rule(options: PolylineOptions);\n  measureArea(options: PolygonOptions);\n  rectZoomIn(options: PolygonOptions);\n  rectZoomOut(options: PolygonOptions);\n  close(clear: boolean);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxAmapModule.html":{"url":"modules/NgxAmapModule.html","title":"module - NgxAmapModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxAmapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxAmapModule\n\n\n\ncluster_NgxAmapModule_declarations\n\n\n\ncluster_NgxAmapModule_exports\n\n\n\n\nAmapAutocompleteDirective\n\nAmapAutocompleteDirective\n\n\n\nNgxAmapModule\n\nNgxAmapModule\n\nNgxAmapModule -->\n\nAmapAutocompleteDirective->NgxAmapModule\n\n\n\n\n\nAmapBezierCurveDirective\n\nAmapBezierCurveDirective\n\nNgxAmapModule -->\n\nAmapBezierCurveDirective->NgxAmapModule\n\n\n\n\n\nAmapCircleDirective\n\nAmapCircleDirective\n\nNgxAmapModule -->\n\nAmapCircleDirective->NgxAmapModule\n\n\n\n\n\nAmapCircleMarkerDirective\n\nAmapCircleMarkerDirective\n\nNgxAmapModule -->\n\nAmapCircleMarkerDirective->NgxAmapModule\n\n\n\n\n\nAmapEllipseDirective\n\nAmapEllipseDirective\n\nNgxAmapModule -->\n\nAmapEllipseDirective->NgxAmapModule\n\n\n\n\n\nAmapHeatmapDirective\n\nAmapHeatmapDirective\n\nNgxAmapModule -->\n\nAmapHeatmapDirective->NgxAmapModule\n\n\n\n\n\nAmapInfoWindowComponent\n\nAmapInfoWindowComponent\n\nNgxAmapModule -->\n\nAmapInfoWindowComponent->NgxAmapModule\n\n\n\n\n\nAmapMarkerClustererDirective\n\nAmapMarkerClustererDirective\n\nNgxAmapModule -->\n\nAmapMarkerClustererDirective->NgxAmapModule\n\n\n\n\n\nAmapMarkerDirective\n\nAmapMarkerDirective\n\nNgxAmapModule -->\n\nAmapMarkerDirective->NgxAmapModule\n\n\n\n\n\nAmapPolygonDirective\n\nAmapPolygonDirective\n\nNgxAmapModule -->\n\nAmapPolygonDirective->NgxAmapModule\n\n\n\n\n\nAmapPolylineDirective\n\nAmapPolylineDirective\n\nNgxAmapModule -->\n\nAmapPolylineDirective->NgxAmapModule\n\n\n\n\n\nAmapRectangleDirective\n\nAmapRectangleDirective\n\nNgxAmapModule -->\n\nAmapRectangleDirective->NgxAmapModule\n\n\n\n\n\nAmapTextDirective\n\nAmapTextDirective\n\nNgxAmapModule -->\n\nAmapTextDirective->NgxAmapModule\n\n\n\n\n\nAmapToolBarDirective\n\nAmapToolBarDirective\n\nNgxAmapModule -->\n\nAmapToolBarDirective->NgxAmapModule\n\n\n\n\n\nNgxAmapComponent\n\nNgxAmapComponent\n\nNgxAmapModule -->\n\nNgxAmapComponent->NgxAmapModule\n\n\n\n\n\nAmapAutocompleteDirective \n\nAmapAutocompleteDirective \n\nAmapAutocompleteDirective  -->\n\nNgxAmapModule->AmapAutocompleteDirective \n\n\n\n\n\nAmapBezierCurveDirective \n\nAmapBezierCurveDirective \n\nAmapBezierCurveDirective  -->\n\nNgxAmapModule->AmapBezierCurveDirective \n\n\n\n\n\nAmapCircleDirective \n\nAmapCircleDirective \n\nAmapCircleDirective  -->\n\nNgxAmapModule->AmapCircleDirective \n\n\n\n\n\nAmapCircleMarkerDirective \n\nAmapCircleMarkerDirective \n\nAmapCircleMarkerDirective  -->\n\nNgxAmapModule->AmapCircleMarkerDirective \n\n\n\n\n\nAmapEllipseDirective \n\nAmapEllipseDirective \n\nAmapEllipseDirective  -->\n\nNgxAmapModule->AmapEllipseDirective \n\n\n\n\n\nAmapHeatmapDirective \n\nAmapHeatmapDirective \n\nAmapHeatmapDirective  -->\n\nNgxAmapModule->AmapHeatmapDirective \n\n\n\n\n\nAmapInfoWindowComponent \n\nAmapInfoWindowComponent \n\nAmapInfoWindowComponent  -->\n\nNgxAmapModule->AmapInfoWindowComponent \n\n\n\n\n\nAmapMarkerClustererDirective \n\nAmapMarkerClustererDirective \n\nAmapMarkerClustererDirective  -->\n\nNgxAmapModule->AmapMarkerClustererDirective \n\n\n\n\n\nAmapMarkerDirective \n\nAmapMarkerDirective \n\nAmapMarkerDirective  -->\n\nNgxAmapModule->AmapMarkerDirective \n\n\n\n\n\nAmapPolygonDirective \n\nAmapPolygonDirective \n\nAmapPolygonDirective  -->\n\nNgxAmapModule->AmapPolygonDirective \n\n\n\n\n\nAmapPolylineDirective \n\nAmapPolylineDirective \n\nAmapPolylineDirective  -->\n\nNgxAmapModule->AmapPolylineDirective \n\n\n\n\n\nAmapRectangleDirective \n\nAmapRectangleDirective \n\nAmapRectangleDirective  -->\n\nNgxAmapModule->AmapRectangleDirective \n\n\n\n\n\nAmapTextDirective \n\nAmapTextDirective \n\nAmapTextDirective  -->\n\nNgxAmapModule->AmapTextDirective \n\n\n\n\n\nAmapToolBarDirective \n\nAmapToolBarDirective \n\nAmapToolBarDirective  -->\n\nNgxAmapModule->AmapToolBarDirective \n\n\n\n\n\nNgxAmapComponent \n\nNgxAmapComponent \n\nNgxAmapComponent  -->\n\nNgxAmapModule->NgxAmapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-amap/src/ngx-amap.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmapAutocompleteDirective\n                        \n                        \n                            AmapBezierCurveDirective\n                        \n                        \n                            AmapCircleDirective\n                        \n                        \n                            AmapCircleMarkerDirective\n                        \n                        \n                            AmapEllipseDirective\n                        \n                        \n                            AmapHeatmapDirective\n                        \n                        \n                            AmapInfoWindowComponent\n                        \n                        \n                            AmapMarkerClustererDirective\n                        \n                        \n                            AmapMarkerDirective\n                        \n                        \n                            AmapPolygonDirective\n                        \n                        \n                            AmapPolylineDirective\n                        \n                        \n                            AmapRectangleDirective\n                        \n                        \n                            AmapTextDirective\n                        \n                        \n                            AmapToolBarDirective\n                        \n                        \n                            NgxAmapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmapAutocompleteDirective\n                        \n                        \n                            AmapBezierCurveDirective\n                        \n                        \n                            AmapCircleDirective\n                        \n                        \n                            AmapCircleMarkerDirective\n                        \n                        \n                            AmapEllipseDirective\n                        \n                        \n                            AmapHeatmapDirective\n                        \n                        \n                            AmapInfoWindowComponent\n                        \n                        \n                            AmapMarkerClustererDirective\n                        \n                        \n                            AmapMarkerDirective\n                        \n                        \n                            AmapPolygonDirective\n                        \n                        \n                            AmapPolylineDirective\n                        \n                        \n                            AmapRectangleDirective\n                        \n                        \n                            AmapTextDirective\n                        \n                        \n                            AmapToolBarDirective\n                        \n                        \n                            NgxAmapComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(mapAPILoaderConfig?: IMapAPILoaderConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/ngx-amap.module.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapAPILoaderConfig\n                                    \n                                                IMapAPILoaderConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MapAPILoaderService, MAP_API_CONFIG, IMapAPILoaderConfig } from './services/map-api-loader/map-api-loader.service';\nimport { LoggerService } from './services/logger/logger.service';\nimport { DebugLoggerService } from './services/logger/debug-logger.service';\nimport { WindowRef, DocumentRef } from './utils/browser-globals';\nimport { NgxAmapComponent } from './components/ngx-amap/ngx-amap.component';\nimport { AmapMarkerDirective } from './directives/amap-marker/amap-marker.directive';\nimport { AmapInfoWindowComponent } from './components/amap-info-window/amap-info-window.component';\nimport { AmapPolylineDirective } from './directives/amap-polyline/amap-polyline.directive';\nimport { AmapPolygonDirective } from './directives/amap-polygon/amap-polygon.directive';\nimport { AmapToolBarDirective } from './directives/amap-toolbar/amap-toolbar.directive';\nimport { AmapMarkerClustererDirective } from './directives/amap-marker-clusterer/amap-marker-clusterer.directive';\nimport { PixelService } from './services/pixel/pixel.service';\nimport { SizeService } from './services/size/size.service';\nimport { IconService } from './services/icon/icon.service';\nimport { LabelService } from './services/label/label.service';\nimport { AmapGeocoderService, AmapGeocoderWrapper } from './services/amap-geocoder/amap-geocoder.service';\nimport { PluginLoaderService } from './services/plugin-loader/plugin-loader.service';\nimport { AmapAutocompleteService, AmapAutocompleteWrapper } from './services/amap-autocomplete/amap-autocomplete.service';\nimport { AmapAutocompleteDirective } from './directives/amap-autocomplete/amap-autocomplete.directive';\nimport { AmapPlaceSearchService, AmapPlaceSearchWrapper } from './services/amap-place-search/amap-place-search.service';\nimport { AmapDistrictSearchService, AmapDistrictSearchWrapper } from './services/amap-district-search/amap-district-search.service';\nimport { AmapCircleDirective } from './directives/amap-circle/amap-circle.directive';\nimport { AmapCircleMarkerDirective } from './directives/amap-circle-marker/amap-circle-marker.directive';\nimport { AmapMouseToolService, AmapMouseToolWrapper } from './services/amap-mouse-tool/amap-mouse-tool.service';\nimport { AmapTextDirective } from './directives/amap-text/amap-text.directive';\nimport { AmapBezierCurveDirective } from './directives/amap-bezier-curve/amap-bezier-curve.directive';\nimport { AmapEllipseDirective } from './directives/amap-ellipse/amap-ellipse.directive';\nimport { AmapRectangleDirective } from './directives/amap-rectangle/amap-rectangle.directive';\nimport { AmapHeatmapDirective } from './directives/amap-heatmap/amap-heatmap.directive';\nimport { AmapDrivingService, AmapDrivingWrapper } from './services/amap-driving/amap-driving.service';\nimport { AmapTruckDrivingService, AmapTruckDrivingWrapper } from './services/amap-truck-driving/amap-truck-driving.service';\nimport { AmapTransferService, AmapTransferWrapper } from './services/amap-transfer/amap-transfer.service';\nimport { AmapWalkingService, AmapWalkingWrapper } from './services/amap-walking/amap-walking.service';\nimport { AmapRidingService, AmapRidingWrapper } from './services/amap-riding/amap-riding.service';\n\n@NgModule({\n  declarations: [\n    NgxAmapComponent,\n    AmapMarkerDirective,\n    AmapInfoWindowComponent,\n    AmapPolylineDirective,\n    AmapToolBarDirective,\n    AmapMarkerClustererDirective,\n    AmapAutocompleteDirective,\n    AmapCircleDirective,\n    AmapCircleMarkerDirective,\n    AmapPolygonDirective,\n    AmapTextDirective,\n    AmapBezierCurveDirective,\n    AmapEllipseDirective,\n    AmapRectangleDirective,\n    AmapHeatmapDirective\n  ],\n  exports: [\n    NgxAmapComponent,\n    AmapMarkerDirective,\n    AmapInfoWindowComponent,\n    AmapPolylineDirective,\n    AmapToolBarDirective,\n    AmapMarkerClustererDirective,\n    AmapAutocompleteDirective,\n    AmapCircleDirective,\n    AmapCircleMarkerDirective,\n    AmapPolygonDirective,\n    AmapTextDirective,\n    AmapBezierCurveDirective,\n    AmapEllipseDirective,\n    AmapRectangleDirective,\n    AmapHeatmapDirective\n  ]\n})\nexport class NgxAmapModule {\n  static forRoot(mapAPILoaderConfig?: IMapAPILoaderConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxAmapModule,\n      providers: [\n        WindowRef,\n        DocumentRef,\n        MapAPILoaderService,\n        { provide: MAP_API_CONFIG, useValue: mapAPILoaderConfig },\n        { provide: LoggerService, useClass: mapAPILoaderConfig.debug ? DebugLoggerService : LoggerService },\n        PixelService,\n        SizeService,\n        IconService,\n        LabelService,\n        AmapGeocoderService,\n        PluginLoaderService,\n        AmapAutocompleteService,\n        AmapMouseToolService,\n        AmapPlaceSearchService,\n        AmapDistrictSearchService,\n        AmapDrivingService,\n        AmapTransferService,\n        AmapWalkingService,\n        AmapRidingService,\n        AmapTruckDrivingService\n      ]\n    };\n  }\n}\n\nexport {\n  NgxAmapComponent,\n  AmapMarkerDirective,\n  AmapInfoWindowComponent,\n  AmapPolylineDirective,\n  AmapToolBarDirective,\n  AmapMarkerClustererDirective,\n  AmapGeocoderService,\n  AmapGeocoderWrapper,\n  AmapAutocompleteService,\n  AmapAutocompleteWrapper,\n  AmapAutocompleteDirective,\n  AmapPlaceSearchService,\n  AmapPlaceSearchWrapper,\n  AmapDistrictSearchService,\n  AmapDistrictSearchWrapper,\n  AmapMouseToolService,\n  AmapMouseToolWrapper,\n  AmapCircleDirective,\n  AmapCircleMarkerDirective,\n  AmapPolygonDirective,\n  AmapTextDirective,\n  AmapBezierCurveDirective,\n  AmapEllipseDirective,\n  AmapRectangleDirective,\n  AmapHeatmapDirective,\n  AmapDrivingService,\n  AmapDrivingWrapper,\n  AmapTransferService,\n  AmapTransferWrapper,\n  AmapWalkingService,\n  AmapWalkingWrapper,\n  AmapRidingService,\n  AmapRidingWrapper,\n  AmapTruckDrivingService,\n  AmapTruckDrivingWrapper\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/photo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Photo {\n  title: string;\n  url: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pixel.html":{"url":"interfaces/Pixel.html","title":"interface - Pixel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pixel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.pixel.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IPixel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    equals\n                                \n                                \n                                    getX\n                                \n                                \n                                    getY\n                                \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \nequals(point: Pixel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.pixel.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                Pixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getX\n                        \n                        \n                    \n                \n            \n            \n                \ngetX()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.pixel.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getY\n                        \n                        \n                    \n                \n            \n            \n                \ngetY()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.pixel.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.pixel.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IPixel } from '../interface/pixel.interface';\n\n// AMap.Pixel\nexport interface Pixel extends IPixel {\n  getX(): number;\n  getY(): number;\n  equals(point: Pixel): boolean;\n  toString(): string;\n}\n\nexport interface CPixel {\n  new (x: number, y: number): Pixel;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PixelService.html":{"url":"injectables/PixelService.html","title":"injectable - PixelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PixelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/pixel/pixel.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/pixel/pixel.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: IPixel, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/pixel/pixel.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                IPixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Pixel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verify\n                        \n                        \n                    \n                \n            \n            \n                \nverify(pixel: IPixel, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/pixel/pixel.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pixel\n                                    \n                                                IPixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pixel-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/pixel/pixel.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPixel } from '../../types/interface';\nimport { AMapClass, Pixel } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class PixelService {\n  TAG = 'pixel-service';\n\n  constructor(private logger: LoggerService) {}\n\n  create(options: IPixel, name?: string): Pixel {\n    if (this.verify(options, name)) {\n      return new AMap.Pixel(options.x, options.y);\n    } else {\n      return undefined;\n    }\n  }\n\n  verify(pixel: IPixel, name?: string) {\n    if (typeof pixel.x !== 'number' || typeof pixel.y !== 'number') {\n      this.logger.e(`${name || 'pixel'} should have type {x: number, y: number}`);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaceSearch.html":{"url":"interfaces/PlaceSearch.html","title":"interface - PlaceSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlaceSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/amap.place-search.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    detailOnAMAP\n                                \n                                \n                                    getDetails\n                                \n                                \n                                    getLang\n                                \n                                \n                                    poiOnAMAP\n                                \n                                \n                                    search\n                                \n                                \n                                    searchInBounds\n                                \n                                \n                                    searchNearBy\n                                \n                                \n                                    setCity\n                                \n                                \n                                    setCityLimit\n                                \n                                \n                                    setLang\n                                \n                                \n                                    setPageIndex\n                                \n                                \n                                    setPageSize\n                                \n                                \n                                    setType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detailOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \ndetailOnAMAP(obj: IPoiObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                IPoiObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetDetails(POIID: string, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    POIID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLang\n                        \n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            poiOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \npoiOnAMAP(obj: IPoiObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                IPoiObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchInBounds\n                        \n                        \n                    \n                \n            \n            \n                \nsearchInBounds(keyword: string, bounds: Bounds | Polygon, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bounds\n                                    \n                                            Bounds | Polygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchNearBy\n                        \n                        \n                    \n                \n            \n            \n                \nsearchNearBy(keyword: string, center: ILngLat, radius: number, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    center\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    radius\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityLimit\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityLimit(limit: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLang\n                        \n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageIndex(pageIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageSize(setPageSize: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    setPageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/place-search/amap.place-search.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PlaceSearchOptions } from '../../interface/place-search-options.interface';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { callbackFn } from '../../interface/callback.type';\nimport { SearchResult } from './search-result';\nimport { Bounds } from '../amap.bounds';\nimport { Polygon } from '../overlays/amap.polygon';\n\nexport interface CPlaceSearch {\n  new (opts?: PlaceSearchOptions): PlaceSearch;\n}\n\nexport interface PlaceSearch {\n  search(keyword: string, callback: callbackFn);\n  searchNearBy(keyword: string, center: ILngLat, radius: number, callback: callbackFn);\n  searchInBounds(keyword: string, bounds: Bounds|Polygon, callback: callbackFn);\n  getDetails(POIID: string, callback: callbackFn);\n  setType(type: string);\n  setCityLimit(limit: boolean);\n  setPageIndex(pageIndex: number);\n  setPageSize(setPageSize: number);\n  setCity(city: string);\n  setLang(lang: string);\n  getLang(): string;\n  clear();\n  poiOnAMAP(obj: IPoiObject);\n  detailOnAMAP(obj: IPoiObject);\n}\n\nexport interface IPoiObject {\n  id: string;\n  name: string;\n  location: ILngLat;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaceSearchOptions.html":{"url":"interfaces/PlaceSearchOptions.html","title":"interface - PlaceSearchOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlaceSearchOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/place-search-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        citylimit\n                                \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        pageIndex\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        renderStyle\n                                \n                                \n                                            Optional\n                                        showCover\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citylimit\n                                    \n                                \n                                \n                                    \n                                        citylimit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageIndex\n                                    \n                                \n                                \n                                    \n                                        pageIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:     string | HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderStyle\n                                    \n                                \n                                \n                                    \n                                        renderStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCover\n                                    \n                                \n                                \n                                    \n                                        showCover:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../class/amap.map';\n\nexport interface PlaceSearchOptions {\n  city?: string;\n  citylimit?: boolean;\n  children?: number;\n  type?: string;\n  lang?: string;\n  pageSize?: number;\n  pageIndex?: number;\n  extensions?: string;\n  map?: Map;\n  panel?: string|HTMLElement;\n  showCover?: boolean;\n  renderStyle?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLoaderService.html":{"url":"injectables/PluginLoaderService.html","title":"injectable - PluginLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: MapAPILoaderService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        MapAPILoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'plugin-loader'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\nimport { MapAPILoaderService } from '../map-api-loader/map-api-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class PluginLoaderService {\n  TAG = 'plugin-loader';\n\n  constructor(private loader: MapAPILoaderService, private logger: LoggerService) {}\n\n  load(name: string): Promise {\n    this.logger.d(this.TAG, 'loading plugin:', name);\n\n    return this.loader.load().then(() => {\n      return new Promise(resolve => {\n        this.logger.d(this.TAG, 'loading plugin:', name, 'COMPLETE');\n        AMap.plugin(name, () => resolve());\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/poi.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        address\n                                \n                                \n                                        adname\n                                \n                                \n                                        cinema\n                                \n                                \n                                        citycode\n                                \n                                \n                                        cityname\n                                \n                                \n                                        deep_type\n                                \n                                \n                                        dining\n                                \n                                \n                                        discount\n                                \n                                \n                                        discounts\n                                \n                                \n                                        distance\n                                \n                                \n                                        email\n                                \n                                \n                                        entr_location\n                                \n                                \n                                        exit_location\n                                \n                                \n                                        groupbuy\n                                \n                                \n                                        groupbuys\n                                \n                                \n                                        hotel\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                                \n                                        pcode\n                                \n                                \n                                        pname\n                                \n                                \n                                        postcode\n                                \n                                \n                                        scenic\n                                \n                                \n                                        tel\n                                \n                                \n                                        type\n                                \n                                \n                                        website\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adname\n                                    \n                                \n                                \n                                    \n                                        adname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cinema\n                                    \n                                \n                                \n                                    \n                                        cinema:         Cinema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cinema\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cityname\n                                    \n                                \n                                \n                                    \n                                        cityname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deep_type\n                                    \n                                \n                                \n                                    \n                                        deep_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dining\n                                    \n                                \n                                \n                                    \n                                        dining:         Dining\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Dining\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discount\n                                    \n                                \n                                \n                                    \n                                        discount:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discounts\n                                    \n                                \n                                \n                                    \n                                        discounts:         Discount[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Discount[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entr_location\n                                    \n                                \n                                \n                                    \n                                        entr_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exit_location\n                                    \n                                \n                                \n                                    \n                                        exit_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupbuy\n                                    \n                                \n                                \n                                    \n                                        groupbuy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupbuys\n                                    \n                                \n                                \n                                    \n                                        groupbuys:         Groupbuy[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Groupbuy[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hotel\n                                    \n                                \n                                \n                                    \n                                        hotel:         Hotel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Hotel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pcode\n                                    \n                                \n                                \n                                    \n                                        pcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pname\n                                    \n                                \n                                \n                                    \n                                        pname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                    \n                                \n                                \n                                    \n                                        postcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenic\n                                    \n                                \n                                \n                                    \n                                        scenic:         Scenic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Scenic\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tel\n                                    \n                                \n                                \n                                    \n                                        tel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Discount } from './discount';\nimport { Groupbuy } from './groupbuy';\nimport { Dining } from './dining';\nimport { Hotel } from './hotel';\nimport { Cinema } from './cinema';\nimport { Scenic } from './scenic';\n\nexport interface Poi {\n  // basic:\n  id: string;\n  name: string;\n  type: string;\n  location: LngLat;\n  address: string;\n  distance: number;\n  tel: string;\n\n  // detail:\n  website: string;\n  pcode: string;\n  citycode: string;\n  adcode: string;\n  postcode: string;\n  pname: string;\n  cityname: string;\n  adname: string;\n  email: string;\n  entr_location: LngLat;\n  exit_location: LngLat;\n  groupbuy: boolean;\n  discount: boolean;\n\n  // deep:\n  groupbuys: Groupbuy[];\n  discounts: Discount[];\n  deep_type: string;\n  dining: Dining;\n  hotel: Hotel;\n  cinema: Cinema;\n  scenic: Scenic;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PoiList.html":{"url":"interfaces/PoiList.html","title":"interface - PoiList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PoiList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/poi-list.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        pageIndex\n                                \n                                \n                                        pageSize\n                                \n                                \n                                        pois\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageIndex\n                                    \n                                \n                                \n                                    \n                                        pageIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:         Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Poi } from './poi';\n\nexport interface PoiList {\n  pois: Poi[];\n  pageIndex: number;\n  pageSize: number;\n  count: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Polygon.html":{"url":"interfaces/Polygon.html","title":"interface - Polygon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Polygon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.polygon.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getArea\n                                \n                                \n                                    getBounds\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getPath\n                                \n                                \n                                    hide\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setPath\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArea\n                        \n                        \n                    \n                \n            \n            \n                \ngetArea()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PolygonOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetPath()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(path: PolygonPath)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                PolygonPath\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polygon.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { PolygonOptions, ILngLat } from '../../interface';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\n\nexport interface CPolygon {\n  new (opts: PolygonOptions): Polygon;\n}\n\nexport type PolygonPath = Array|Array>|Array|Array>;\n\nexport interface Polygon {\n  setPath(path: PolygonPath): void;\n  getPath(): number[][];\n  setOptions(opt: PolygonOptions): void;\n  getOptions(): PolygonOptions;\n  getBounds(): Bounds;\n  getArea(): number;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PolygonOptions.html":{"url":"interfaces/PolygonOptions.html","title":"interface - PolygonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PolygonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/polygon-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         PolygonPath\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PolygonPath\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { PolygonPath } from '../../class/overlays/amap.polygon';\n\nexport interface PolygonOptions {\n  map?: Map;\n  zIndex?: number;\n  path?: PolygonPath;\n  bubble?: boolean;\n  cursor?: string;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  extData?: any;\n  draggable?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolygonService.html":{"url":"injectables/PolygonService.html","title":"injectable - PolygonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolygonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/polygon/polygon.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: PolygonOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolygonOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(p: Polygon)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Polygon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(polygon: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polygon\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'polygon-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polygon/polygon.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Polygon, Map, PolyEditor} from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { PolygonOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class PolygonService extends EventBinder {\n  TAG = 'polygon-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: PolygonOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Polygon(options);\n    });\n  }\n\n  destroy(polygon: Promise): Promise {\n    return polygon.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.PolyEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(p: Polygon): Promise {\n    return this._map.then(map => new AMap.PolyEditor(map, p));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Polyline.html":{"url":"interfaces/Polyline.html","title":"interface - Polyline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Polyline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.polyline.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getBounds\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getLength\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    getPath\n                                \n                                \n                                    hide\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    setPath\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetLength()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PolylineOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetPath()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(path: number[][])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.polyline.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { Bounds } from '../amap.bounds';\nimport { PolylineOptions } from '../../interface/overlays/polyline-options.interface';\n\nexport interface CPolyline {\n  new (opts: PolylineOptions): Polyline;\n}\n\nexport interface Polyline {\n  setPath(path: number[][]): void;\n  getPath(): number[][];\n  setOptions(opt: PolylineOptions): void;\n  getOptions(): PolylineOptions;\n  getLength(): number;\n  getBounds(): Bounds;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PolylineOptions.html":{"url":"interfaces/PolylineOptions.html","title":"interface - PolylineOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PolylineOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/polyline-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        borderWeight\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        geodesic\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        lineJoin\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        showDir\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        borderWeight\n                                    \n                                \n                                \n                                    \n                                        borderWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geodesic\n                                    \n                                \n                                \n                                    \n                                        geodesic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineJoin\n                                    \n                                \n                                \n                                    \n                                        lineJoin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDir\n                                    \n                                \n                                \n                                    \n                                        showDir:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface PolylineOptions {\n  map?: Map;\n  zIndex?: number;\n  bubble?: boolean;\n  geodesic?: boolean;\n  isOutline?: boolean;\n  borderWeight?: number;\n  outlineColor?: string;\n  path?: number[][];\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  lineJoin?: string;\n  extData?: any;\n  showDir?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PolylineService.html":{"url":"injectables/PolylineService.html","title":"injectable - PolylineService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PolylineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/polyline/polyline.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: PolylineOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PolylineOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(p: Polyline)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                Polyline\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(polyline: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    polyline\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'polyline-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/polyline/polyline.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Polyline, Map, PolyEditor } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { PolylineOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class PolylineService extends EventBinder {\n  TAG = 'polyline-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: PolylineOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Polyline(options);\n    });\n  }\n\n  destroy(polyline: Promise): Promise {\n    return polyline.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.PolyEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(p: Polyline): Promise {\n    return this._map.then(map => new AMap.PolyEditor(map, p));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReGeocode.html":{"url":"interfaces/ReGeocode.html","title":"interface - ReGeocode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReGeocode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/re-geocode.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addressComponent\n                                \n                                \n                                        crosses\n                                \n                                \n                                        formattedAddress\n                                \n                                \n                                        pois\n                                \n                                \n                                        roads\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addressComponent\n                                    \n                                \n                                \n                                    \n                                        addressComponent:         AddressComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AddressComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crosses\n                                    \n                                \n                                \n                                    \n                                        crosses:         Cross[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cross[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedAddress\n                                    \n                                \n                                \n                                    \n                                        formattedAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:     ReGeocodePoi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReGeocodePoi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roads\n                                    \n                                \n                                \n                                    \n                                        roads:         Road[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Road[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { AddressComponent } from './address-component';\nimport { ReGeocodePoi } from './re-geocode-poi';\nimport { Road } from './road';\nimport { Cross } from './cross';\n\nexport interface ReGeocode {\n  addressComponent: AddressComponent;\n  formattedAddress: string;\n  roads: Road[];\n  crosses: Cross[];\n  pois: ReGeocodePoi[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReGeocodePoi.html":{"url":"interfaces/ReGeocodePoi.html","title":"interface - ReGeocodePoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReGeocodePoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/re-geocode-poi.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        businessArea\n                                \n                                \n                                        direction\n                                \n                                \n                                        distance\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                                \n                                        tel\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        businessArea\n                                    \n                                \n                                \n                                    \n                                        businessArea:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tel\n                                    \n                                \n                                \n                                    \n                                        tel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface ReGeocodePoi {\n  id: string;\n  name: string;\n  type: string;\n  tel: string;\n  distance: number;\n  direction: string;\n  address: string;\n  location: LngLat;\n  businessArea: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReGeocodeResult.html":{"url":"interfaces/ReGeocodeResult.html","title":"interface - ReGeocodeResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReGeocodeResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/re-geocode-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                                \n                                        regeocode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        regeocode\n                                    \n                                \n                                \n                                    \n                                        regeocode:         ReGeocode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReGeocode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ReGeocode } from './re-geocode';\n\nexport interface ReGeocodeResult {\n  info: string;\n  regeocode: ReGeocode;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rectangle.html":{"url":"interfaces/Rectangle.html","title":"interface - Rectangle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rectangle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    contains\n                                \n                                \n                                    getArea\n                                \n                                \n                                    getBounds\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getOptions\n                                \n                                \n                                    hide\n                                \n                                \n                                    setBounds\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOptions\n                                \n                                \n                                    show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contains\n                        \n                        \n                    \n                \n            \n            \n                \ncontains(point: LngLat | ILngLat)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                LngLat | ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArea\n                        \n                        \n                    \n                \n            \n            \n                \ngetArea()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBounds\n                        \n                        \n                    \n                \n            \n            \n                \ngetBounds()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Bounds\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         RectangleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBounds\n                        \n                        \n                    \n                \n            \n            \n                \nsetBounds(bounds: Bounds)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                Bounds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(opt: RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.rectangle.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Map } from '../amap.map';\nimport { RectangleOptions } from '../../interface/overlays/rectangle-options.interface';\nimport { LngLat } from '../amap.lng-lat';\nimport { Bounds } from '../amap.bounds';\nimport { ILngLat } from '../../interface/lng-lat.interface';\n\nexport interface CRectangle {\n  new (opts: RectangleOptions): Rectangle;\n}\n\nexport interface Rectangle {\n  setOptions(opt: RectangleOptions): void;\n  getOptions(): RectangleOptions;\n  getBounds(): Bounds;\n  setBounds(bounds: Bounds): void;\n  getArea(): number;\n  hide(): void;\n  show(): void;\n  setMap(map: Map): void;\n  setExtData(ext: any): void;\n  getExtData(): any;\n  contains(point: LngLat|ILngLat): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RectangleOptions.html":{"url":"interfaces/RectangleOptions.html","title":"interface - RectangleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RectangleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/rectangle-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bounds\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        fillOpacity\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        strokeDasharray\n                                \n                                \n                                            Optional\n                                        strokeOpacity\n                                \n                                \n                                            Optional\n                                        strokeStyle\n                                \n                                \n                                            Optional\n                                        strokeWeight\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bounds\n                                    \n                                \n                                \n                                    \n                                        bounds:         Bounds\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Bounds\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillOpacity\n                                    \n                                \n                                \n                                    \n                                        fillOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeDasharray\n                                    \n                                \n                                \n                                    \n                                        strokeDasharray:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeOpacity\n                                    \n                                \n                                \n                                    \n                                        strokeOpacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeStyle\n                                    \n                                \n                                \n                                    \n                                        strokeStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeWeight\n                                    \n                                \n                                \n                                    \n                                        strokeWeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\nimport { Bounds } from '../../class/amap.bounds';\n\nexport interface RectangleOptions {\n  map?: Map;\n  zIndex?: number;\n  bounds?: Bounds;\n  bubble?: boolean;\n  cursor?: string;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  fillColor?: string;\n  fillOpacity?: number;\n  strokeStyle?: string;\n  strokeDasharray?: number[];\n  extData?: any;\n  draggable?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RectangleService.html":{"url":"injectables/RectangleService.html","title":"injectable - RectangleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RectangleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/rectangle/rectangle.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _editorPlugin\n                            \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createEditor\n                            \n                            \n                                destroy\n                            \n                            \n                                loadEditor\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: RectangleOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RectangleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor(r: Rectangle)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                                Rectangle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(rectangle: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rectangle\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadEditor\n                        \n                        \n                    \n                \n            \n            \n                \nloadEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editorPlugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rectangle-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/rectangle/rectangle.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, Rectangle, Map, RectangleEditor } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { RectangleOptions } from '../../types/interface';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class RectangleService extends EventBinder {\n  TAG = 'rectangle-service';\n  private _map: Promise;\n  private _editorPlugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private plugins: PluginLoaderService,\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: RectangleOptions): Promise {\n    return this._map.then(map => {\n      options.map = map;\n      return new AMap.Rectangle(options);\n    });\n  }\n\n  destroy(rectangle: Promise): Promise {\n    return rectangle.then(m => {\n      m.setMap(null);\n    });\n  }\n\n  loadEditor(): Promise {\n    if (!this._editorPlugin) {\n      this._editorPlugin = this.plugins.load('AMap.RectangleEditor');\n    }\n\n    return this._editorPlugin;\n  }\n\n  createEditor(r: Rectangle): Promise {\n    return this._map.then(map => new AMap.RectangleEditor(map, r));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderObject.html":{"url":"interfaces/RenderObject.html","title":"interface - RenderObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RenderObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/marker-cluster-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        marker\n                                \n                                \n                                        markers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        marker\n                                    \n                                \n                                \n                                    \n                                        marker:         Marker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Marker\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markers\n                                    \n                                \n                                \n                                    \n                                        markers:         Marker[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Marker[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Marker } from '../class/overlays/amap.marker';\nimport { IClusterStyle } from './cluster-style.interface';\n\nexport interface MarkerClustererOptions {\n  gridSize?: number;\n  minClusterSize?: number;\n  maxZoom?: number;\n  averageCenter?: boolean;\n  styles?: IClusterStyle[];\n  renderCluserMarker?: (object: RenderObject) => void;\n  zoomOnClick: boolean;\n}\n\nexport interface RenderObject {\n  count: number;\n  markers: Marker[];\n  marker: Marker;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RideRoute.html":{"url":"interfaces/RideRoute.html","title":"interface - RideRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RideRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/ride-route.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        steps\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:         RideStep[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RideStep[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RideStep } from './ride-step';\n\nexport interface RideRoute {\n  distance: number;\n  time: number;\n  steps: RideStep[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RideStep.html":{"url":"interfaces/RideStep.html","title":"interface - RideStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RideStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/ride-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        assist_action\n                                \n                                \n                                        distance\n                                \n                                \n                                        end_location\n                                \n                                \n                                        instruction\n                                \n                                \n                                        orientation\n                                \n                                \n                                        path\n                                \n                                \n                                        road\n                                \n                                \n                                        start_location\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assist_action\n                                    \n                                \n                                \n                                    \n                                        assist_action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_location\n                                    \n                                \n                                \n                                    \n                                        end_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instruction\n                                    \n                                \n                                \n                                    \n                                        instruction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         LngLat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_location\n                                    \n                                \n                                \n                                    \n                                        start_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface RideStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  distance: number;\n  time: number;\n  path: LngLat[];\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Riding.html":{"url":"interfaces/Riding.html","title":"interface - Riding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Riding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/amap.riding.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    search\n                                \n                                \n                                    search\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/riding/amap.riding.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: ILngLat, destination: ILngLat, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/riding/amap.riding.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(points: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/riding/amap.riding.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { RidingResult } from './riding-result';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { RidingOptions } from '../../interface/riding/riding-options.interface';\n\nexport interface CRiding {\n  new (opts?: RidingOptions): Riding;\n}\n\nexport interface Riding {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  clear();\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RidingOptions.html":{"url":"interfaces/RidingOptions.html","title":"interface - RidingOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RidingOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/riding/riding-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        policy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface RidingOptions {\n  map?: Map;\n  policy?: any;\n  panel?: any;\n  hideMarkers?: boolean;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RidingResult.html":{"url":"interfaces/RidingResult.html","title":"interface - RidingResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RidingResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/riding/riding-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        destination\n                                \n                                \n                                        end\n                                \n                                \n                                        info\n                                \n                                \n                                        origin\n                                \n                                \n                                        routes\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:         RideRoute\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RideRoute\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Poi } from '../place-search/poi';\nimport { RideRoute } from './ride-route';\n\nexport interface RidingResult {\n  info: string;\n  origin: LngLat;\n  destination: LngLat;\n  start: Poi;\n  end: Poi;\n  count: number;\n  routes: RideRoute;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Road.html":{"url":"interfaces/Road.html","title":"interface - Road","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Road\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/geocoder/road.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        direction\n                                \n                                \n                                        distance\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface Road {\n  id: string;\n  name: string;\n  distance: number;\n  location: LngLat;\n  direction: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenic.html":{"url":"interfaces/Scenic.html","title":"interface - Scenic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/scenic.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deep_src\n                                \n                                \n                                        intro\n                                \n                                \n                                        level\n                                \n                                \n                                        opentime\n                                \n                                \n                                        opentime_GDF\n                                \n                                \n                                        ordering_wap_url\n                                \n                                \n                                        ordering_web_url\n                                \n                                \n                                        photos\n                                \n                                \n                                        price\n                                \n                                \n                                        rating\n                                \n                                \n                                        recommened\n                                \n                                \n                                        season\n                                \n                                \n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deep_src\n                                    \n                                \n                                \n                                    \n                                        deep_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime\n                                    \n                                \n                                \n                                    \n                                        opentime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opentime_GDF\n                                    \n                                \n                                \n                                    \n                                        opentime_GDF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_wap_url\n                                    \n                                \n                                \n                                    \n                                        ordering_wap_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordering_web_url\n                                    \n                                \n                                \n                                    \n                                        ordering_web_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:         Photo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                    \n                                \n                                \n                                    \n                                        rating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommened\n                                    \n                                \n                                \n                                    \n                                        recommened:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                    \n                                \n                                \n                                    \n                                        season:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from './photo';\n\nexport interface Scenic {\n  intro: string;\n  rating: string;\n  deep_src: string;\n  level: string;\n  price: string;\n  season: string;\n  recommened: string;\n  theme: string;\n  ordering_wap_url: string;\n  ordering_web_url: string;\n  opentime_GDF: string;\n  opentime: string;\n  photos: Photo[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/place-search/search-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cityList\n                                \n                                \n                                        info\n                                \n                                \n                                        keywordList\n                                \n                                \n                                        poiList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cityList\n                                    \n                                \n                                \n                                    \n                                        cityList:         CityInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywordList\n                                    \n                                \n                                \n                                    \n                                        keywordList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        poiList\n                                    \n                                \n                                \n                                    \n                                        poiList:         PoiList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PoiList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PoiList } from './poi-list';\nimport { CityInfo } from './city-info';\n\nexport interface SearchResult {\n  info: string;\n  poiList: PoiList;\n  keywordList: string[];\n  cityList: CityInfo[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Segment.html":{"url":"interfaces/Segment.html","title":"interface - Segment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Segment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/segment.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        instruction\n                                \n                                \n                                        time\n                                \n                                \n                                        transit\n                                \n                                \n                                        transit_mode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instruction\n                                    \n                                \n                                \n                                    \n                                        instruction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transit\n                                    \n                                \n                                \n                                    \n                                        transit:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transit_mode\n                                    \n                                \n                                \n                                    \n                                        transit_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Segment {\n  instruction: string;\n  transit_mode: string;\n  time: number;\n  transit: any; // TODO: TransitDetail | WalkDetails\n  distance: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Size.html":{"url":"interfaces/Size.html","title":"interface - Size","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Size\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.size.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ISize\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getHeight\n                                \n                                \n                                    getWidth\n                                \n                                \n                                    toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeight\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.size.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetWidth()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.size.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.size.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISize } from '../interface/size.interface';\n\n// AMap.Size\nexport interface Size extends ISize {\n  getWidth(): number;\n  getHeight(): number;\n  toString(): string;\n}\n\nexport interface CSize {\n  new (width: number, height: number): Size;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SizeService.html":{"url":"injectables/SizeService.html","title":"injectable - SizeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/size/size.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/size/size.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: ISize, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/size/size.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Size\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verify\n                        \n                        \n                    \n                \n            \n            \n                \nverify(size: ISize, name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/size/size.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'size-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/size/size.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ISize } from '../../types/interface';\nimport { AMapClass, Size } from '../../types/class';\nimport { LoggerService } from '../logger/logger.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class SizeService {\n  TAG = 'size-service';\n\n  constructor(private logger: LoggerService) {}\n\n  create(options: ISize, name?: string): Size {\n    if (this.verify(options, name)) {\n      return new AMap.Size(options.width, options.height);\n    } else {\n      return undefined;\n    }\n  }\n\n  verify(size: ISize, name?: string) {\n    if (typeof size.width !== 'number' || typeof size.height !== 'number') {\n      this.logger.e(`${name || 'size'} should have type {width: number, height: number}`);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TMC.html":{"url":"interfaces/TMC.html","title":"interface - TMC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TMC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/drive-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        lcode\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lcode\n                                    \n                                \n                                \n                                    \n                                        lcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { District } from '../district-search/district';\n\nexport interface DriveStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n  distance: number;\n  tolls: number;\n  tolls_distance: number;\n  toll_road: string;\n  time: number;\n  path: LngLat[];\n  cities: ViaCity[];\n  tmcs: TMC[];\n}\n\nexport interface ViaCity {\n  name: string;\n  citycode: string;\n  adcode: string;\n  districts: District[];\n}\n\nexport interface TMC {\n  lcode: string;\n  distance: number;\n  status: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Text.html":{"url":"interfaces/Text.html","title":"interface - Text","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Text\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/overlays/amap.text.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAngle\n                                \n                                \n                                    getAnimation\n                                \n                                \n                                    getClickable\n                                \n                                \n                                    getDraggable\n                                \n                                \n                                    getExtData\n                                \n                                \n                                    getMap\n                                \n                                \n                                    getOffset\n                                \n                                \n                                    getPosition\n                                \n                                \n                                    getShadow\n                                \n                                \n                                    getText\n                                \n                                \n                                    getTitle\n                                \n                                \n                                    getTop\n                                \n                                \n                                    getzIndex\n                                \n                                \n                                    hide\n                                \n                                \n                                    moveAlong\n                                \n                                \n                                    moveTo\n                                \n                                \n                                    pauseMove\n                                \n                                \n                                    resumeMove\n                                \n                                \n                                    setAngle\n                                \n                                \n                                    setAnimation\n                                \n                                \n                                    setClickable\n                                \n                                \n                                    setCursor\n                                \n                                \n                                    setDraggable\n                                \n                                \n                                    setExtData\n                                \n                                \n                                    setMap\n                                \n                                \n                                    setOffset\n                                \n                                \n                                    setPosition\n                                \n                                \n                                    setShadow\n                                \n                                \n                                    setStyle\n                                \n                                \n                                    setText\n                                \n                                \n                                    setTitle\n                                \n                                \n                                    setTop\n                                \n                                \n                                    setzIndex\n                                \n                                \n                                    show\n                                \n                                \n                                    stopMove\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAngle\n                        \n                        \n                    \n                \n            \n            \n                \ngetAngle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAnimation\n                        \n                        \n                    \n                \n            \n            \n                \ngetAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClickable\n                        \n                        \n                    \n                \n            \n            \n                \ngetClickable()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDraggable\n                        \n                        \n                    \n                \n            \n            \n                \ngetDraggable()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExtData\n                        \n                        \n                    \n                \n            \n            \n                \ngetExtData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetMap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetOffset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Pixel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getShadow\n                        \n                        \n                    \n                \n            \n            \n                \ngetShadow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Icon\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTop\n                        \n                        \n                    \n                \n            \n            \n                \ngetTop()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getzIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetzIndex()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveAlong\n                        \n                        \n                    \n                \n            \n            \n                \nmoveAlong(path: number[][] | LngLat[], speed: number, f?: (k?: any) => void, circlable?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                number[][] | LngLat[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    speed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    f\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    circlable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveTo\n                        \n                        \n                    \n                \n            \n            \n                \nmoveTo(lnglat: LngLat | number[], speed: number, f?: (k?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    speed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    f\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pauseMove\n                        \n                        \n                    \n                \n            \n            \n                \npauseMove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resumeMove\n                        \n                        \n                    \n                \n            \n            \n                \nresumeMove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAngle\n                        \n                        \n                    \n                \n            \n            \n                \nsetAngle(angle: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    angle\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nsetAnimation(animate: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    animate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setClickable\n                        \n                        \n                    \n                \n            \n            \n                \nsetClickable(clickable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clickable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCursor\n                        \n                        \n                    \n                \n            \n            \n                \nsetCursor(cursor: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cursor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDraggable\n                        \n                        \n                    \n                \n            \n            \n                \nsetDraggable(draggable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    draggable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExtData\n                        \n                        \n                    \n                \n            \n            \n                \nsetExtData(ext: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetMap(map: Map)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOffset\n                        \n                        \n                    \n                \n            \n            \n                \nsetOffset(offset: Pixel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                Pixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(lnglat: LngLat | number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lnglat\n                                    \n                                                LngLat | number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setShadow\n                        \n                        \n                    \n                \n            \n            \n                \nsetShadow(icon: Icon)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                Icon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStyle\n                        \n                        \n                    \n                \n            \n            \n                \nsetStyle(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setText\n                        \n                        \n                    \n                \n            \n            \n                \nsetText(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTop\n                        \n                        \n                    \n                \n            \n            \n                \nsetTop(isTop: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTop\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setzIndex\n                        \n                        \n                    \n                \n            \n            \n                \nsetzIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopMove\n                        \n                        \n                    \n                \n            \n            \n                \nstopMove()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/overlays/amap.text.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Map } from '../amap.map';\nimport { Pixel } from '../amap.pixel';\nimport { Icon } from '../amap.icon';\nimport { TextOptions } from '../../interface/overlays/text-options.interface';\n\nexport interface CText {\n  new (opts: TextOptions): Text;\n}\n\nexport interface Text {\n  getText(): string;\n  setText(text: string): void;\n  setStyle(obj: any): void;\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  setAnimation(animate: string): void;\n  getAnimation(): string;\n  setClickable(clickable: boolean): void;\n  getClickable(): boolean;\n  getPosition(): LngLat;\n  setPosition(lnglat: LngLat|number[]): void;\n  setAngle(angle: number): void;\n  getAngle(): number;\n  setzIndex(index: number): void;\n  getzIndex(): number;\n  setDraggable(draggable: boolean): void;\n  getDraggable(): boolean;\n  hide(): void;\n  show(): void;\n  setCursor(cursor: string): void;\n  moveAlong(path: number[][]|LngLat[], speed: number, f?: (k: any) => any, circlable?: boolean): void;\n  moveTo(lnglat: LngLat|number[], speed: number, f?: (k: any) => any): void;\n  stopMove(): void;\n  pauseMove(): void;\n  resumeMove(): void;\n  setMap(map: Map): void;\n  getMap(): Map;\n  setTitle(title: string): void;\n  getTitle(): string;\n  setTop(isTop: boolean): void;\n  getTop(): boolean;\n  setShadow(icon: Icon): void;\n  getShadow(): Icon;\n  setExtData(ext: any): void;\n  getExtData(): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextOptions.html":{"url":"interfaces/TextOptions.html","title":"interface - TextOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TextOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/overlays/text-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        angle\n                                \n                                \n                                            Optional\n                                        animation\n                                \n                                \n                                            Optional\n                                        autoRotation\n                                \n                                \n                                            Optional\n                                        bubble\n                                \n                                \n                                            Optional\n                                        clickable\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        extData\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        raiseOnDrag\n                                \n                                \n                                            Optional\n                                        shadow\n                                \n                                \n                                            Optional\n                                        style\n                                \n                                \n                                            Optional\n                                        text\n                                \n                                \n                                            Optional\n                                        textAlign\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        topWhenClick\n                                \n                                \n                                            Optional\n                                        verticalAlign\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angle\n                                    \n                                \n                                \n                                    \n                                        angle:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        animation\n                                    \n                                \n                                \n                                    \n                                        animation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoRotation\n                                    \n                                \n                                \n                                    \n                                        autoRotation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bubble\n                                    \n                                \n                                \n                                    \n                                        bubble:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickable\n                                    \n                                \n                                \n                                    \n                                        clickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extData\n                                    \n                                \n                                \n                                    \n                                        extData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         Pixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        raiseOnDrag\n                                    \n                                \n                                \n                                    \n                                        raiseOnDrag:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shadow\n                                    \n                                \n                                \n                                    \n                                        shadow:         Icon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Icon\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textAlign\n                                    \n                                \n                                \n                                    \n                                        textAlign:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topWhenClick\n                                    \n                                \n                                \n                                    \n                                        topWhenClick:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verticalAlign\n                                    \n                                \n                                \n                                    \n                                        verticalAlign:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\nimport { LngLat } from '../../class/amap.lng-lat';\nimport { Icon } from '../../class/amap.icon';\nimport { Pixel } from '../../class/amap.pixel';\n\nexport interface TextOptions {\n  text?: string;\n  textAlign?: string;\n  verticalAlign?: string;\n  map?: Map;\n  position?: LngLat;\n  offset?: Pixel;\n  topWhenClick?: boolean;\n  bubble?: boolean;\n  draggable?: boolean;\n  raiseOnDrag?: boolean;\n  cursor?: string;\n  visible?: boolean;\n  zIndex?: number;\n  angle?: number;\n  autoRotation?: boolean;\n  animation?: string;\n  shadow?: Icon;\n  title?: string;\n  clickable?: boolean;\n  extData?: any;\n  style?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TextService.html":{"url":"injectables/TextService.html","title":"injectable - TextService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/text/text.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, pixel: PixelService, icon: IconService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/text/text.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixel\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: TextOptions, addToMap)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/text/text.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                TextOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    addToMap\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(text: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/text/text.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/text/text.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'text-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/text/text.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TextOptions, IPixel } from '../../types/interface';\nimport { AMapClass, Text, Map, Icon } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { PixelService } from '../pixel/pixel.service';\nimport { IconService } from '../icon/icon.service';\nimport { EventBinder } from '../../utils/event-binder';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class TextService extends EventBinder {\n  TAG = 'text-service';\n  private _map: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private pixel: PixelService,\n    private icon: IconService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: TextOptions, addToMap = true): Promise {\n    return this._map.then(map => {\n      if (options.offset) {\n        options.offset = this.pixel.create(options.offset, 'offset');\n      }\n\n      if (options.shadow) {\n        options.shadow = this.icon.create(options.shadow, 'shadow');\n      }\n\n      if (!options.offset)  { delete options.offset; }\n      if (!options.shadow)  { delete options.shadow; }\n\n      if (addToMap) {\n        options.map = map;\n      }\n      return new AMap.Text(options);\n    });\n  }\n\n  destroy(text: Promise): Promise {\n    return text.then(m => {\n      m.setMap(null);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tip.html":{"url":"interfaces/Tip.html","title":"interface - Tip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/autocomplete/tip.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        district\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        district\n                                    \n                                \n                                \n                                    \n                                        district:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Tip {\n  name: string;\n  district: string;\n  adcode: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolBar.html":{"url":"interfaces/ToolBar.html","title":"interface - ToolBar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/amap.toolbar.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    doLocation\n                                \n                                \n                                    getLocation\n                                \n                                \n                                    getOffset\n                                \n                                \n                                    hide\n                                \n                                \n                                    hideDirection\n                                \n                                \n                                    hideLocation\n                                \n                                \n                                    hideRuler\n                                \n                                \n                                    setOffset\n                                \n                                \n                                    show\n                                \n                                \n                                    showDirection\n                                \n                                \n                                    showLocation\n                                \n                                \n                                    showRuler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLocation\n                        \n                        \n                    \n                \n            \n            \n                \ndoLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LngLat\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetOffset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Pixel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDirection\n                        \n                        \n                    \n                \n            \n            \n                \nhideDirection()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideLocation\n                        \n                        \n                    \n                \n            \n            \n                \nhideLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideRuler\n                        \n                        \n                    \n                \n            \n            \n                \nhideRuler()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOffset\n                        \n                        \n                    \n                \n            \n            \n                \nsetOffset(offset: Pixel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                Pixel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDirection\n                        \n                        \n                    \n                \n            \n            \n                \nshowDirection()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocation\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showRuler\n                        \n                        \n                    \n                \n            \n            \n                \nshowRuler()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/amap.toolbar.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ToolbarOptions } from '../interface/toolbar-options.interface';\nimport { Pixel } from './amap.pixel';\nimport { LngLat } from './amap.lng-lat';\n\nexport interface CToolBar {\n  new (opts?: ToolbarOptions): ToolBar;\n}\n\nexport interface ToolBar {\n  getOffset(): Pixel;\n  setOffset(offset: Pixel): void;\n  hideRuler(): void;\n  showRuler(): void;\n  hideDirection(): void;\n  showDirection(): void;\n  hideLocation(): void;\n  showLocation(): void;\n  doLocation(): void;\n  getLocation(): LngLat;\n  hide(): void;\n  show(): void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolBarService.html":{"url":"injectables/ToolBarService.html","title":"injectable - ToolBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToolBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/services/toolbar/toolbar.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventBinder\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _map\n                            \n                            \n                                    Private\n                                _plugin\n                            \n                            \n                                TAG\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                bindEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapAPIService, pixels: PixelService, plugins: PluginLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        MapAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pixels\n                                                  \n                                                        \n                                                                        PixelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        PluginLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options: ToolbarOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ToolbarOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(toolbar: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toolbar\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindEvent\n                        \n                        \n                    \n                \n            \n            \n                \nbindEvent(target: Promise | T, event: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EventBinder\n\n                \n            \n            \n                \n                        Defined in         EventBinder:7\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Promise | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _plugin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tool-bar-service'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-amap/src/services/toolbar/toolbar.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AMapClass, ToolBar, Map } from '../../types/class';\nimport { MapAPIService } from '../map-api/map-api.service';\nimport { EventBinder } from '../../utils/event-binder';\nimport { ToolbarOptions } from '../../types/interface';\nimport { PixelService } from '../pixel/pixel.service';\nimport { PluginLoaderService } from '../plugin-loader/plugin-loader.service';\n\ndeclare const AMap: AMapClass;\n\n@Injectable()\nexport class ToolBarService extends EventBinder {\n  TAG = 'tool-bar-service';\n  private _map: Promise;\n  private _plugin: Promise;\n\n  constructor(\n    private map: MapAPIService,\n    private pixels: PixelService,\n    private plugins: PluginLoaderService\n  ) {\n    super();\n    this._map = map.map;\n  }\n\n  create(options: ToolbarOptions): Promise {\n    if (!this._plugin) {\n      this._plugin = this.plugins.load('AMap.ToolBar');\n    }\n\n    return this._plugin.then(() => this._map)\n      .then(map => {\n        if (options.offset) {\n          options.offset = this.pixels.create(options.offset, 'offset');\n        }\n\n        if (!options.offset) { delete options.offset; }\n        const toolbar = new AMap.ToolBar(options);\n        map.addControl(toolbar);\n        return toolbar;\n      });\n  }\n\n  destroy(toolbar: Promise): Promise {\n    return this._map.then(map => toolbar.then(t => map.removeControl(t)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolbarOptions.html":{"url":"interfaces/ToolbarOptions.html","title":"interface - ToolbarOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolbarOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/toolbar-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoPosition\n                                \n                                \n                                            Optional\n                                        direction\n                                \n                                \n                                            Optional\n                                        liteStyle\n                                \n                                \n                                            Optional\n                                        locate\n                                \n                                \n                                            Optional\n                                        locationMarker\n                                \n                                \n                                            Optional\n                                        noIpLocate\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        ruler\n                                \n                                \n                                            Optional\n                                        useNative\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoPosition\n                                    \n                                \n                                \n                                    \n                                        autoPosition:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        liteStyle\n                                    \n                                \n                                \n                                    \n                                        liteStyle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locate\n                                    \n                                \n                                \n                                    \n                                        locate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locationMarker\n                                    \n                                \n                                \n                                    \n                                        locationMarker:         Marker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Marker\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noIpLocate\n                                    \n                                \n                                \n                                    \n                                        noIpLocate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:         IPixel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPixel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruler\n                                    \n                                \n                                \n                                    \n                                        ruler:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useNative\n                                    \n                                \n                                \n                                    \n                                        useNative:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../class/amap.map';\nimport { Marker } from '../class/overlays/amap.marker';\nimport { IPixel } from '../interface/pixel.interface';\n\nexport interface ToolbarOptions {\n  offset?: IPixel;\n  position?: string;\n  ruler?: boolean;\n  noIpLocate?: boolean;\n  locate?: boolean;\n  liteStyle?: boolean;\n  direction?: boolean;\n  autoPosition?: boolean;\n  locationMarker?: Marker;\n  useNative?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transfer.html":{"url":"interfaces/Transfer.html","title":"interface - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/amap.transfer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    leaveAt\n                                \n                                \n                                    search\n                                \n                                \n                                    search\n                                \n                                \n                                    searchOnAMAP\n                                \n                                \n                                    setCity\n                                \n                                \n                                    setCityd\n                                \n                                \n                                    setPolicy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            leaveAt\n                        \n                        \n                    \n                \n            \n            \n                \nleaveAt(time: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: ILngLat, destination: ILngLat, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(points: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCity\n                        \n                        \n                    \n                \n            \n            \n                \nsetCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCityd\n                        \n                        \n                    \n                \n            \n            \n                \nsetCityd(city: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nsetPolicy(policy: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/transfer/amap.transfer.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    policy\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { TransferOptions } from '../../interface/transfer/transfer-options.interface';\nimport { TransferResult } from './transfer-result';\n\nexport interface CTransfer {\n  new (opts?: TransferOptions): Transfer;\n}\n\nexport interface Transfer {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  setPolicy(policy: any);\n  setCity(city: string);\n  setCityd(city: string);\n  leaveAt(time: string, data: string);\n  clear();\n  searchOnAMAP(obj: any);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferOptions.html":{"url":"interfaces/TransferOptions.html","title":"interface - TransferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/transfer/transfer-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        cityd\n                                \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        nightflag\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        policy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cityd\n                                    \n                                \n                                \n                                    \n                                        cityd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nightflag\n                                    \n                                \n                                \n                                    \n                                        nightflag:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface TransferOptions {\n  city?: string;\n  nightflag?: boolean;\n  policy?: any;\n  cityd?: string;\n  map?: Map;\n  panel?: any;\n  extensions?: string;\n  hideMarkers?: boolean;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferPlan.html":{"url":"interfaces/TransferPlan.html","title":"interface - TransferPlan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransferPlan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/transfer-plan.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cost\n                                \n                                \n                                        distance\n                                \n                                \n                                        nightLine\n                                \n                                \n                                        path\n                                \n                                \n                                        railway_distance\n                                \n                                \n                                        segments\n                                \n                                \n                                        taxi_distance\n                                \n                                \n                                        time\n                                \n                                \n                                        transit_distance\n                                \n                                \n                                        walking_distance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nightLine\n                                    \n                                \n                                \n                                    \n                                        nightLine:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         LngLat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        railway_distance\n                                    \n                                \n                                \n                                    \n                                        railway_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segments\n                                    \n                                \n                                \n                                    \n                                        segments:         Segment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Segment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxi_distance\n                                    \n                                \n                                \n                                    \n                                        taxi_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transit_distance\n                                    \n                                \n                                \n                                    \n                                        transit_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walking_distance\n                                    \n                                \n                                \n                                    \n                                        walking_distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Segment } from './segment';\n\nexport interface TransferPlan {\n  cost: number;\n  time: number;\n  distance: number;\n  nightLine: boolean;\n  walking_distance: number;\n  transit_distance: number;\n  railway_distance: number;\n  taxi_distance: number;\n  path: LngLat[];\n  segments: Segment[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferResult.html":{"url":"interfaces/TransferResult.html","title":"interface - TransferResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransferResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/transfer/transfer-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        end\n                                \n                                \n                                        info\n                                \n                                \n                                        origin\n                                \n                                \n                                        plans\n                                \n                                \n                                        start\n                                \n                                \n                                        taxi_cost\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plans\n                                    \n                                \n                                \n                                    \n                                        plans:     TransferPlan[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TransferPlan[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxi_cost\n                                    \n                                \n                                \n                                    \n                                        taxi_cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Poi } from '../place-search/poi';\nimport { TransferPlan } from './transfer-plan';\n\nexport interface TransferResult {\n  info: string;\n  origin: LngLat;\n  destination: LngLat;\n  start: Poi;\n  end: Poi;\n  taxi_cost: number;\n  plans: TransferPlan[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TruckDriving.html":{"url":"interfaces/TruckDriving.html","title":"interface - TruckDriving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TruckDriving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    search\n                                \n                                \n                                    setProvinceAndNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(path: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvinceAndNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvinceAndNumber(province: string, number: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/driving/amap.truck-driving.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    province\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { DrivingResult } from './driving-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { TruckDrivingOptions } from '../../interface/driving/truck-driving-options.interface';\n\nexport interface CTruckDriving {\n  new (opts?: TruckDrivingOptions): TruckDriving;\n}\n\nexport interface TruckDriving {\n  search(\n    path: any[],\n    callback: callbackFn\n  );\n  clear();\n  setProvinceAndNumber(province: string, number: string);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TruckDrivingOptions.html":{"url":"interfaces/TruckDrivingOptions.html","title":"interface - TruckDrivingOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TruckDrivingOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/driving/truck-driving-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        axlesNum\n                                \n                                \n                                            Optional\n                                        extensions\n                                \n                                \n                                            Optional\n                                        height\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        load\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        number\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                                \n                                            Optional\n                                        policy\n                                \n                                \n                                            Optional\n                                        province\n                                \n                                \n                                            Optional\n                                        showTraffic\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        weight\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        axlesNum\n                                    \n                                \n                                \n                                    \n                                        axlesNum:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extensions\n                                    \n                                \n                                \n                                    \n                                        extensions:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        load\n                                    \n                                \n                                \n                                    \n                                        load:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policy\n                                    \n                                \n                                \n                                    \n                                        policy:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTraffic\n                                    \n                                \n                                \n                                    \n                                        showTraffic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface TruckDrivingOptions {\n  policy?: any;\n  size?: number;\n  width?: number;\n  height?: number;\n  load?: number;\n  weight?: number;\n  axlesNum?: number;\n  extensions?: string;\n  map?: Map;\n  panel?: any;\n  hideMarkers?: boolean;\n  showTraffic?: boolean;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n  province?: string;\n  number?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getOptionsFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getOptionsFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsFor(component: any, keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/utils.ts:2\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n  static getOptionsFor(component: any, keys: string[]): T {\n    const options: any = {};\n\n    keys.forEach(key => {\n      if (component[key] !== undefined && component[key] !== null) {\n        options[key] = component[key];\n      }\n    });\n\n    return options;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViaCity.html":{"url":"interfaces/ViaCity.html","title":"interface - ViaCity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViaCity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/driving/drive-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adcode\n                                \n                                \n                                        citycode\n                                \n                                \n                                        districts\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adcode\n                                    \n                                \n                                \n                                    \n                                        adcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        citycode\n                                    \n                                \n                                \n                                    \n                                        citycode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        districts\n                                    \n                                \n                                \n                                    \n                                        districts:         District[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         District[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { District } from '../district-search/district';\n\nexport interface DriveStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n  distance: number;\n  tolls: number;\n  tolls_distance: number;\n  toll_road: string;\n  time: number;\n  path: LngLat[];\n  cities: ViaCity[];\n  tmcs: TMC[];\n}\n\nexport interface ViaCity {\n  name: string;\n  citycode: string;\n  adcode: string;\n  districts: District[];\n}\n\nexport interface TMC {\n  lcode: string;\n  distance: number;\n  status: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalkRoute.html":{"url":"interfaces/WalkRoute.html","title":"interface - WalkRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WalkRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/walk-route.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        steps\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:         WalkStep[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WalkStep[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WalkStep } from './walk-step';\n\nexport interface WalkRoute {\n  distance: number;\n  time: number;\n  steps: WalkStep[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalkStep.html":{"url":"interfaces/WalkStep.html","title":"interface - WalkStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WalkStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/walk-step.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        assist_action\n                                \n                                \n                                        distance\n                                \n                                \n                                        end_location\n                                \n                                \n                                        instruction\n                                \n                                \n                                        orientation\n                                \n                                \n                                        path\n                                \n                                \n                                        road\n                                \n                                \n                                        start_location\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assist_action\n                                    \n                                \n                                \n                                    \n                                        assist_action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_location\n                                    \n                                \n                                \n                                    \n                                        end_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instruction\n                                    \n                                \n                                \n                                    \n                                        instruction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         LngLat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_location\n                                    \n                                \n                                \n                                    \n                                        start_location:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\n\nexport interface WalkStep {\n  start_location: LngLat;\n  end_location: LngLat;\n  instruction: string;\n  distance: number;\n  time: number;\n  path: LngLat[];\n  action: string;\n  assist_action: string;\n  orientation: string;\n  road: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Walking.html":{"url":"interfaces/Walking.html","title":"interface - Walking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Walking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/amap.walking.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clear\n                                \n                                \n                                    search\n                                \n                                \n                                    search\n                                \n                                \n                                    searchOnAMAP\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/walking/amap.walking.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(origin: ILngLat, destination: ILngLat, callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/walking/amap.walking.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    destination\n                                    \n                                                ILngLat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(points: any[], callback: callbackFn)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/walking/amap.walking.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                callbackFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchOnAMAP\n                        \n                        \n                    \n                \n            \n            \n                \nsearchOnAMAP(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/types/class/walking/amap.walking.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { callbackFn } from '../../interface/callback.type';\nimport { WalkingResult } from './walking-result';\nimport { LngLat } from '../amap.lng-lat';\nimport { ILngLat } from '../../interface/lng-lat.interface';\nimport { WalkingOptions } from '../../interface/walking/walking-options.interface';\n\nexport interface CWalking {\n  new (opts?: WalkingOptions): Walking;\n}\n\nexport interface Walking {\n  search(\n    origin: ILngLat,\n    destination: ILngLat,\n    callback: callbackFn\n  );\n  search(\n    points: any[],\n    callback: callbackFn\n  );\n  clear();\n  searchOnAMAP(obj: any);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalkingOptions.html":{"url":"interfaces/WalkingOptions.html","title":"interface - WalkingOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WalkingOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/interface/walking/walking-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoFitView\n                                \n                                \n                                            Optional\n                                        hideMarkers\n                                \n                                \n                                            Optional\n                                        isOutline\n                                \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        outlineColor\n                                \n                                \n                                            Optional\n                                        panel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoFitView\n                                    \n                                \n                                \n                                    \n                                        autoFitView:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideMarkers\n                                    \n                                \n                                \n                                    \n                                        hideMarkers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOutline\n                                    \n                                \n                                \n                                    \n                                        isOutline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outlineColor\n                                    \n                                \n                                \n                                    \n                                        outlineColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel\n                                    \n                                \n                                \n                                    \n                                        panel:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Map } from '../../class/amap.map';\n\nexport interface WalkingOptions {\n  map?: Map;\n  panel?: any;\n  hideMarkers?: boolean;\n  isOutline?: boolean;\n  outlineColor?: string;\n  autoFitView?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalkingResult.html":{"url":"interfaces/WalkingResult.html","title":"interface - WalkingResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WalkingResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/types/class/walking/walking-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        destination\n                                \n                                \n                                        end\n                                \n                                \n                                        info\n                                \n                                \n                                        origin\n                                \n                                \n                                        routes\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:         LngLat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LngLat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:         WalkRoute\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WalkRoute\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LngLat } from '../amap.lng-lat';\nimport { Poi } from '../place-search/poi';\nimport { WalkRoute } from './walk-route';\n\nexport interface WalkingResult {\n  info: string;\n  origin: LngLat;\n  destination: LngLat;\n  start: Poi;\n  end: Poi;\n  count: number;\n  routes: WalkRoute;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowRef.html":{"url":"injectables/WindowRef.html","title":"injectable - WindowRef","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-amap/src/utils/browser-globals.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNativeWindow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeWindow\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeWindow()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-amap/src/utils/browser-globals.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WindowRef {\n  getNativeWindow() {\n    return window;\n  }\n}\n\n@Injectable()\nexport class DocumentRef {\n  getNativeDocument() {\n    return document;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n2.2.1 & 1.4.1 (2019-09-23)\nBugfix\n\n修复 Icon imageSize issue#40\n\n\n2.2.0 & 1.4.0 (2018-11-29)\nNew\n\n支持路径规划：\nAMap.Driving 驾车路线规划服务：AmapDrivingService\nAMap.TruckDriving 货车路线规划服务：AmapTruckDrivingService\nAMap.Transfer 公交换乘路线规划服务：AmapTransferService\nAMap.Walking 步行路线规划服务：AmapWalkingService\nAMap.Riding 骑行路线规划服务：AmapRidingService\n\n\n\n\n2.1.1 & 1.3.3 (2018-06-22)\nBugfix\n\n[amapAutocomplete] 切换city时不起作用 issue#23\n\n\n2.1.0 (2018-05-24)\nNew\n\n新增支持图层AMap.Heatmap指令：amap-heatmap\n\n\n2.0.0 (2018-05-11)\nNew\n\n支持Angular 6\n\n\n1.3.2 (2018-04-17)\nNew\n\n新增支持AMap.DistrictSearch行政区查询服务：AmapDistrictSearchService (感谢: noob9527)\n\n\n1.3.1 (2018-03-27)\nNew\n\ndemo AMap.CircleEditor编辑功能：amap-circle [editor]=\"true\"\ndemo AMap.PolyEditor编辑功能：amap-polyline, amap-polygon [editor]=\"true\"\ndemo AMap.BezierCurveEditor编辑功能：amap-bezier-curve [editor]=\"true\" [editorOptions]=\"editorOptions\"\ndemo AMap.EllipseEditor编辑功能：amap-ellipse [editor]=\"true\"\ndemo AMap.RectangleEditor编辑功能：amap-rectangle [editor]=\"true\"\n添加editor相关事件emitter，例如：(editorAddnode), (editorAdjust)等，详见各demo\n\n\n1.3.0 (2018-03-26)\nNew\n\n新增支持覆盖物AMap.Polygon指令：amap-polygon\n新增支持覆盖物AMap.Text指令：amap-text\n新增支持覆盖物AMap.BezierCurve指令：amap-bezier-curve\n新增支持覆盖物AMap.Ellipse指令：amap-ellipse\n新增支持覆盖物AMap.Rectangle指令：amap-rectangle\n\nChanges\n\n对大部分指令和组件增加exportAs，方便在模板中引用指令实例\n\n\n1.2.0 (2018-03-21)\nNew\n\n新增支持AMap.MouseTool鼠标工具插件：AmapMouseToolService (感谢: noob9527)\n\n\n1.1.2 (2018-02-28)\nNew\n\nngx-amap支持gridMapForeign选项，以显示国外的地图细节\n\n\n1.1.1 (2018-02-05)\nNew\n\n新增支持覆盖物AMap.CircleMarker的指令：amap-circle-marker (需要高德API-v1.4.3支持)\n\n\n1.1.0 (2018-02-05)\nNew\n\n新增支持覆盖物AMap.Circle的指令：amap-circle\n\nChanges\n\n默认高德API的baseUrl调整为https协议\n默认高德API的版本调整为1.4.3\n\n\n1.0.1 (2017-11-29)\nBugfix\n\n修复 input[Autocomplete] 指令事件错误的问题\n\n\n1.0.0 (2017-11-29)\nNew\n\n新增支持AMap.PlaceSearch的搜索服务：AmapPlaceSearchService\n\n\n1.0.0-beta.4 (2017-11-28)\nNew\n\n新增支持AMap.Geocoder的地理服务：AmapGeocoderService\n新增支持AMap.Autocomplete的搜索服务和指令：AmapAutocompleteService, AmapAutocompleteDirective\n\nChanges\n\n逻辑变更：marker在没有position的时候不再绘制于默认位置\n逻辑变更：info-window现在会跟随它的hostMarker改变位置\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.0.0\n        \n            @angular/common : ~7.0.0\n        \n            @angular/compiler : ~7.0.0\n        \n            @angular/core : ~7.0.0\n        \n            @angular/forms : ~7.0.0\n        \n            @angular/http : ~7.0.0\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ~7.0.0\n        \n            bootstrap : ^4.3.1\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.4\n        \n            font-awesome : ^4.7.0\n        \n            html-loader : ^0.5.5\n        \n            ngx-bootstrap : ^2.0.5\n        \n            ngx-markdown : ^7.0.0\n        \n            raw-loader : ^0.5.1\n        \n            rxjs : ~6.3.3\n        \n            rxjs-compat : ^6.1.0\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-amap\n\n\n\n\n在线演示\n模块文档\n\nngx-amap 是为在Angular(ver >= 2.x)项目中便捷、高效地使用高德地图Javascript API而构建的组件集合\n目录\n\n版本信息\n最新进度\n安装\n使用\n配置\n指令和服务\n类型声明\n本地演示\n\n版本信息\n@npm:\n\nv2.x for Angular >= 6\nv1.x for Angular \n\nGithub branches:\n\nmaster for Angular >= 6\nv1.x for Angular \n\n最新进度\n2019.09.23: v2.2.1 & v1.4.1\n\n修复 Icon issue#40\n\n2018.11.29: v2.2.0 & v1.4.0\n\n新增支持路径规划：\nAMap.Driving 驾车路线规划服务：AmapDrivingService\nAMap.TruckDriving 货车路线规划服务：AmapTruckDrivingService\nAMap.Transfer 公交换乘路线规划服务：AmapTransferService\nAMap.Walking 步行路线规划服务：AmapWalkingService\nAMap.Riding 骑行路线规划服务：AmapRidingService\n\n\n\n2018.06.22: v2.1.1 & v1.3.3\n\nBugfix：[amapAutocomplete] 切换city时不起作用 issue#23\n\n2018.05.24: v2.1.0\n\n新增支持图层AMap.Heatmap指令：amap-heatmap\n\n2018.05.11: v2.0.0: 支持 Angular 6\n2018.04.17: v1.3.2：行政区查询\n\n新增支持AMap.DistrictSearch行政区查询服务：AmapDistrictSearchService (感谢: noob9527)\n\n2018.03.27: v1.3.1：覆盖物编辑功能 (传送门：高德开放平台API)\n\ndemo AMap.CircleEditor编辑功能：amap-circle [editor]=\"true\"\ndemo AMap.PolyEditor编辑功能：amap-polyline, amap-polygon [editor]=\"true\"\ndemo AMap.BezierCurveEditor编辑功能：amap-bezier-curve [editor]=\"true\" [editorOptions]=\"editorOptions\"\ndemo AMap.EllipseEditor编辑功能：amap-ellipse [editor]=\"true\"\ndemo AMap.RectangleEditor编辑功能：amap-rectangle [editor]=\"true\"\n添加editor相关事件emitter，例如：(editorAddnode), (editorAdjust)等，详见示例\n\n安装\n$ npm install ngx-amap --save\n# or\n$ yarn add ngx-amap使用\n\nimport NgxAmapModule\n\nExample:\nimport { NgxAmapModule } from 'ngx-amap';\n\n@NgModule({\n  imports: [\n    ...,\n    NgxAmapModule.forRoot({\n      apiKey: '你申请的key'\n    })\n  ],\n  ...\n})\nexport class AppModule { }\n\n\n使用 ngx-amap 组件时必须给定高度.\n\n简单示例:\n\nhtml:\n\ncss:\n.demo-map {\nheight: 400px;\n}\n\n\n\n\n可以配合使用其他指令和组件。例如 amap-marker 可以在地图中画覆盖物：点标记。\n\n简单示例:\n\nhtml:\n\n\n\n\n\n\n加入地图控件的方法也很简单，例如：amap-tool-bar\n\n简单示例:\n\nhtml:\n\n\n\n\n\n\n\n更多用法和事件，请参看演示和文档。\n配置\n你可以通过NgxAmapModule的forRoot()方法设置ngx-amap. 它可以接受以下参数传入：\n{\n  apiKey: string;   // *必须， 高德地图的开发者license key\n  apiVersion: string;  // [可选]，默认是'1.4.11'\n  urlPath: string;  // [可选]， 默认是 'https://webapi.amap.com/maps', 可以用它设置HTTPS或者HTTP协议\n}指令和服务\n\n\n\nNGX-AMAP\n类型\n高德地图\n类\n演示示例\n\n\n\n\nngx-amap\nComponent\n地图\nAMap.Map\ndemo\n\n\namap-marker\nDirective\n覆盖物：点标记\nAMap.Marker\ndemo\n\n\namap-text\nDirective\n覆盖物：文本标记\nAMap.Text\ndemo\n\n\namap-polyline\nDirective\n覆盖物：折线\nAMap.Polyline\ndemo\n\n\namap-polygon\nDirective\n覆盖物：多边线\nAMap.Polygon\ndemo\n\n\namap-bezier-curve\nDirective\n覆盖物：贝塞尔曲线\nAMap.BezierCurve\ndemo\n\n\namap-ellipse\nDirective\n覆盖物：椭圆\nAMap.Ellipse\ndemo\n\n\namap-circle\nDirective\n覆盖物：圆\nAMap.Circle\ndemo\n\n\namap-circle-marker\nDirective\n覆盖物：圆点标记\nAMap.CircleMarker\ndemo\n\n\namap-rectangle\nDirective\n覆盖物：矩形\nAMap.Rectangle\ndemo\n\n\namap-info-window\nComponent\n信息窗体\nAMap.InfoWindow\ndemo\n\n\namap-tool-bar\nDirective\n工具条插件\nAMap.ToolBar\ndemo\n\n\namap-marker-clusterer\nDirective\n点聚合插件\nAMap.MarkerClusterer\ndemo\n\n\nAmapGeocoderService\nService\n地理编码服务\nAMap.Geocoder\ndemo\n\n\nAmapAutocompleteService\nService\n关键字提示服务\nAMap.Autocomplete\ndemo\n\n\nAmapPlaceSearchService\nService\n地点搜索服务\nAMap.PlaceSearch\ndemo\n\n\nAmapDistrictSearchService\nService\n行政区搜索服务\nAMap.DistrictSearch\ndemo\n\n\nAmapMouseToolService\nService\n鼠标工具插件\nAMap.MouseTool\ndemo\n\n\namap-heatmap\nDirective\n图层：热力图\nAMap.Heatmap\ndemo\n\n\nAmapDrivingService\nService\n驾车路线规划服务\nAMap.Driving\ndemo\n\n\nAmapTruckDrivingService\nService\n货车路线规划服务\nAMap.TruckDriving\ndemo\n\n\nAmapTransferService\nService\n换乘路线规划服务\nAMap.Transfer\ndemo\n\n\nAmapWalkingService\nService\n步行路线规划服务\nAMap.Walking\ndemo\n\n\nAmapRidingService\nService\n骑行路线规划服务\nAMap.Riding\ndemo\n\n\n\n类型声明\n可以从ngx-amap/types/class中import对AMap类的声明：\n  import { Map, Marker, LngLat, Icon } from 'ngx-amap/types/class';可以从ngx-amap/types/interface中import对ngx-amap所使用的Input类型需要的声明：\n  import { MarkerOptions, IPixel, IIcon } from 'ngx-amap/types/interface';更多类型，请参看在线文档\n本地演示\n\nclone 当前 repo 到本地\n修改 src/app/app.module.ts 以使用自己的的高德API key\n启动demo，浏览器打开: localhost:8080npm install\nnpm run demo\n# or\nyarn\nyarn demo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Xie, Ziyu\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxAmapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxAmapModule\n\n\n\ncluster_NgxAmapModule_declarations\n\n\n\ncluster_NgxAmapModule_exports\n\n\n\n\nAmapAutocompleteDirective\n\nAmapAutocompleteDirective\n\n\n\nNgxAmapModule\n\nNgxAmapModule\n\nNgxAmapModule -->\n\nAmapAutocompleteDirective->NgxAmapModule\n\n\n\n\n\nAmapBezierCurveDirective\n\nAmapBezierCurveDirective\n\nNgxAmapModule -->\n\nAmapBezierCurveDirective->NgxAmapModule\n\n\n\n\n\nAmapCircleDirective\n\nAmapCircleDirective\n\nNgxAmapModule -->\n\nAmapCircleDirective->NgxAmapModule\n\n\n\n\n\nAmapCircleMarkerDirective\n\nAmapCircleMarkerDirective\n\nNgxAmapModule -->\n\nAmapCircleMarkerDirective->NgxAmapModule\n\n\n\n\n\nAmapEllipseDirective\n\nAmapEllipseDirective\n\nNgxAmapModule -->\n\nAmapEllipseDirective->NgxAmapModule\n\n\n\n\n\nAmapHeatmapDirective\n\nAmapHeatmapDirective\n\nNgxAmapModule -->\n\nAmapHeatmapDirective->NgxAmapModule\n\n\n\n\n\nAmapInfoWindowComponent\n\nAmapInfoWindowComponent\n\nNgxAmapModule -->\n\nAmapInfoWindowComponent->NgxAmapModule\n\n\n\n\n\nAmapMarkerClustererDirective\n\nAmapMarkerClustererDirective\n\nNgxAmapModule -->\n\nAmapMarkerClustererDirective->NgxAmapModule\n\n\n\n\n\nAmapMarkerDirective\n\nAmapMarkerDirective\n\nNgxAmapModule -->\n\nAmapMarkerDirective->NgxAmapModule\n\n\n\n\n\nAmapPolygonDirective\n\nAmapPolygonDirective\n\nNgxAmapModule -->\n\nAmapPolygonDirective->NgxAmapModule\n\n\n\n\n\nAmapPolylineDirective\n\nAmapPolylineDirective\n\nNgxAmapModule -->\n\nAmapPolylineDirective->NgxAmapModule\n\n\n\n\n\nAmapRectangleDirective\n\nAmapRectangleDirective\n\nNgxAmapModule -->\n\nAmapRectangleDirective->NgxAmapModule\n\n\n\n\n\nAmapTextDirective\n\nAmapTextDirective\n\nNgxAmapModule -->\n\nAmapTextDirective->NgxAmapModule\n\n\n\n\n\nAmapToolBarDirective\n\nAmapToolBarDirective\n\nNgxAmapModule -->\n\nAmapToolBarDirective->NgxAmapModule\n\n\n\n\n\nNgxAmapComponent\n\nNgxAmapComponent\n\nNgxAmapModule -->\n\nNgxAmapComponent->NgxAmapModule\n\n\n\n\n\nAmapAutocompleteDirective \n\nAmapAutocompleteDirective \n\nAmapAutocompleteDirective  -->\n\nNgxAmapModule->AmapAutocompleteDirective \n\n\n\n\n\nAmapBezierCurveDirective \n\nAmapBezierCurveDirective \n\nAmapBezierCurveDirective  -->\n\nNgxAmapModule->AmapBezierCurveDirective \n\n\n\n\n\nAmapCircleDirective \n\nAmapCircleDirective \n\nAmapCircleDirective  -->\n\nNgxAmapModule->AmapCircleDirective \n\n\n\n\n\nAmapCircleMarkerDirective \n\nAmapCircleMarkerDirective \n\nAmapCircleMarkerDirective  -->\n\nNgxAmapModule->AmapCircleMarkerDirective \n\n\n\n\n\nAmapEllipseDirective \n\nAmapEllipseDirective \n\nAmapEllipseDirective  -->\n\nNgxAmapModule->AmapEllipseDirective \n\n\n\n\n\nAmapHeatmapDirective \n\nAmapHeatmapDirective \n\nAmapHeatmapDirective  -->\n\nNgxAmapModule->AmapHeatmapDirective \n\n\n\n\n\nAmapInfoWindowComponent \n\nAmapInfoWindowComponent \n\nAmapInfoWindowComponent  -->\n\nNgxAmapModule->AmapInfoWindowComponent \n\n\n\n\n\nAmapMarkerClustererDirective \n\nAmapMarkerClustererDirective \n\nAmapMarkerClustererDirective  -->\n\nNgxAmapModule->AmapMarkerClustererDirective \n\n\n\n\n\nAmapMarkerDirective \n\nAmapMarkerDirective \n\nAmapMarkerDirective  -->\n\nNgxAmapModule->AmapMarkerDirective \n\n\n\n\n\nAmapPolygonDirective \n\nAmapPolygonDirective \n\nAmapPolygonDirective  -->\n\nNgxAmapModule->AmapPolygonDirective \n\n\n\n\n\nAmapPolylineDirective \n\nAmapPolylineDirective \n\nAmapPolylineDirective  -->\n\nNgxAmapModule->AmapPolylineDirective \n\n\n\n\n\nAmapRectangleDirective \n\nAmapRectangleDirective \n\nAmapRectangleDirective  -->\n\nNgxAmapModule->AmapRectangleDirective \n\n\n\n\n\nAmapTextDirective \n\nAmapTextDirective \n\nAmapTextDirective  -->\n\nNgxAmapModule->AmapTextDirective \n\n\n\n\n\nAmapToolBarDirective \n\nAmapToolBarDirective \n\nAmapToolBarDirective  -->\n\nNgxAmapModule->AmapToolBarDirective \n\n\n\n\n\nNgxAmapComponent \n\nNgxAmapComponent \n\nNgxAmapComponent  -->\n\nNgxAmapModule->NgxAmapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    34 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    140 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            callbackFn   (projects/.../callback.type.ts)\n                        \n                        \n                            CCircleEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CEllipseEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CircleEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CPolyEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CRectangleEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            CurvePath   (projects/.../bezier-curve-options.interface.ts)\n                        \n                        \n                            EllipseEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            HeatmapData   (projects/.../amap.heatmap.ts)\n                        \n                        \n                            ILngLat   (projects/.../lng-lat.interface.ts)\n                        \n                        \n                            PolyEditor   (projects/.../amap.editor.ts)\n                        \n                        \n                            PolygonPath   (projects/.../amap.polygon.ts)\n                        \n                        \n                            RectangleEditor   (projects/.../amap.editor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-amap/src/types/interface/callback.type.ts\n    \n    \n        \n            \n                \n                    \n                    callbackFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/class/amap.editor.ts\n    \n    \n        \n            \n                \n                    \n                    CCircleEditor\n                \n            \n            \n                \n                        CEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CEllipseEditor\n                \n            \n            \n                \n                        CEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CircleEditor\n                \n            \n            \n                \n                        Editor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CPolyEditor\n                \n            \n            \n                \n                        CEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CRectangleEditor\n                \n            \n            \n                \n                        CEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EllipseEditor\n                \n            \n            \n                \n                        Editor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolyEditor\n                \n            \n            \n                \n                        Editor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RectangleEditor\n                \n            \n            \n                \n                        Editor\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/interface/overlays/bezier-curve-options.interface.ts\n    \n    \n        \n            \n                \n                    \n                    CurvePath\n                \n            \n            \n                \n                        Array> | Array>>\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/class/layers/amap.heatmap.ts\n    \n    \n        \n            \n                \n                    \n                    HeatmapData\n                \n            \n            \n                \n                            HeatmapDataSet | HeatmapDataUrl\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/interface/lng-lat.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ILngLat\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    projects/ngx-amap/src/types/class/overlays/amap.polygon.ts\n    \n    \n        \n            \n                \n                    \n                    PolygonPath\n                \n            \n            \n                \n                            Array | Array> | Array | Array>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_OPTIONS   (projects/.../amap-marker.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-info-window.component.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-autocomplete.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-bezier-curve.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-circle.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-circle-marker.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-ellipse.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-heatmap.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../ngx-amap.component.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-marker-clusterer.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-polygon.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-polyline.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-rectangle.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-text.directive.ts)\n                        \n                        \n                            ALL_OPTIONS   (projects/.../amap-toolbar.directive.ts)\n                        \n                        \n                            AMap   (projects/.../amap-transfer.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-autocomplete.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-district-search.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-driving.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-geocoder.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-mouse-tool.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-place-search.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-riding.service.ts)\n                        \n                        \n                            AMap   (projects/.../event-binder.ts)\n                        \n                        \n                            AMap   (projects/.../amap-truck-driving.service.ts)\n                        \n                        \n                            AMap   (projects/.../amap-walking.service.ts)\n                        \n                        \n                            AMap   (projects/.../bezier-curve.service.ts)\n                        \n                        \n                            AMap   (projects/.../circle.service.ts)\n                        \n                        \n                            AMap   (projects/.../circle-marker.service.ts)\n                        \n                        \n                            AMap   (projects/.../ellipse.service.ts)\n                        \n                        \n                            AMap   (projects/.../heatmap.service.ts)\n                        \n                        \n                            AMap   (projects/.../icon.service.ts)\n                        \n                        \n                            AMap   (projects/.../info-window.service.ts)\n                        \n                        \n                            AMap   (projects/.../label.service.ts)\n                        \n                        \n                            AMap   (projects/.../map-api.service.ts)\n                        \n                        \n                            AMap   (projects/.../text.service.ts)\n                        \n                        \n                            AMap   (projects/.../marker.service.ts)\n                        \n                        \n                            AMap   (projects/.../marker-clusterer.service.ts)\n                        \n                        \n                            AMap   (projects/.../pixel.service.ts)\n                        \n                        \n                            AMap   (projects/.../plugin-loader.service.ts)\n                        \n                        \n                            AMap   (projects/.../polygon.service.ts)\n                        \n                        \n                            AMap   (projects/.../polyline.service.ts)\n                        \n                        \n                            AMap   (projects/.../rectangle.service.ts)\n                        \n                        \n                            AMap   (projects/.../size.service.ts)\n                        \n                        \n                            AMap   (projects/.../toolbar.service.ts)\n                        \n                        \n                            MAP_API_CONFIG   (projects/.../map-api-loader.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-amap/src/directives/amap-marker/amap-marker.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'position',\n  'offset',\n  'icon',\n  'content',\n  'topWhenClick',\n  'bubble',\n  'draggable',\n  'raiseOnDrag',\n  'cursor',\n  'visible',\n  'zIndex',\n  'angle',\n  'autoRotation',\n  'shadow',\n  'title',\n  'clickable',\n  'shape',\n  'extData',\n  'label'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/components/amap-info-window/amap-info-window.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'isCustom',\n  'autoMove',\n  'closeWhenClickMap',\n  'content',\n  'size',\n  'offset',\n  'position',\n  'showShadow'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-autocomplete/amap-autocomplete.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'type',\n  'city',\n  'datatype',\n  'citylimit'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-bezier-curve/amap-bezier-curve.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'path',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'strokeStyle',\n  'strokeDasharray',\n  'zIndex',\n  'showDir',\n  'bubble',\n  'cursor',\n  'isOutline',\n  'outlineColor',\n  'borderWeight',\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-circle/amap-circle.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'strokeDasharray',\n  'extData'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-circle-marker/amap-circle-marker.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'extData'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-ellipse/amap-ellipse.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'center',\n  'bubble',\n  'cursor',\n  'radius',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'strokeDasharray',\n  'extData'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-heatmap/amap-heatmap.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'radius',\n  'gradient',\n  'opacity',\n  'zooms'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/components/ngx-amap/ngx-amap.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'view',\n  'layers',\n  'zoom',\n  'center',\n  'labelzIndex',\n  'zooms',\n  'lang',\n  'cursor',\n  'crs',\n  'animateEnable',\n  'isHotspot',\n  'defaultLayer',\n  'rotateEnable',\n  'resizeEnable',\n  'showIndoorMap',\n  'indoorMap',\n  'expandZoomRange',\n  'dragEnable',\n  'zoomEnable',\n  'doubleClickZoom',\n  'keyboardEnable',\n  'jogEnable',\n  'scrollWheel',\n  'touchZoom',\n  'mapStyle',\n  'features',\n  'showBuildingBlock',\n  'viewMode',\n  'pitch',\n  'pitchEnable',\n  'buildingAnimation',\n  'skyColor',\n  'gridMapForeign'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-marker-clusterer/amap-marker-clusterer.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'gridSize',\n  'minClusterSize',\n  'maxZoom',\n  'averageCenter',\n  'styles',\n  'renderCluserMarker',\n  'zoomOnClick'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-polygon/amap-polygon.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'path',\n  'bubble',\n  'cursor',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'strokeDasharray',\n  'extData',\n  'draggable'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-polyline/amap-polyline.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'bubble',\n  'geodesic',\n  'isOutline',\n  'borderWeight',\n  'outlineColor',\n  'path',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'strokeStyle',\n  'strokeDasharray',\n  'lineJoin',\n  'extData',\n  'showDir'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-rectangle/amap-rectangle.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'zIndex',\n  'bounds',\n  'bubble',\n  'cursor',\n  'strokeColor',\n  'strokeOpacity',\n  'strokeWeight',\n  'fillColor',\n  'fillOpacity',\n  'strokeStyle',\n  'strokeDasharray',\n  'extData',\n  'draggable'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-text/amap-text.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'text',\n  'textAlign',\n  'verticalAlign',\n  'position',\n  'offset',\n  'topWhenClick',\n  'bubble',\n  'draggable',\n  'raiseOnDrag',\n  'cursor',\n  'visible',\n  'zIndex',\n  'angle',\n  'autoRotation',\n  'animation',\n  'shadow',\n  'title',\n  'clickable',\n  'extData',\n  'style'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/directives/amap-toolbar/amap-toolbar.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ALL_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'offset',\n  'position',\n  'ruler',\n  'noIpLocate',\n  'locate',\n  'liteStyle',\n  'direction',\n  'autoPosition',\n  'locationMarker',\n  'useNative'\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-transfer/amap-transfer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-autocomplete/amap-autocomplete.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-district-search/amap-district-search.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-driving/amap-driving.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-geocoder/amap-geocoder.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-mouse-tool/amap-mouse-tool.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-place-search/amap-place-search.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-riding/amap-riding.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/utils/event-binder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-truck-driving/amap-truck-driving.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/amap-walking/amap-walking.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/bezier-curve/bezier-curve.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/circle/circle.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/circle-marker/circle-marker.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/ellipse/ellipse.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/heatmap/heatmap.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/icon/icon.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/info-window/info-window.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/label/label.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/map-api/map-api.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/text/text.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/marker/marker.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/marker-clusterer/marker-clusterer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/pixel/pixel.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/plugin-loader/plugin-loader.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/polygon/polygon.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/polyline/polyline.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/rectangle/rectangle.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/size/size.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/toolbar/toolbar.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AMapClass\n\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-amap/src/services/map-api-loader/map-api-loader.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_API_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('ngx-amap MAP_API_CONFIG')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
